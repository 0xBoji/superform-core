{"abi":[{"type":"function","name":"startBridgeTokensViaCelerIM","inputs":[{"name":"_bridgeData","type":"tuple","internalType":"struct ILiFi.BridgeData","components":[{"name":"transactionId","type":"bytes32","internalType":"bytes32"},{"name":"bridge","type":"string","internalType":"string"},{"name":"integrator","type":"string","internalType":"string"},{"name":"referrer","type":"address","internalType":"address"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"minAmount","type":"uint256","internalType":"uint256"},{"name":"destinationChainId","type":"uint256","internalType":"uint256"},{"name":"hasSourceSwaps","type":"bool","internalType":"bool"},{"name":"hasDestinationCall","type":"bool","internalType":"bool"}]},{"name":"_celerIMData","type":"tuple","internalType":"struct CelerIM.CelerIMData","components":[{"name":"maxSlippage","type":"uint32","internalType":"uint32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"callTo","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"messageBusFee","type":"uint256","internalType":"uint256"},{"name":"bridgeType","type":"uint8","internalType":"enum MsgDataTypes.BridgeSendType"}]}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"swapAndStartBridgeTokensViaCelerIM","inputs":[{"name":"_bridgeData","type":"tuple","internalType":"struct ILiFi.BridgeData","components":[{"name":"transactionId","type":"bytes32","internalType":"bytes32"},{"name":"bridge","type":"string","internalType":"string"},{"name":"integrator","type":"string","internalType":"string"},{"name":"referrer","type":"address","internalType":"address"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"minAmount","type":"uint256","internalType":"uint256"},{"name":"destinationChainId","type":"uint256","internalType":"uint256"},{"name":"hasSourceSwaps","type":"bool","internalType":"bool"},{"name":"hasDestinationCall","type":"bool","internalType":"bool"}]},{"name":"_swapData","type":"tuple[]","internalType":"struct LibSwap.SwapData[]","components":[{"name":"callTo","type":"address","internalType":"address"},{"name":"approveTo","type":"address","internalType":"address"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"receivingAssetId","type":"address","internalType":"address"},{"name":"fromAmount","type":"uint256","internalType":"uint256"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"requiresDeposit","type":"bool","internalType":"bool"}]},{"name":"_celerIMData","type":"tuple","internalType":"struct CelerIM.CelerIMData","components":[{"name":"maxSlippage","type":"uint32","internalType":"uint32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"callTo","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"messageBusFee","type":"uint256","internalType":"uint256"},{"name":"bridgeType","type":"uint8","internalType":"enum MsgDataTypes.BridgeSendType"}]}],"outputs":[],"stateMutability":"payable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"startBridgeTokensViaCelerIM((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint32,uint64,bytes,bytes,uint256,uint8))":"05095ded","swapAndStartBridgeTokensViaCelerIM((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint32,uint64,bytes,bytes,uint256,uint8))":"b06c52da"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"bridge\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"integrator\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasSourceSwaps\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasDestinationCall\",\"type\":\"bool\"}],\"internalType\":\"struct ILiFi.BridgeData\",\"name\":\"_bridgeData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"maxSlippage\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"callTo\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"messageBusFee\",\"type\":\"uint256\"},{\"internalType\":\"enum MsgDataTypes.BridgeSendType\",\"name\":\"bridgeType\",\"type\":\"uint8\"}],\"internalType\":\"struct CelerIM.CelerIMData\",\"name\":\"_celerIMData\",\"type\":\"tuple\"}],\"name\":\"startBridgeTokensViaCelerIM\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"bridge\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"integrator\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasSourceSwaps\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasDestinationCall\",\"type\":\"bool\"}],\"internalType\":\"struct ILiFi.BridgeData\",\"name\":\"_bridgeData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"callTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"approveTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receivingAssetId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"requiresDeposit\",\"type\":\"bool\"}],\"internalType\":\"struct LibSwap.SwapData[]\",\"name\":\"_swapData\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"maxSlippage\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"callTo\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"messageBusFee\",\"type\":\"uint256\"},{\"internalType\":\"enum MsgDataTypes.BridgeSendType\",\"name\":\"bridgeType\",\"type\":\"uint8\"}],\"internalType\":\"struct CelerIM.CelerIMData\",\"name\":\"_celerIMData\",\"type\":\"tuple\"}],\"name\":\"swapAndStartBridgeTokensViaCelerIM\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"LI.FI (https://li.fi)\",\"custom:version\":\"2.0.0\",\"kind\":\"dev\",\"methods\":{\"startBridgeTokensViaCelerIM((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint32,uint64,bytes,bytes,uint256,uint8))\":{\"params\":{\"_bridgeData\":\"The core information needed for bridging\",\"_celerIMData\":\"Data specific to CelerIM\"}},\"swapAndStartBridgeTokensViaCelerIM((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint32,uint64,bytes,bytes,uint256,uint8))\":{\"params\":{\"_bridgeData\":\"The core information needed for bridging\",\"_celerIMData\":\"Data specific to CelerIM\",\"_swapData\":\"An array of swap related data for performing swaps before bridging\"}}},\"title\":\"CelerIM Facet Base\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"startBridgeTokensViaCelerIM((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint32,uint64,bytes,bytes,uint256,uint8))\":{\"notice\":\"Bridges tokens via CBridge\"},\"swapAndStartBridgeTokensViaCelerIM((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint32,uint64,bytes,bytes,uint256,uint8))\":{\"notice\":\"Performs a swap before bridging via CBridge\"}},\"notice\":\"Provides functionality for bridging tokens and data through CBridgeUsed to differentiate between contract instances for mutable and immutable diamond as these cannot be sharedtaken from LiFi contracts https://github.com/lifinance/contracts and stripped down to needs\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/vendor/lifi/CelerIMFacetBase.sol\":\"CelerIMFacetBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/\",\":ERC1155A/=lib/ERC1155A/src/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/\",\":pigeon/=lib/pigeon/src/\",\":solady/=lib/pigeon/lib/solady/\",\":solidity-stringutils/=lib/surl/lib/solidity-stringutils/\",\":solmate/=lib/ERC1155A/lib/solmate/src/\",\":super-vaults/=lib/super-vaults/src/\",\":surl/=lib/surl/\",\":v2-core/=lib/super-vaults/lib/v2-core/contracts/\",\":v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/\",\":v3-core/=lib/super-vaults/lib/v3-core/\"]},\"sources\":{\"src/vendor/lifi/CelerIMFacetBase.sol\":{\"keccak256\":\"0x2aa613e69d49c5ec41d9ab014c7e8bdf1b840e2e1f0a1d1f839d8636931683cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eca5440ccfe9c5342f56719fde5191d6ad79c9f0814caaa350c8079587ec39c9\",\"dweb:/ipfs/QmXE7MMQ4ZAQe3UiWThxLYfYb1Vw9sQ8CCa6Yxjoi7KvTU\"]},\"src/vendor/lifi/ILiFi.sol\":{\"keccak256\":\"0x62f4b1407041df0c15d65f8f23f85b1420e6bd5bc26fe8f8ef9ca21b3b0597bd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c065e7c13fbfa9e5fe6fc6bab9e83c6f0e6c2da804568e52405a9f77e929351\",\"dweb:/ipfs/QmU2gkPutJc6mVKUVrk7FCVMjKfo1y12HLMWKhweSXbkK2\"]},\"src/vendor/lifi/LibSwap.sol\":{\"keccak256\":\"0x26dc9ffce070df754d301552d493e79b7bcca2e71e579e460814f5c34008abb0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e936c58612cd4636d5f2aedbdd55308e01621c879afc53b7584e306fcf8ac1a\",\"dweb:/ipfs/QmU7Pt7BBZ5H84rR7ivoLDyD147ZQCxdfnVfD7wQNZp9eG\"]},\"src/vendor/lifi/celer-network/MsgDataTypes.sol\":{\"keccak256\":\"0x233a90492170ab0aeecc028c691fcc404bc3a10d1d558235ddc91252fc3f8b85\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://9b3d5d1f626c762f76d169015c518b6c7e8afcc62d3dafee51ceb3842359c03a\",\"dweb:/ipfs/QmVorffYWtwJd6Ygeueu8e7nNrBCPQNJpNJBzueSEm1Ctw\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"struct ILiFi.BridgeData","name":"_bridgeData","type":"tuple","components":[{"internalType":"bytes32","name":"transactionId","type":"bytes32"},{"internalType":"string","name":"bridge","type":"string"},{"internalType":"string","name":"integrator","type":"string"},{"internalType":"address","name":"referrer","type":"address"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"bool","name":"hasSourceSwaps","type":"bool"},{"internalType":"bool","name":"hasDestinationCall","type":"bool"}]},{"internalType":"struct CelerIM.CelerIMData","name":"_celerIMData","type":"tuple","components":[{"internalType":"uint32","name":"maxSlippage","type":"uint32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"bytes","name":"callTo","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"messageBusFee","type":"uint256"},{"internalType":"enum MsgDataTypes.BridgeSendType","name":"bridgeType","type":"uint8"}]}],"stateMutability":"payable","type":"function","name":"startBridgeTokensViaCelerIM"},{"inputs":[{"internalType":"struct ILiFi.BridgeData","name":"_bridgeData","type":"tuple","components":[{"internalType":"bytes32","name":"transactionId","type":"bytes32"},{"internalType":"string","name":"bridge","type":"string"},{"internalType":"string","name":"integrator","type":"string"},{"internalType":"address","name":"referrer","type":"address"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"bool","name":"hasSourceSwaps","type":"bool"},{"internalType":"bool","name":"hasDestinationCall","type":"bool"}]},{"internalType":"struct LibSwap.SwapData[]","name":"_swapData","type":"tuple[]","components":[{"internalType":"address","name":"callTo","type":"address"},{"internalType":"address","name":"approveTo","type":"address"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"address","name":"receivingAssetId","type":"address"},{"internalType":"uint256","name":"fromAmount","type":"uint256"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bool","name":"requiresDeposit","type":"bool"}]},{"internalType":"struct CelerIM.CelerIMData","name":"_celerIMData","type":"tuple","components":[{"internalType":"uint32","name":"maxSlippage","type":"uint32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"bytes","name":"callTo","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"messageBusFee","type":"uint256"},{"internalType":"enum MsgDataTypes.BridgeSendType","name":"bridgeType","type":"uint8"}]}],"stateMutability":"payable","type":"function","name":"swapAndStartBridgeTokensViaCelerIM"}],"devdoc":{"kind":"dev","methods":{"startBridgeTokensViaCelerIM((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint32,uint64,bytes,bytes,uint256,uint8))":{"params":{"_bridgeData":"The core information needed for bridging","_celerIMData":"Data specific to CelerIM"}},"swapAndStartBridgeTokensViaCelerIM((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint32,uint64,bytes,bytes,uint256,uint8))":{"params":{"_bridgeData":"The core information needed for bridging","_celerIMData":"Data specific to CelerIM","_swapData":"An array of swap related data for performing swaps before bridging"}}},"version":1},"userdoc":{"kind":"user","methods":{"startBridgeTokensViaCelerIM((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint32,uint64,bytes,bytes,uint256,uint8))":{"notice":"Bridges tokens via CBridge"},"swapAndStartBridgeTokensViaCelerIM((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint32,uint64,bytes,bytes,uint256,uint8))":{"notice":"Performs a swap before bridging via CBridge"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/","ERC1155A/=lib/ERC1155A/src/","ds-test/=lib/ds-test/src/","erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/","pigeon/=lib/pigeon/src/","solady/=lib/pigeon/lib/solady/","solidity-stringutils/=lib/surl/lib/solidity-stringutils/","solmate/=lib/ERC1155A/lib/solmate/src/","super-vaults/=lib/super-vaults/src/","surl/=lib/surl/","v2-core/=lib/super-vaults/lib/v2-core/contracts/","v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/","v3-core/=lib/super-vaults/lib/v3-core/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/vendor/lifi/CelerIMFacetBase.sol":"CelerIMFacetBase"},"evmVersion":"paris","libraries":{}},"sources":{"src/vendor/lifi/CelerIMFacetBase.sol":{"keccak256":"0x2aa613e69d49c5ec41d9ab014c7e8bdf1b840e2e1f0a1d1f839d8636931683cb","urls":["bzz-raw://eca5440ccfe9c5342f56719fde5191d6ad79c9f0814caaa350c8079587ec39c9","dweb:/ipfs/QmXE7MMQ4ZAQe3UiWThxLYfYb1Vw9sQ8CCa6Yxjoi7KvTU"],"license":"MIT"},"src/vendor/lifi/ILiFi.sol":{"keccak256":"0x62f4b1407041df0c15d65f8f23f85b1420e6bd5bc26fe8f8ef9ca21b3b0597bd","urls":["bzz-raw://3c065e7c13fbfa9e5fe6fc6bab9e83c6f0e6c2da804568e52405a9f77e929351","dweb:/ipfs/QmU2gkPutJc6mVKUVrk7FCVMjKfo1y12HLMWKhweSXbkK2"],"license":"Apache-2.0"},"src/vendor/lifi/LibSwap.sol":{"keccak256":"0x26dc9ffce070df754d301552d493e79b7bcca2e71e579e460814f5c34008abb0","urls":["bzz-raw://0e936c58612cd4636d5f2aedbdd55308e01621c879afc53b7584e306fcf8ac1a","dweb:/ipfs/QmU7Pt7BBZ5H84rR7ivoLDyD147ZQCxdfnVfD7wQNZp9eG"],"license":"MIT"},"src/vendor/lifi/celer-network/MsgDataTypes.sol":{"keccak256":"0x233a90492170ab0aeecc028c691fcc404bc3a10d1d558235ddc91252fc3f8b85","urls":["bzz-raw://9b3d5d1f626c762f76d169015c518b6c7e8afcc62d3dafee51ceb3842359c03a","dweb:/ipfs/QmVorffYWtwJd6Ygeueu8e7nNrBCPQNJpNJBzueSEm1Ctw"],"license":"GPL-3.0-only"}},"version":1},"id":198}