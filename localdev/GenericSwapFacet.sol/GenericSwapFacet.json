{"abi":[{"type":"function","name":"swapTokensGeneric","inputs":[{"name":"_transactionId","type":"bytes32","internalType":"bytes32"},{"name":"_integrator","type":"string","internalType":"string"},{"name":"_referrer","type":"string","internalType":"string"},{"name":"_receiver","type":"address","internalType":"address payable"},{"name":"_minAmount","type":"uint256","internalType":"uint256"},{"name":"_swapData","type":"tuple[]","internalType":"struct LibSwap.SwapData[]","components":[{"name":"callTo","type":"address","internalType":"address"},{"name":"approveTo","type":"address","internalType":"address"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"receivingAssetId","type":"address","internalType":"address"},{"name":"fromAmount","type":"uint256","internalType":"uint256"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"requiresDeposit","type":"bool","internalType":"bool"}]}],"outputs":[],"stateMutability":"payable"}],"bytecode":{"object":"0x608060405234801561001057600080fd5b506102fe806100206000396000f3fe60806040526004361061001e5760003560e01c80634630a0d814610023575b600080fd5b61003d600480360381019061003891906101d9565b61003f565b005b505050505050505050565b600080fd5b600080fd5b6000819050919050565b61006781610054565b811461007257600080fd5b50565b6000813590506100848161005e565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126100af576100ae61008a565b5b8235905067ffffffffffffffff8111156100cc576100cb61008f565b5b6020830191508360018202830111156100e8576100e7610094565b5b9250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061011a826100ef565b9050919050565b61012a8161010f565b811461013557600080fd5b50565b60008135905061014781610121565b92915050565b6000819050919050565b6101608161014d565b811461016b57600080fd5b50565b60008135905061017d81610157565b92915050565b60008083601f8401126101995761019861008a565b5b8235905067ffffffffffffffff8111156101b6576101b561008f565b5b6020830191508360208202830111156101d2576101d1610094565b5b9250929050565b600080600080600080600080600060c08a8c0312156101fb576101fa61004a565b5b60006102098c828d01610075565b99505060208a013567ffffffffffffffff81111561022a5761022961004f565b5b6102368c828d01610099565b985098505060408a013567ffffffffffffffff8111156102595761025861004f565b5b6102658c828d01610099565b965096505060606102788c828d01610138565b94505060806102898c828d0161016e565b93505060a08a013567ffffffffffffffff8111156102aa576102a961004f565b5b6102b68c828d01610183565b9250925050929598509295985092959856fea2646970667358221220eb92e44c346f98e9224e179c131a4f53a99e6d7b98c293b5b71b69db4d4afe2d64736f6c63430008170033","sourceMap":"436:861:199:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x60806040526004361061001e5760003560e01c80634630a0d814610023575b600080fd5b61003d600480360381019061003891906101d9565b61003f565b005b505050505050505050565b600080fd5b600080fd5b6000819050919050565b61006781610054565b811461007257600080fd5b50565b6000813590506100848161005e565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126100af576100ae61008a565b5b8235905067ffffffffffffffff8111156100cc576100cb61008f565b5b6020830191508360018202830111156100e8576100e7610094565b5b9250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061011a826100ef565b9050919050565b61012a8161010f565b811461013557600080fd5b50565b60008135905061014781610121565b92915050565b6000819050919050565b6101608161014d565b811461016b57600080fd5b50565b60008135905061017d81610157565b92915050565b60008083601f8401126101995761019861008a565b5b8235905067ffffffffffffffff8111156101b6576101b561008f565b5b6020830191508360208202830111156101d2576101d1610094565b5b9250929050565b600080600080600080600080600060c08a8c0312156101fb576101fa61004a565b5b60006102098c828d01610075565b99505060208a013567ffffffffffffffff81111561022a5761022961004f565b5b6102368c828d01610099565b985098505060408a013567ffffffffffffffff8111156102595761025861004f565b5b6102658c828d01610099565b965096505060606102788c828d01610138565b94505060806102898c828d0161016e565b93505060a08a013567ffffffffffffffff8111156102aa576102a961004f565b5b6102b68c828d01610183565b9250925050929598509295985092959856fea2646970667358221220eb92e44c346f98e9224e179c131a4f53a99e6d7b98c293b5b71b69db4d4afe2d64736f6c63430008170033","sourceMap":"436:861:199:-:0;;;;;;;;;;;;;;;;;;;;;1008:287;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::o;88:117:389:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:117::-;799:1;796;789:12;813:117;922:1;919;912:12;936:117;1045:1;1042;1035:12;1073:553;1131:8;1141:6;1191:3;1184:4;1176:6;1172:17;1168:27;1158:122;;1199:79;;:::i;:::-;1158:122;1312:6;1299:20;1289:30;;1342:18;1334:6;1331:30;1328:117;;;1364:79;;:::i;:::-;1328:117;1478:4;1470:6;1466:17;1454:29;;1532:3;1524:4;1516:6;1512:17;1502:8;1498:32;1495:41;1492:128;;;1539:79;;:::i;:::-;1492:128;1073:553;;;;;:::o;1632:126::-;1669:7;1709:42;1702:5;1698:54;1687:65;;1632:126;;;:::o;1764:104::-;1809:7;1838:24;1856:5;1838:24;:::i;:::-;1827:35;;1764:104;;;:::o;1874:138::-;1955:32;1981:5;1955:32;:::i;:::-;1948:5;1945:43;1935:71;;2002:1;1999;1992:12;1935:71;1874:138;:::o;2018:155::-;2072:5;2110:6;2097:20;2088:29;;2126:41;2161:5;2126:41;:::i;:::-;2018:155;;;;:::o;2179:77::-;2216:7;2245:5;2234:16;;2179:77;;;:::o;2262:122::-;2335:24;2353:5;2335:24;:::i;:::-;2328:5;2325:35;2315:63;;2374:1;2371;2364:12;2315:63;2262:122;:::o;2390:139::-;2436:5;2474:6;2461:20;2452:29;;2490:33;2517:5;2490:33;:::i;:::-;2390:139;;;;:::o;2568:598::-;2671:8;2681:6;2731:3;2724:4;2716:6;2712:17;2708:27;2698:122;;2739:79;;:::i;:::-;2698:122;2852:6;2839:20;2829:30;;2882:18;2874:6;2871:30;2868:117;;;2904:79;;:::i;:::-;2868:117;3018:4;3010:6;3006:17;2994:29;;3072:3;3064:4;3056:6;3052:17;3042:8;3038:32;3035:41;3032:128;;;3079:79;;:::i;:::-;3032:128;2568:598;;;;;:::o;3172:1763::-;3365:6;3373;3381;3389;3397;3405;3413;3421;3429;3478:3;3466:9;3457:7;3453:23;3449:33;3446:120;;;3485:79;;:::i;:::-;3446:120;3605:1;3630:53;3675:7;3666:6;3655:9;3651:22;3630:53;:::i;:::-;3620:63;;3576:117;3760:2;3749:9;3745:18;3732:32;3791:18;3783:6;3780:30;3777:117;;;3813:79;;:::i;:::-;3777:117;3926:65;3983:7;3974:6;3963:9;3959:22;3926:65;:::i;:::-;3908:83;;;;3703:298;4068:2;4057:9;4053:18;4040:32;4099:18;4091:6;4088:30;4085:117;;;4121:79;;:::i;:::-;4085:117;4234:65;4291:7;4282:6;4271:9;4267:22;4234:65;:::i;:::-;4216:83;;;;4011:298;4348:2;4374:61;4427:7;4418:6;4407:9;4403:22;4374:61;:::i;:::-;4364:71;;4319:126;4484:3;4511:53;4556:7;4547:6;4536:9;4532:22;4511:53;:::i;:::-;4501:63;;4455:119;4641:3;4630:9;4626:19;4613:33;4673:18;4665:6;4662:30;4659:117;;;4695:79;;:::i;:::-;4659:117;4808:110;4910:7;4901:6;4890:9;4886:22;4808:110;:::i;:::-;4790:128;;;;4584:344;3172:1763;;;;;;;;;;;:::o","linkReferences":{}},"methodIdentifiers":{"swapTokensGeneric(bytes32,string,string,address,uint256,(address,address,address,address,uint256,bytes,bool)[])":"4630a0d8"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_integrator\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_referrer\",\"type\":\"string\"},{\"internalType\":\"address payable\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"callTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"approveTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receivingAssetId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"requiresDeposit\",\"type\":\"bool\"}],\"internalType\":\"struct LibSwap.SwapData[]\",\"name\":\"_swapData\",\"type\":\"tuple[]\"}],\"name\":\"swapTokensGeneric\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"LI.FI (https://li.fi)\",\"custom:version\":\"1.0.0\",\"details\":\"Uses calldata to execute APPROVED arbitrary methods on DEXs\",\"kind\":\"dev\",\"methods\":{\"swapTokensGeneric(bytes32,string,string,address,uint256,(address,address,address,address,uint256,bytes,bool)[])\":{\"params\":{\"_integrator\":\"the name of the integrator\",\"_minAmount\":\"the minimum amount of the final asset to receive\",\"_receiver\":\"the address to receive the swapped tokens into (also excess tokens)\",\"_referrer\":\"the address of the referrer\",\"_swapData\":\"an object containing swap related data to perform swaps before bridging\",\"_transactionId\":\"the transaction id associated with the operation\"}}},\"title\":\"Generic Swap Facet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swapTokensGeneric(bytes32,string,string,address,uint256,(address,address,address,address,uint256,bytes,bool)[])\":{\"notice\":\"Performs multiple swaps in one transaction\"}},\"notice\":\"Provides functionality for swapping through ANY APPROVED DEXtaken from LiFi contracts https://github.com/lifinance/contracts and stripped down to needs\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/vendor/lifi/GenericSwapFacet.sol\":\"GenericSwapFacet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/\",\":ERC1155A/=lib/ERC1155A/src/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/\",\":pigeon/=lib/pigeon/src/\",\":solady/=lib/pigeon/lib/solady/\",\":solidity-stringutils/=lib/surl/lib/solidity-stringutils/\",\":solmate/=lib/ERC1155A/lib/solmate/src/\",\":super-vaults/=lib/super-vaults/src/\",\":surl/=lib/surl/\",\":v2-core/=lib/super-vaults/lib/v2-core/contracts/\",\":v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/\",\":v3-core/=lib/super-vaults/lib/v3-core/\"]},\"sources\":{\"src/vendor/lifi/GenericSwapFacet.sol\":{\"keccak256\":\"0x877ff2c077047bdc4c95b8629f05c8bf778d33ae72ed0fcb2dfbe680bc161b15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e05a9e1e56d190f98f7f36002d2b2c27acf368e8f88d29688f246239076740\",\"dweb:/ipfs/Qmawo8M9HQ9NDVecZzpR3SWwPU6dhxopwx4vV6TjNGvgi2\"]},\"src/vendor/lifi/LibSwap.sol\":{\"keccak256\":\"0x26dc9ffce070df754d301552d493e79b7bcca2e71e579e460814f5c34008abb0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e936c58612cd4636d5f2aedbdd55308e01621c879afc53b7584e306fcf8ac1a\",\"dweb:/ipfs/QmU7Pt7BBZ5H84rR7ivoLDyD147ZQCxdfnVfD7wQNZp9eG\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"_transactionId","type":"bytes32"},{"internalType":"string","name":"_integrator","type":"string"},{"internalType":"string","name":"_referrer","type":"string"},{"internalType":"address payable","name":"_receiver","type":"address"},{"internalType":"uint256","name":"_minAmount","type":"uint256"},{"internalType":"struct LibSwap.SwapData[]","name":"_swapData","type":"tuple[]","components":[{"internalType":"address","name":"callTo","type":"address"},{"internalType":"address","name":"approveTo","type":"address"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"address","name":"receivingAssetId","type":"address"},{"internalType":"uint256","name":"fromAmount","type":"uint256"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bool","name":"requiresDeposit","type":"bool"}]}],"stateMutability":"payable","type":"function","name":"swapTokensGeneric"}],"devdoc":{"kind":"dev","methods":{"swapTokensGeneric(bytes32,string,string,address,uint256,(address,address,address,address,uint256,bytes,bool)[])":{"params":{"_integrator":"the name of the integrator","_minAmount":"the minimum amount of the final asset to receive","_receiver":"the address to receive the swapped tokens into (also excess tokens)","_referrer":"the address of the referrer","_swapData":"an object containing swap related data to perform swaps before bridging","_transactionId":"the transaction id associated with the operation"}}},"version":1},"userdoc":{"kind":"user","methods":{"swapTokensGeneric(bytes32,string,string,address,uint256,(address,address,address,address,uint256,bytes,bool)[])":{"notice":"Performs multiple swaps in one transaction"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/","ERC1155A/=lib/ERC1155A/src/","ds-test/=lib/ds-test/src/","erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/","pigeon/=lib/pigeon/src/","solady/=lib/pigeon/lib/solady/","solidity-stringutils/=lib/surl/lib/solidity-stringutils/","solmate/=lib/ERC1155A/lib/solmate/src/","super-vaults/=lib/super-vaults/src/","surl/=lib/surl/","v2-core/=lib/super-vaults/lib/v2-core/contracts/","v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/","v3-core/=lib/super-vaults/lib/v3-core/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/vendor/lifi/GenericSwapFacet.sol":"GenericSwapFacet"},"evmVersion":"paris","libraries":{}},"sources":{"src/vendor/lifi/GenericSwapFacet.sol":{"keccak256":"0x877ff2c077047bdc4c95b8629f05c8bf778d33ae72ed0fcb2dfbe680bc161b15","urls":["bzz-raw://e6e05a9e1e56d190f98f7f36002d2b2c27acf368e8f88d29688f246239076740","dweb:/ipfs/Qmawo8M9HQ9NDVecZzpR3SWwPU6dhxopwx4vV6TjNGvgi2"],"license":"MIT"},"src/vendor/lifi/LibSwap.sol":{"keccak256":"0x26dc9ffce070df754d301552d493e79b7bcca2e71e579e460814f5c34008abb0","urls":["bzz-raw://0e936c58612cd4636d5f2aedbdd55308e01621c879afc53b7584e306fcf8ac1a","dweb:/ipfs/QmU7Pt7BBZ5H84rR7ivoLDyD147ZQCxdfnVfD7wQNZp9eG"],"license":"MIT"}},"version":1},"id":199}