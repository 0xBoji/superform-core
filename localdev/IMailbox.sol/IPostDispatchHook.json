{"abi":[{"type":"function","name":"hookType","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"postDispatch","inputs":[{"name":"metadata","type":"bytes","internalType":"bytes"},{"name":"message","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"quoteDispatch","inputs":[{"name":"metadata","type":"bytes","internalType":"bytes"},{"name":"message","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"supportsMetadata","inputs":[{"name":"metadata","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"hookType()":"e445e7dd","postDispatch(bytes,bytes)":"086011b9","quoteDispatch(bytes,bytes)":"aaccd230","supportsMetadata(bytes)":"e5320bb9"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"hookType\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"postDispatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"quoteDispatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"supportsMetadata\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"imported from https://github.com/hyperlane-xyz/hyperlane-monorepo/blob/v3/solidity/contracts/interfaces/hooks/IPostDispatchHook.sol\",\"kind\":\"dev\",\"methods\":{\"postDispatch(bytes,bytes)\":{\"params\":{\"message\":\"The message passed from the Mailbox.dispatch() call\",\"metadata\":\"The metadata required for the hook\"}},\"quoteDispatch(bytes,bytes)\":{\"params\":{\"message\":\"The message passed from the Mailbox.dispatch() call\",\"metadata\":\"The metadata required for the hook\"},\"returns\":{\"_0\":\"Quoted payment for the postDispatch call\"}},\"supportsMetadata(bytes)\":{\"params\":{\"metadata\":\"metadata\"},\"returns\":{\"_0\":\"Whether the hook supports metadata\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"hookType()\":{\"notice\":\"Returns an enum that represents the type of hook\"},\"postDispatch(bytes,bytes)\":{\"notice\":\"Post action after a message is dispatched via the Mailbox\"},\"quoteDispatch(bytes,bytes)\":{\"notice\":\"Compute the payment required by the postDispatch call\"},\"supportsMetadata(bytes)\":{\"notice\":\"Returns whether the hook supports metadata\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/vendor/hyperlane/IMailbox.sol\":\"IPostDispatchHook\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/\",\":ERC1155A/=lib/ERC1155A/src/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/\",\":pigeon/=lib/pigeon/src/\",\":solady/=lib/pigeon/lib/solady/\",\":solidity-stringutils/=lib/surl/lib/solidity-stringutils/\",\":solmate/=lib/ERC1155A/lib/solmate/src/\",\":super-vaults/=lib/super-vaults/src/\",\":surl/=lib/surl/\",\":v2-core/=lib/super-vaults/lib/v2-core/contracts/\",\":v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/\",\":v3-core/=lib/super-vaults/lib/v3-core/\"]},\"sources\":{\"src/vendor/hyperlane/IMailbox.sol\":{\"keccak256\":\"0x5a09367b724e24343d3c3e58e954f1b6279d2111663a542d4af0ba79db981a5b\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://bf7b266cc5e00639337b934a306aa5de91120761470089083cc7121ae1ac1095\",\"dweb:/ipfs/QmUXhg6LCUHdGwmXHri3TSNEMEVjjBqxKNnu2qGPqLQc6y\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"hookType","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[{"internalType":"bytes","name":"metadata","type":"bytes"},{"internalType":"bytes","name":"message","type":"bytes"}],"stateMutability":"payable","type":"function","name":"postDispatch"},{"inputs":[{"internalType":"bytes","name":"metadata","type":"bytes"},{"internalType":"bytes","name":"message","type":"bytes"}],"stateMutability":"view","type":"function","name":"quoteDispatch","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes","name":"metadata","type":"bytes"}],"stateMutability":"view","type":"function","name":"supportsMetadata","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"postDispatch(bytes,bytes)":{"params":{"message":"The message passed from the Mailbox.dispatch() call","metadata":"The metadata required for the hook"}},"quoteDispatch(bytes,bytes)":{"params":{"message":"The message passed from the Mailbox.dispatch() call","metadata":"The metadata required for the hook"},"returns":{"_0":"Quoted payment for the postDispatch call"}},"supportsMetadata(bytes)":{"params":{"metadata":"metadata"},"returns":{"_0":"Whether the hook supports metadata"}}},"version":1},"userdoc":{"kind":"user","methods":{"hookType()":{"notice":"Returns an enum that represents the type of hook"},"postDispatch(bytes,bytes)":{"notice":"Post action after a message is dispatched via the Mailbox"},"quoteDispatch(bytes,bytes)":{"notice":"Compute the payment required by the postDispatch call"},"supportsMetadata(bytes)":{"notice":"Returns whether the hook supports metadata"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/","ERC1155A/=lib/ERC1155A/src/","ds-test/=lib/ds-test/src/","erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/","pigeon/=lib/pigeon/src/","solady/=lib/pigeon/lib/solady/","solidity-stringutils/=lib/surl/lib/solidity-stringutils/","solmate/=lib/ERC1155A/lib/solmate/src/","super-vaults/=lib/super-vaults/src/","surl/=lib/surl/","v2-core/=lib/super-vaults/lib/v2-core/contracts/","v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/","v3-core/=lib/super-vaults/lib/v3-core/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/vendor/hyperlane/IMailbox.sol":"IPostDispatchHook"},"evmVersion":"paris","libraries":{}},"sources":{"src/vendor/hyperlane/IMailbox.sol":{"keccak256":"0x5a09367b724e24343d3c3e58e954f1b6279d2111663a542d4af0ba79db981a5b","urls":["bzz-raw://bf7b266cc5e00639337b934a306aa5de91120761470089083cc7121ae1ac1095","dweb:/ipfs/QmUXhg6LCUHdGwmXHri3TSNEMEVjjBqxKNnu2qGPqLQc6y"],"license":"MIT OR Apache-2.0"}},"version":1},"id":188}