{"abi":[{"type":"function","name":"broadcastPayload","inputs":[{"name":"srcSender_","type":"address","internalType":"address"},{"name":"message_","type":"bytes","internalType":"bytes"},{"name":"extraData_","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"estimateFees","inputs":[{"name":"message_","type":"bytes","internalType":"bytes"},{"name":"extraData_","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"fees","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"event","name":"AuthorizedImplAdded","inputs":[{"name":"superChainId","type":"uint64","indexed":true,"internalType":"uint64"},{"name":"authImpl","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ChainAdded","inputs":[{"name":"superChainId","type":"uint64","indexed":true,"internalType":"uint64"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"broadcastPayload(address,bytes,bytes)":"082fa139","estimateFees(bytes,bytes)":"771525f8"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"superChainId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authImpl\",\"type\":\"address\"}],\"name\":\"AuthorizedImplAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"superChainId\",\"type\":\"uint64\"}],\"name\":\"ChainAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"srcSender_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"message_\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData_\",\"type\":\"bytes\"}],\"name\":\"broadcastPayload\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message_\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData_\",\"type\":\"bytes\"}],\"name\":\"estimateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ZeroPoint Labs\",\"details\":\"Interface for AMBs used in Broadcasting\",\"kind\":\"dev\",\"methods\":{\"broadcastPayload(address,bytes,bytes)\":{\"details\":\"allows state registry to send messages to multiple dst chains\",\"params\":{\"extraData_\":\"is optional broadcast override information\",\"message_\":\"is the cross-chain message to be broadcasted\",\"srcSender_\":\"is the caller (used for gas refunds)\"}},\"estimateFees(bytes,bytes)\":{\"details\":\"returns the gas fees estimation in native tokens\",\"params\":{\"extraData_\":\"is optional broadcast override information\",\"message_\":\"is the cross-chain message to be broadcasted\"},\"returns\":{\"fees\":\"is the native_tokens to be sent along the transaction\"}}},\"title\":\"IBroadcastAmbImplementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"estimateFees(bytes,bytes)\":{\"notice\":\"estimation differs for different message bridges.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IBroadcastAmbImplementation.sol\":\"IBroadcastAmbImplementation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/\",\":ERC1155A/=lib/ERC1155A/src/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/\",\":pigeon/=lib/pigeon/src/\",\":solady/=lib/pigeon/lib/solady/\",\":solidity-stringutils/=lib/surl/lib/solidity-stringutils/\",\":solmate/=lib/ERC1155A/lib/solmate/src/\",\":super-vaults/=lib/super-vaults/src/\",\":surl/=lib/surl/\",\":v2-core/=lib/super-vaults/lib/v2-core/contracts/\",\":v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/\",\":v3-core/=lib/super-vaults/lib/v3-core/\"]},\"sources\":{\"src/interfaces/IBroadcastAmbImplementation.sol\":{\"keccak256\":\"0x93032607a528fc54b4248eee4538872be1cdae42c9af76e0eeed5229db98abd7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ffde11b7ec1f39a2193e8290518d8ab890ae544281aa4fe468dd1b06ca43a885\",\"dweb:/ipfs/QmchoTJNb5cvhWsgozDz7zuyhUf8E5iSjhm86g4J4uh6Jd\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint64","name":"superChainId","type":"uint64","indexed":true},{"internalType":"address","name":"authImpl","type":"address","indexed":true}],"type":"event","name":"AuthorizedImplAdded","anonymous":false},{"inputs":[{"internalType":"uint64","name":"superChainId","type":"uint64","indexed":true}],"type":"event","name":"ChainAdded","anonymous":false},{"inputs":[{"internalType":"address","name":"srcSender_","type":"address"},{"internalType":"bytes","name":"message_","type":"bytes"},{"internalType":"bytes","name":"extraData_","type":"bytes"}],"stateMutability":"payable","type":"function","name":"broadcastPayload"},{"inputs":[{"internalType":"bytes","name":"message_","type":"bytes"},{"internalType":"bytes","name":"extraData_","type":"bytes"}],"stateMutability":"view","type":"function","name":"estimateFees","outputs":[{"internalType":"uint256","name":"fees","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"broadcastPayload(address,bytes,bytes)":{"details":"allows state registry to send messages to multiple dst chains","params":{"extraData_":"is optional broadcast override information","message_":"is the cross-chain message to be broadcasted","srcSender_":"is the caller (used for gas refunds)"}},"estimateFees(bytes,bytes)":{"details":"returns the gas fees estimation in native tokens","params":{"extraData_":"is optional broadcast override information","message_":"is the cross-chain message to be broadcasted"},"returns":{"fees":"is the native_tokens to be sent along the transaction"}}},"version":1},"userdoc":{"kind":"user","methods":{"estimateFees(bytes,bytes)":{"notice":"estimation differs for different message bridges."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/","ERC1155A/=lib/ERC1155A/src/","ds-test/=lib/ds-test/src/","erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/","pigeon/=lib/pigeon/src/","solady/=lib/pigeon/lib/solady/","solidity-stringutils/=lib/surl/lib/solidity-stringutils/","solmate/=lib/ERC1155A/lib/solmate/src/","super-vaults/=lib/super-vaults/src/","surl/=lib/surl/","v2-core/=lib/super-vaults/lib/v2-core/contracts/","v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/","v3-core/=lib/super-vaults/lib/v3-core/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IBroadcastAmbImplementation.sol":"IBroadcastAmbImplementation"},"evmVersion":"paris","libraries":{}},"sources":{"src/interfaces/IBroadcastAmbImplementation.sol":{"keccak256":"0x93032607a528fc54b4248eee4538872be1cdae42c9af76e0eeed5229db98abd7","urls":["bzz-raw://ffde11b7ec1f39a2193e8290518d8ab890ae544281aa4fe468dd1b06ca43a885","dweb:/ipfs/QmchoTJNb5cvhWsgozDz7zuyhUf8E5iSjhm86g4J4uh6Jd"],"license":"BUSL-1.1"}},"version":1},"id":147}