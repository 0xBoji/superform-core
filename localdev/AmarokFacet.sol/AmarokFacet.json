{"abi":[{"type":"function","name":"startBridgeTokensViaAmarok","inputs":[{"name":"_bridgeData","type":"tuple","internalType":"struct ILiFi.BridgeData","components":[{"name":"transactionId","type":"bytes32","internalType":"bytes32"},{"name":"bridge","type":"string","internalType":"string"},{"name":"integrator","type":"string","internalType":"string"},{"name":"referrer","type":"address","internalType":"address"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"minAmount","type":"uint256","internalType":"uint256"},{"name":"destinationChainId","type":"uint256","internalType":"uint256"},{"name":"hasSourceSwaps","type":"bool","internalType":"bool"},{"name":"hasDestinationCall","type":"bool","internalType":"bool"}]},{"name":"_amarokData","type":"tuple","internalType":"struct AmarokFacet.AmarokData","components":[{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"callTo","type":"address","internalType":"address"},{"name":"relayerFee","type":"uint256","internalType":"uint256"},{"name":"slippageTol","type":"uint256","internalType":"uint256"},{"name":"delegate","type":"address","internalType":"address"},{"name":"destChainDomainId","type":"uint32","internalType":"uint32"},{"name":"payFeeWithSendingAsset","type":"bool","internalType":"bool"}]}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"swapAndStartBridgeTokensViaAmarok","inputs":[{"name":"_bridgeData","type":"tuple","internalType":"struct ILiFi.BridgeData","components":[{"name":"transactionId","type":"bytes32","internalType":"bytes32"},{"name":"bridge","type":"string","internalType":"string"},{"name":"integrator","type":"string","internalType":"string"},{"name":"referrer","type":"address","internalType":"address"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"minAmount","type":"uint256","internalType":"uint256"},{"name":"destinationChainId","type":"uint256","internalType":"uint256"},{"name":"hasSourceSwaps","type":"bool","internalType":"bool"},{"name":"hasDestinationCall","type":"bool","internalType":"bool"}]},{"name":"_swapData","type":"tuple[]","internalType":"struct LibSwap.SwapData[]","components":[{"name":"callTo","type":"address","internalType":"address"},{"name":"approveTo","type":"address","internalType":"address"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"receivingAssetId","type":"address","internalType":"address"},{"name":"fromAmount","type":"uint256","internalType":"uint256"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"requiresDeposit","type":"bool","internalType":"bool"}]},{"name":"_amarokData","type":"tuple","internalType":"struct AmarokFacet.AmarokData","components":[{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"callTo","type":"address","internalType":"address"},{"name":"relayerFee","type":"uint256","internalType":"uint256"},{"name":"slippageTol","type":"uint256","internalType":"uint256"},{"name":"delegate","type":"address","internalType":"address"},{"name":"destChainDomainId","type":"uint32","internalType":"uint32"},{"name":"payFeeWithSendingAsset","type":"bool","internalType":"bool"}]}],"outputs":[],"stateMutability":"payable"}],"bytecode":{"object":"0x608060405234801561001057600080fd5b50610602806100206000396000f3fe6080604052600436106100295760003560e01c806383f319171461002e5780638dc9932d1461004a575b600080fd5b61004860048036038101906100439190610488565b610066565b005b610064600480360381019061005f9190610554565b61006c565b005b50505050565b5050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6100d282610089565b810181811067ffffffffffffffff821117156100f1576100f061009a565b5b80604052505050565b6000610104610070565b905061011082826100c9565b919050565b600080fd5b6000819050919050565b61012d8161011a565b811461013857600080fd5b50565b60008135905061014a81610124565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff8211156101755761017461009a565b5b61017e82610089565b9050602081019050919050565b82818337600083830152505050565b60006101ad6101a88461015a565b6100fa565b9050828152602081018484840111156101c9576101c8610155565b5b6101d484828561018b565b509392505050565b600082601f8301126101f1576101f0610150565b5b813561020184826020860161019a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102358261020a565b9050919050565b6102458161022a565b811461025057600080fd5b50565b6000813590506102628161023c565b92915050565b6000819050919050565b61027b81610268565b811461028657600080fd5b50565b60008135905061029881610272565b92915050565b60008115159050919050565b6102b38161029e565b81146102be57600080fd5b50565b6000813590506102d0816102aa565b92915050565b600061014082840312156102ed576102ec610084565b5b6102f86101406100fa565b905060006103088482850161013b565b600083015250602082013567ffffffffffffffff81111561032c5761032b610115565b5b610338848285016101dc565b602083015250604082013567ffffffffffffffff81111561035c5761035b610115565b5b610368848285016101dc565b604083015250606061037c84828501610253565b606083015250608061039084828501610253565b60808301525060a06103a484828501610253565b60a08301525060c06103b884828501610289565b60c08301525060e06103cc84828501610289565b60e0830152506101006103e1848285016102c1565b610100830152506101206103f7848285016102c1565b6101208301525092915050565b600080fd5b600080fd5b60008083601f84011261042457610423610150565b5b8235905067ffffffffffffffff81111561044157610440610404565b5b60208301915083602082028301111561045d5761045c610409565b5b9250929050565b600080fd5b600060e0828403121561047f5761047e610464565b5b81905092915050565b600080600080606085870312156104a2576104a161007a565b5b600085013567ffffffffffffffff8111156104c0576104bf61007f565b5b6104cc878288016102d6565b945050602085013567ffffffffffffffff8111156104ed576104ec61007f565b5b6104f98782880161040e565b9350935050604085013567ffffffffffffffff81111561051c5761051b61007f565b5b61052887828801610469565b91505092959194509250565b6000610140828403121561054b5761054a610464565b5b81905092915050565b6000806040838503121561056b5761056a61007a565b5b600083013567ffffffffffffffff8111156105895761058861007f565b5b61059585828601610534565b925050602083013567ffffffffffffffff8111156105b6576105b561007f565b5b6105c285828601610469565b915050925092905056fea2646970667358221220f76d1e696f6e1078b88c92d8afc11734d6a9bca2c7b852a2e5253afa1a6e230b64736f6c63430008170033","sourceMap":"396:1784:196:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080604052600436106100295760003560e01c806383f319171461002e5780638dc9932d1461004a575b600080fd5b61004860048036038101906100439190610488565b610066565b005b610064600480360381019061005f9190610554565b61006c565b005b50505050565b5050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6100d282610089565b810181811067ffffffffffffffff821117156100f1576100f061009a565b5b80604052505050565b6000610104610070565b905061011082826100c9565b919050565b600080fd5b6000819050919050565b61012d8161011a565b811461013857600080fd5b50565b60008135905061014a81610124565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff8211156101755761017461009a565b5b61017e82610089565b9050602081019050919050565b82818337600083830152505050565b60006101ad6101a88461015a565b6100fa565b9050828152602081018484840111156101c9576101c8610155565b5b6101d484828561018b565b509392505050565b600082601f8301126101f1576101f0610150565b5b813561020184826020860161019a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102358261020a565b9050919050565b6102458161022a565b811461025057600080fd5b50565b6000813590506102628161023c565b92915050565b6000819050919050565b61027b81610268565b811461028657600080fd5b50565b60008135905061029881610272565b92915050565b60008115159050919050565b6102b38161029e565b81146102be57600080fd5b50565b6000813590506102d0816102aa565b92915050565b600061014082840312156102ed576102ec610084565b5b6102f86101406100fa565b905060006103088482850161013b565b600083015250602082013567ffffffffffffffff81111561032c5761032b610115565b5b610338848285016101dc565b602083015250604082013567ffffffffffffffff81111561035c5761035b610115565b5b610368848285016101dc565b604083015250606061037c84828501610253565b606083015250608061039084828501610253565b60808301525060a06103a484828501610253565b60a08301525060c06103b884828501610289565b60c08301525060e06103cc84828501610289565b60e0830152506101006103e1848285016102c1565b610100830152506101206103f7848285016102c1565b6101208301525092915050565b600080fd5b600080fd5b60008083601f84011261042457610423610150565b5b8235905067ffffffffffffffff81111561044157610440610404565b5b60208301915083602082028301111561045d5761045c610409565b5b9250929050565b600080fd5b600060e0828403121561047f5761047e610464565b5b81905092915050565b600080600080606085870312156104a2576104a161007a565b5b600085013567ffffffffffffffff8111156104c0576104bf61007f565b5b6104cc878288016102d6565b945050602085013567ffffffffffffffff8111156104ed576104ec61007f565b5b6104f98782880161040e565b9350935050604085013567ffffffffffffffff81111561051c5761051b61007f565b5b61052887828801610469565b91505092959194509250565b6000610140828403121561054b5761054a610464565b5b81905092915050565b6000806040838503121561056b5761056a61007a565b5b600083013567ffffffffffffffff8111156105895761058861007f565b5b61059585828601610534565b925050602083013567ffffffffffffffff8111156105b6576105b561007f565b5b6105c285828601610469565b915050925092905056fea2646970667358221220f76d1e696f6e1078b88c92d8afc11734d6a9bca2c7b852a2e5253afa1a6e230b64736f6c63430008170033","sourceMap":"396:1784:196:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;1956:222;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1510:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1956:222;;;;;:::o;1510:170::-;;;:::o;7:75:389:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:117::-;1282:1;1279;1272:12;1296:77;1333:7;1362:5;1351:16;;1296:77;;;:::o;1379:122::-;1452:24;1470:5;1452:24;:::i;:::-;1445:5;1442:35;1432:63;;1491:1;1488;1481:12;1432:63;1379:122;:::o;1507:139::-;1553:5;1591:6;1578:20;1569:29;;1607:33;1634:5;1607:33;:::i;:::-;1507:139;;;;:::o;1652:117::-;1761:1;1758;1751:12;1775:117;1884:1;1881;1874:12;1898:308;1960:4;2050:18;2042:6;2039:30;2036:56;;;2072:18;;:::i;:::-;2036:56;2110:29;2132:6;2110:29;:::i;:::-;2102:37;;2194:4;2188;2184:15;2176:23;;1898:308;;;:::o;2212:146::-;2309:6;2304:3;2299;2286:30;2350:1;2341:6;2336:3;2332:16;2325:27;2212:146;;;:::o;2364:425::-;2442:5;2467:66;2483:49;2525:6;2483:49;:::i;:::-;2467:66;:::i;:::-;2458:75;;2556:6;2549:5;2542:21;2594:4;2587:5;2583:16;2632:3;2623:6;2618:3;2614:16;2611:25;2608:112;;;2639:79;;:::i;:::-;2608:112;2729:54;2776:6;2771:3;2766;2729:54;:::i;:::-;2448:341;2364:425;;;;;:::o;2809:340::-;2865:5;2914:3;2907:4;2899:6;2895:17;2891:27;2881:122;;2922:79;;:::i;:::-;2881:122;3039:6;3026:20;3064:79;3139:3;3131:6;3124:4;3116:6;3112:17;3064:79;:::i;:::-;3055:88;;2871:278;2809:340;;;;:::o;3155:126::-;3192:7;3232:42;3225:5;3221:54;3210:65;;3155:126;;;:::o;3287:96::-;3324:7;3353:24;3371:5;3353:24;:::i;:::-;3342:35;;3287:96;;;:::o;3389:122::-;3462:24;3480:5;3462:24;:::i;:::-;3455:5;3452:35;3442:63;;3501:1;3498;3491:12;3442:63;3389:122;:::o;3517:139::-;3563:5;3601:6;3588:20;3579:29;;3617:33;3644:5;3617:33;:::i;:::-;3517:139;;;;:::o;3662:77::-;3699:7;3728:5;3717:16;;3662:77;;;:::o;3745:122::-;3818:24;3836:5;3818:24;:::i;:::-;3811:5;3808:35;3798:63;;3857:1;3854;3847:12;3798:63;3745:122;:::o;3873:139::-;3919:5;3957:6;3944:20;3935:29;;3973:33;4000:5;3973:33;:::i;:::-;3873:139;;;;:::o;4018:90::-;4052:7;4095:5;4088:13;4081:21;4070:32;;4018:90;;;:::o;4114:116::-;4184:21;4199:5;4184:21;:::i;:::-;4177:5;4174:32;4164:60;;4220:1;4217;4210:12;4164:60;4114:116;:::o;4236:133::-;4279:5;4317:6;4304:20;4295:29;;4333:30;4357:5;4333:30;:::i;:::-;4236:133;;;;:::o;4406:2293::-;4485:5;4529:6;4517:9;4512:3;4508:19;4504:32;4501:119;;;4539:79;;:::i;:::-;4501:119;4638:23;4654:6;4638:23;:::i;:::-;4629:32;;4729:1;4769:49;4814:3;4805:6;4794:9;4790:22;4769:49;:::i;:::-;4762:4;4755:5;4751:16;4744:75;4671:159;4919:2;4908:9;4904:18;4891:32;4950:18;4942:6;4939:30;4936:117;;;4972:79;;:::i;:::-;4936:117;5092:59;5147:3;5138:6;5127:9;5123:22;5092:59;:::i;:::-;5085:4;5078:5;5074:16;5067:85;4840:323;5256:2;5245:9;5241:18;5228:32;5287:18;5279:6;5276:30;5273:117;;;5309:79;;:::i;:::-;5273:117;5429:59;5484:3;5475:6;5464:9;5460:22;5429:59;:::i;:::-;5422:4;5415:5;5411:16;5404:85;5173:327;5563:2;5604:49;5649:3;5640:6;5629:9;5625:22;5604:49;:::i;:::-;5597:4;5590:5;5586:16;5579:75;5510:155;5734:3;5776:49;5821:3;5812:6;5801:9;5797:22;5776:49;:::i;:::-;5769:4;5762:5;5758:16;5751:75;5675:162;5900:3;5942:49;5987:3;5978:6;5967:9;5963:22;5942:49;:::i;:::-;5935:4;5928:5;5924:16;5917:75;5847:156;6067:3;6109:49;6154:3;6145:6;6134:9;6130:22;6109:49;:::i;:::-;6102:4;6095:5;6091:16;6084:75;6013:157;6243:3;6285:49;6330:3;6321:6;6310:9;6306:22;6285:49;:::i;:::-;6278:4;6271:5;6267:16;6260:75;6180:166;6415:3;6459:46;6501:3;6492:6;6481:9;6477:22;6459:46;:::i;:::-;6450:6;6443:5;6439:18;6432:74;6356:161;6590:3;6634:46;6676:3;6667:6;6656:9;6652:22;6634:46;:::i;:::-;6625:6;6618:5;6614:18;6607:74;6527:165;4406:2293;;;;:::o;6705:117::-;6814:1;6811;6804:12;6828:117;6937:1;6934;6927:12;6984:598;7087:8;7097:6;7147:3;7140:4;7132:6;7128:17;7124:27;7114:122;;7155:79;;:::i;:::-;7114:122;7268:6;7255:20;7245:30;;7298:18;7290:6;7287:30;7284:117;;;7320:79;;:::i;:::-;7284:117;7434:4;7426:6;7422:17;7410:29;;7488:3;7480:4;7472:6;7468:17;7458:8;7454:32;7451:41;7448:128;;;7495:79;;:::i;:::-;7448:128;6984:598;;;;;:::o;7588:117::-;7697:1;7694;7687:12;7748:237;7826:5;7867:3;7858:6;7853:3;7849:16;7845:26;7842:113;;;7874:79;;:::i;:::-;7842:113;7973:6;7964:15;;7748:237;;;;:::o;7991:1353::-;8187:6;8195;8203;8211;8260:2;8248:9;8239:7;8235:23;8231:32;8228:119;;;8266:79;;:::i;:::-;8228:119;8414:1;8403:9;8399:17;8386:31;8444:18;8436:6;8433:30;8430:117;;;8466:79;;:::i;:::-;8430:117;8571:83;8646:7;8637:6;8626:9;8622:22;8571:83;:::i;:::-;8561:93;;8357:307;8731:2;8720:9;8716:18;8703:32;8762:18;8754:6;8751:30;8748:117;;;8784:79;;:::i;:::-;8748:117;8897:110;8999:7;8990:6;8979:9;8975:22;8897:110;:::i;:::-;8879:128;;;;8674:343;9084:2;9073:9;9069:18;9056:32;9115:18;9107:6;9104:30;9101:117;;;9137:79;;:::i;:::-;9101:117;9242:85;9319:7;9310:6;9299:9;9295:22;9242:85;:::i;:::-;9232:95;;9027:310;7991:1353;;;;;;;:::o;9381:237::-;9459:5;9500:3;9491:6;9486:3;9482:16;9478:26;9475:113;;;9507:79;;:::i;:::-;9475:113;9606:6;9597:15;;9381:237;;;;:::o;9624:922::-;9756:6;9764;9813:2;9801:9;9792:7;9788:23;9784:32;9781:119;;;9819:79;;:::i;:::-;9781:119;9967:1;9956:9;9952:17;9939:31;9997:18;9989:6;9986:30;9983:117;;;10019:79;;:::i;:::-;9983:117;10124:85;10201:7;10192:6;10181:9;10177:22;10124:85;:::i;:::-;10114:95;;9910:309;10286:2;10275:9;10271:18;10258:32;10317:18;10309:6;10306:30;10303:117;;;10339:79;;:::i;:::-;10303:117;10444:85;10521:7;10512:6;10501:9;10497:22;10444:85;:::i;:::-;10434:95;;10229:310;9624:922;;;;;:::o","linkReferences":{}},"methodIdentifiers":{"startBridgeTokensViaAmarok((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(bytes,address,uint256,uint256,address,uint32,bool))":"8dc9932d","swapAndStartBridgeTokensViaAmarok((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(bytes,address,uint256,uint256,address,uint32,bool))":"83f31917"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"bridge\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"integrator\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasSourceSwaps\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasDestinationCall\",\"type\":\"bool\"}],\"internalType\":\"struct ILiFi.BridgeData\",\"name\":\"_bridgeData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"callTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"relayerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippageTol\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"destChainDomainId\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"payFeeWithSendingAsset\",\"type\":\"bool\"}],\"internalType\":\"struct AmarokFacet.AmarokData\",\"name\":\"_amarokData\",\"type\":\"tuple\"}],\"name\":\"startBridgeTokensViaAmarok\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"bridge\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"integrator\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasSourceSwaps\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasDestinationCall\",\"type\":\"bool\"}],\"internalType\":\"struct ILiFi.BridgeData\",\"name\":\"_bridgeData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"callTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"approveTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receivingAssetId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"requiresDeposit\",\"type\":\"bool\"}],\"internalType\":\"struct LibSwap.SwapData[]\",\"name\":\"_swapData\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"callTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"relayerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippageTol\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"destChainDomainId\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"payFeeWithSendingAsset\",\"type\":\"bool\"}],\"internalType\":\"struct AmarokFacet.AmarokData\",\"name\":\"_amarokData\",\"type\":\"tuple\"}],\"name\":\"swapAndStartBridgeTokensViaAmarok\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"LI.FI (https://li.fi)\",\"custom:version\":\"2.0.0\",\"kind\":\"dev\",\"methods\":{\"startBridgeTokensViaAmarok((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(bytes,address,uint256,uint256,address,uint32,bool))\":{\"params\":{\"_amarokData\":\"Data specific to bridge\",\"_bridgeData\":\"Data containing core information for bridging\"}},\"swapAndStartBridgeTokensViaAmarok((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(bytes,address,uint256,uint256,address,uint32,bool))\":{\"params\":{\"_amarokData\":\"Data specific to Amarok\",\"_bridgeData\":\"The core information needed for bridging\",\"_swapData\":\"An array of swap related data for performing swaps before bridging\"}}},\"title\":\"Amarok Facet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"startBridgeTokensViaAmarok((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(bytes,address,uint256,uint256,address,uint32,bool))\":{\"notice\":\"Bridges tokens via Amarok\"},\"swapAndStartBridgeTokensViaAmarok((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(bytes,address,uint256,uint256,address,uint32,bool))\":{\"notice\":\"Performs a swap before bridging via Amarok\"}},\"notice\":\"Provides functionality for bridging through Connext Amaroktaken from LiFi contracts https://github.com/lifinance/contracts and stripped down to needs\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/vendor/lifi/AmarokFacet.sol\":\"AmarokFacet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/\",\":ERC1155A/=lib/ERC1155A/src/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/\",\":pigeon/=lib/pigeon/src/\",\":solady/=lib/pigeon/lib/solady/\",\":solidity-stringutils/=lib/surl/lib/solidity-stringutils/\",\":solmate/=lib/ERC1155A/lib/solmate/src/\",\":super-vaults/=lib/super-vaults/src/\",\":surl/=lib/surl/\",\":v2-core/=lib/super-vaults/lib/v2-core/contracts/\",\":v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/\",\":v3-core/=lib/super-vaults/lib/v3-core/\"]},\"sources\":{\"src/vendor/lifi/AmarokFacet.sol\":{\"keccak256\":\"0x965adeace61ab9259e73fcb543efa3eb0e0b94da81263a02e7c08a88ba2a1616\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbfb337833ed15295e77162000fbf222c70d1a20081d190190326fcc41b7c229\",\"dweb:/ipfs/QmTmr1yi8wrrVdak9TcMRqLpT6RoVCjLrof2C54xf4QhEA\"]},\"src/vendor/lifi/ILiFi.sol\":{\"keccak256\":\"0x62f4b1407041df0c15d65f8f23f85b1420e6bd5bc26fe8f8ef9ca21b3b0597bd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c065e7c13fbfa9e5fe6fc6bab9e83c6f0e6c2da804568e52405a9f77e929351\",\"dweb:/ipfs/QmU2gkPutJc6mVKUVrk7FCVMjKfo1y12HLMWKhweSXbkK2\"]},\"src/vendor/lifi/LibSwap.sol\":{\"keccak256\":\"0x26dc9ffce070df754d301552d493e79b7bcca2e71e579e460814f5c34008abb0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e936c58612cd4636d5f2aedbdd55308e01621c879afc53b7584e306fcf8ac1a\",\"dweb:/ipfs/QmU7Pt7BBZ5H84rR7ivoLDyD147ZQCxdfnVfD7wQNZp9eG\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"struct ILiFi.BridgeData","name":"_bridgeData","type":"tuple","components":[{"internalType":"bytes32","name":"transactionId","type":"bytes32"},{"internalType":"string","name":"bridge","type":"string"},{"internalType":"string","name":"integrator","type":"string"},{"internalType":"address","name":"referrer","type":"address"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"bool","name":"hasSourceSwaps","type":"bool"},{"internalType":"bool","name":"hasDestinationCall","type":"bool"}]},{"internalType":"struct AmarokFacet.AmarokData","name":"_amarokData","type":"tuple","components":[{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"address","name":"callTo","type":"address"},{"internalType":"uint256","name":"relayerFee","type":"uint256"},{"internalType":"uint256","name":"slippageTol","type":"uint256"},{"internalType":"address","name":"delegate","type":"address"},{"internalType":"uint32","name":"destChainDomainId","type":"uint32"},{"internalType":"bool","name":"payFeeWithSendingAsset","type":"bool"}]}],"stateMutability":"payable","type":"function","name":"startBridgeTokensViaAmarok"},{"inputs":[{"internalType":"struct ILiFi.BridgeData","name":"_bridgeData","type":"tuple","components":[{"internalType":"bytes32","name":"transactionId","type":"bytes32"},{"internalType":"string","name":"bridge","type":"string"},{"internalType":"string","name":"integrator","type":"string"},{"internalType":"address","name":"referrer","type":"address"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"bool","name":"hasSourceSwaps","type":"bool"},{"internalType":"bool","name":"hasDestinationCall","type":"bool"}]},{"internalType":"struct LibSwap.SwapData[]","name":"_swapData","type":"tuple[]","components":[{"internalType":"address","name":"callTo","type":"address"},{"internalType":"address","name":"approveTo","type":"address"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"address","name":"receivingAssetId","type":"address"},{"internalType":"uint256","name":"fromAmount","type":"uint256"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bool","name":"requiresDeposit","type":"bool"}]},{"internalType":"struct AmarokFacet.AmarokData","name":"_amarokData","type":"tuple","components":[{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"address","name":"callTo","type":"address"},{"internalType":"uint256","name":"relayerFee","type":"uint256"},{"internalType":"uint256","name":"slippageTol","type":"uint256"},{"internalType":"address","name":"delegate","type":"address"},{"internalType":"uint32","name":"destChainDomainId","type":"uint32"},{"internalType":"bool","name":"payFeeWithSendingAsset","type":"bool"}]}],"stateMutability":"payable","type":"function","name":"swapAndStartBridgeTokensViaAmarok"}],"devdoc":{"kind":"dev","methods":{"startBridgeTokensViaAmarok((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(bytes,address,uint256,uint256,address,uint32,bool))":{"params":{"_amarokData":"Data specific to bridge","_bridgeData":"Data containing core information for bridging"}},"swapAndStartBridgeTokensViaAmarok((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(bytes,address,uint256,uint256,address,uint32,bool))":{"params":{"_amarokData":"Data specific to Amarok","_bridgeData":"The core information needed for bridging","_swapData":"An array of swap related data for performing swaps before bridging"}}},"version":1},"userdoc":{"kind":"user","methods":{"startBridgeTokensViaAmarok((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(bytes,address,uint256,uint256,address,uint32,bool))":{"notice":"Bridges tokens via Amarok"},"swapAndStartBridgeTokensViaAmarok((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(bytes,address,uint256,uint256,address,uint32,bool))":{"notice":"Performs a swap before bridging via Amarok"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/","ERC1155A/=lib/ERC1155A/src/","ds-test/=lib/ds-test/src/","erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/","pigeon/=lib/pigeon/src/","solady/=lib/pigeon/lib/solady/","solidity-stringutils/=lib/surl/lib/solidity-stringutils/","solmate/=lib/ERC1155A/lib/solmate/src/","super-vaults/=lib/super-vaults/src/","surl/=lib/surl/","v2-core/=lib/super-vaults/lib/v2-core/contracts/","v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/","v3-core/=lib/super-vaults/lib/v3-core/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/vendor/lifi/AmarokFacet.sol":"AmarokFacet"},"evmVersion":"paris","libraries":{}},"sources":{"src/vendor/lifi/AmarokFacet.sol":{"keccak256":"0x965adeace61ab9259e73fcb543efa3eb0e0b94da81263a02e7c08a88ba2a1616","urls":["bzz-raw://bbfb337833ed15295e77162000fbf222c70d1a20081d190190326fcc41b7c229","dweb:/ipfs/QmTmr1yi8wrrVdak9TcMRqLpT6RoVCjLrof2C54xf4QhEA"],"license":"MIT"},"src/vendor/lifi/ILiFi.sol":{"keccak256":"0x62f4b1407041df0c15d65f8f23f85b1420e6bd5bc26fe8f8ef9ca21b3b0597bd","urls":["bzz-raw://3c065e7c13fbfa9e5fe6fc6bab9e83c6f0e6c2da804568e52405a9f77e929351","dweb:/ipfs/QmU2gkPutJc6mVKUVrk7FCVMjKfo1y12HLMWKhweSXbkK2"],"license":"Apache-2.0"},"src/vendor/lifi/LibSwap.sol":{"keccak256":"0x26dc9ffce070df754d301552d493e79b7bcca2e71e579e460814f5c34008abb0","urls":["bzz-raw://0e936c58612cd4636d5f2aedbdd55308e01621c879afc53b7584e306fcf8ac1a","dweb:/ipfs/QmU7Pt7BBZ5H84rR7ivoLDyD147ZQCxdfnVfD7wQNZp9eG"],"license":"MIT"}},"version":1},"id":196}