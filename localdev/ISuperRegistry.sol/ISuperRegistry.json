{"abi":[{"type":"function","name":"BROADCAST_REGISTRY","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"BROADCAST_REGISTRY_PROCESSOR","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"CORE_REGISTRY_DISPUTER","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"CORE_REGISTRY_PROCESSOR","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"CORE_REGISTRY_RESCUER","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"CORE_REGISTRY_UPDATER","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"CORE_STATE_REGISTRY","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"DST_SWAPPER","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"DST_SWAPPER_PROCESSOR","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"EMERGENCY_QUEUE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"PAYLOAD_HELPER","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"PAYMASTER","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"PAYMENT_ADMIN","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"PAYMENT_HELPER","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"PERMIT2","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"SUPERFORM_FACTORY","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"SUPERFORM_RECEIVER","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"SUPERFORM_ROUTER","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"SUPER_POSITIONS","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"SUPER_RBAC","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"TIMELOCK_REGISTRY_PROCESSOR","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"TIMELOCK_STATE_REGISTRY","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"batchSetAddress","inputs":[{"name":"ids_","type":"bytes32[]","internalType":"bytes32[]"},{"name":"newAddresses_","type":"address[]","internalType":"address[]"},{"name":"chainIds_","type":"uint64[]","internalType":"uint64[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"delay","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getAddress","inputs":[{"name":"id_","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getAddressByChainId","inputs":[{"name":"id_","type":"bytes32","internalType":"bytes32"},{"name":"chainId_","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getAmbAddress","inputs":[{"name":"ambId_","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"ambAddress_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getAmbId","inputs":[{"name":"ambAddress_","type":"address","internalType":"address"}],"outputs":[{"name":"ambId_","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"getBridgeAddress","inputs":[{"name":"bridgeId_","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"bridgeAddress_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getBridgeValidator","inputs":[{"name":"bridgeId_","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"bridgeValidator_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getStateRegistry","inputs":[{"name":"registryId_","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"registryAddress_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getStateRegistryId","inputs":[{"name":"registryAddress_","type":"address","internalType":"address"}],"outputs":[{"name":"registryId_","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"getVaultLimitPerDestination","inputs":[{"name":"chainId_","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"vaultLimitPerDestination_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"isValidAmbImpl","inputs":[{"name":"ambAddress_","type":"address","internalType":"address"}],"outputs":[{"name":"valid_","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isValidBroadcastAmbImpl","inputs":[{"name":"ambAddress_","type":"address","internalType":"address"}],"outputs":[{"name":"valid_","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isValidStateRegistry","inputs":[{"name":"registryAddress_","type":"address","internalType":"address"}],"outputs":[{"name":"valid_","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"setAddress","inputs":[{"name":"id_","type":"bytes32","internalType":"bytes32"},{"name":"newAddress_","type":"address","internalType":"address"},{"name":"chainId_","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setAmbAddress","inputs":[{"name":"ambId_","type":"uint8[]","internalType":"uint8[]"},{"name":"ambAddress_","type":"address[]","internalType":"address[]"},{"name":"isBroadcastAMB_","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBridgeAddresses","inputs":[{"name":"bridgeId_","type":"uint8[]","internalType":"uint8[]"},{"name":"bridgeAddress_","type":"address[]","internalType":"address[]"},{"name":"bridgeValidator_","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setDelay","inputs":[{"name":"delay_","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setPermit2","inputs":[{"name":"permit2_","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setStateRegistryAddress","inputs":[{"name":"registryId_","type":"uint8[]","internalType":"uint8[]"},{"name":"registryAddress_","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setVaultLimitPerDestination","inputs":[{"name":"chainId_","type":"uint64","internalType":"uint64"},{"name":"vaultLimit_","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AddressUpdated","inputs":[{"name":"protocolAddressId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"chainId","type":"uint64","indexed":true,"internalType":"uint64"},{"name":"oldAddress","type":"address","indexed":true,"internalType":"address"},{"name":"newAddress","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"SetAmbAddress","inputs":[{"name":"ambId_","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"ambAddress_","type":"address","indexed":true,"internalType":"address"},{"name":"isBroadcastAMB_","type":"bool","indexed":true,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"SetBridgeAddress","inputs":[{"name":"bridgeId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"bridgeAddress","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"SetBridgeValidator","inputs":[{"name":"bridgeId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"bridgeValidator","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"SetDelay","inputs":[{"name":"oldDelay_","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"newDelay_","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"SetPermit2","inputs":[{"name":"permit2","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"SetStateRegistryAddress","inputs":[{"name":"registryId_","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"registryAddress_","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"SetVaultLimitPerDestination","inputs":[{"name":"chainId_","type":"uint64","indexed":true,"internalType":"uint64"},{"name":"vaultLimit_","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"BROADCAST_REGISTRY()":"60cfb8e1","BROADCAST_REGISTRY_PROCESSOR()":"9a5988fa","CORE_REGISTRY_DISPUTER()":"bbadb52b","CORE_REGISTRY_PROCESSOR()":"8878b4e3","CORE_REGISTRY_RESCUER()":"695b5dfb","CORE_REGISTRY_UPDATER()":"9914e6f8","CORE_STATE_REGISTRY()":"c4a55621","DST_SWAPPER()":"8a54adf7","DST_SWAPPER_PROCESSOR()":"bd8b96ee","EMERGENCY_QUEUE()":"41965eee","PAYLOAD_HELPER()":"a6e3fad5","PAYMASTER()":"82c78fb8","PAYMENT_ADMIN()":"9d62a6ed","PAYMENT_HELPER()":"08aa5538","PERMIT2()":"6afdd850","SUPERFORM_FACTORY()":"bbe557b9","SUPERFORM_RECEIVER()":"c3d699d7","SUPERFORM_ROUTER()":"650c3942","SUPER_POSITIONS()":"46cea3fb","SUPER_RBAC()":"024ba9aa","TIMELOCK_REGISTRY_PROCESSOR()":"0896ea2a","TIMELOCK_STATE_REGISTRY()":"dd93465a","batchSetAddress(bytes32[],address[],uint64[])":"caac9a8e","delay()":"6a42b8f8","getAddress(bytes32)":"21f8a721","getAddressByChainId(bytes32,uint64)":"dfcf829b","getAmbAddress(uint8)":"0eff125d","getAmbId(address)":"f7c677e4","getBridgeAddress(uint8)":"ca7adffb","getBridgeValidator(uint8)":"e85b2b54","getStateRegistry(uint8)":"57203ab4","getStateRegistryId(address)":"2f6438ab","getVaultLimitPerDestination(uint64)":"bffc1e13","isValidAmbImpl(address)":"5c504b60","isValidBroadcastAmbImpl(address)":"95fdab87","isValidStateRegistry(address)":"eeaf54aa","setAddress(bytes32,address,uint64)":"8d336654","setAmbAddress(uint8[],address[],bool[])":"8375cb92","setBridgeAddresses(uint8[],address[],address[])":"edad76aa","setDelay(uint256)":"e177246e","setPermit2(address)":"101ec30a","setStateRegistryAddress(uint8[],address[])":"31949bb3","setVaultLimitPerDestination(uint64,uint256)":"be580cf4"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"protocolAddressId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"AddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"ambId_\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ambAddress_\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"isBroadcastAMB_\",\"type\":\"bool\"}],\"name\":\"SetAmbAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bridgeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bridgeAddress\",\"type\":\"address\"}],\"name\":\"SetBridgeAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bridgeId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bridgeValidator\",\"type\":\"address\"}],\"name\":\"SetBridgeValidator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldDelay_\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newDelay_\",\"type\":\"uint256\"}],\"name\":\"SetDelay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"permit2\",\"type\":\"address\"}],\"name\":\"SetPermit2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"registryId_\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registryAddress_\",\"type\":\"address\"}],\"name\":\"SetStateRegistryAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"chainId_\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vaultLimit_\",\"type\":\"uint256\"}],\"name\":\"SetVaultLimitPerDestination\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BROADCAST_REGISTRY\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BROADCAST_REGISTRY_PROCESSOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CORE_REGISTRY_DISPUTER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CORE_REGISTRY_PROCESSOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CORE_REGISTRY_RESCUER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CORE_REGISTRY_UPDATER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CORE_STATE_REGISTRY\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DST_SWAPPER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DST_SWAPPER_PROCESSOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMERGENCY_QUEUE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYLOAD_HELPER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMENT_ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMENT_HELPER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUPERFORM_FACTORY\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUPERFORM_RECEIVER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUPERFORM_ROUTER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUPER_POSITIONS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUPER_RBAC\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIMELOCK_REGISTRY_PROCESSOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIMELOCK_STATE_REGISTRY\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"ids_\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"newAddresses_\",\"type\":\"address[]\"},{\"internalType\":\"uint64[]\",\"name\":\"chainIds_\",\"type\":\"uint64[]\"}],\"name\":\"batchSetAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id_\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id_\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"chainId_\",\"type\":\"uint64\"}],\"name\":\"getAddressByChainId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"ambId_\",\"type\":\"uint8\"}],\"name\":\"getAmbAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"ambAddress_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ambAddress_\",\"type\":\"address\"}],\"name\":\"getAmbId\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"ambId_\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bridgeId_\",\"type\":\"uint8\"}],\"name\":\"getBridgeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bridgeAddress_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bridgeId_\",\"type\":\"uint8\"}],\"name\":\"getBridgeValidator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bridgeValidator_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"registryId_\",\"type\":\"uint8\"}],\"name\":\"getStateRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress_\",\"type\":\"address\"}],\"name\":\"getStateRegistryId\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"registryId_\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"chainId_\",\"type\":\"uint64\"}],\"name\":\"getVaultLimitPerDestination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultLimitPerDestination_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ambAddress_\",\"type\":\"address\"}],\"name\":\"isValidAmbImpl\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ambAddress_\",\"type\":\"address\"}],\"name\":\"isValidBroadcastAmbImpl\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress_\",\"type\":\"address\"}],\"name\":\"isValidStateRegistry\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id_\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress_\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"chainId_\",\"type\":\"uint64\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8[]\",\"name\":\"ambId_\",\"type\":\"uint8[]\"},{\"internalType\":\"address[]\",\"name\":\"ambAddress_\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"isBroadcastAMB_\",\"type\":\"bool[]\"}],\"name\":\"setAmbAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8[]\",\"name\":\"bridgeId_\",\"type\":\"uint8[]\"},{\"internalType\":\"address[]\",\"name\":\"bridgeAddress_\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"bridgeValidator_\",\"type\":\"address[]\"}],\"name\":\"setBridgeAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"delay_\",\"type\":\"uint256\"}],\"name\":\"setDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"permit2_\",\"type\":\"address\"}],\"name\":\"setPermit2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8[]\",\"name\":\"registryId_\",\"type\":\"uint8[]\"},{\"internalType\":\"address[]\",\"name\":\"registryAddress_\",\"type\":\"address[]\"}],\"name\":\"setStateRegistryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"chainId_\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"vaultLimit_\",\"type\":\"uint256\"}],\"name\":\"setVaultLimitPerDestination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Zeropoint Labs\",\"details\":\"Interface for SuperRegistry\",\"events\":{\"AddressUpdated(bytes32,uint64,address,address)\":{\"details\":\"is emitted when an address is set.\"},\"SetAmbAddress(uint8,address,bool)\":{\"details\":\"is emitted when a new amb is configured.\"},\"SetBridgeAddress(uint256,address)\":{\"details\":\"is emitted when a new token bridge is configured.\"},\"SetBridgeValidator(uint256,address)\":{\"details\":\"is emitted when a new bridge validator is configured.\"},\"SetDelay(uint256,uint256)\":{\"details\":\"is emitted when a new delay is configured.\"},\"SetPermit2(address)\":{\"details\":\"emitted when permit2 is set.\"},\"SetStateRegistryAddress(uint8,address)\":{\"details\":\"is emitted when a new state registry is configured.\"},\"SetVaultLimitPerDestination(uint64,uint256)\":{\"details\":\"is emitted when a new vault limit is configured\"}},\"kind\":\"dev\",\"methods\":{\"BROADCAST_REGISTRY()\":{\"details\":\"returns the id of the broadcast state registry module\"},\"BROADCAST_REGISTRY_PROCESSOR()\":{\"details\":\"returns the id of the broadcast registry processor keeper\"},\"CORE_REGISTRY_DISPUTER()\":{\"details\":\"returns the id of the core state registry updater keeper\"},\"CORE_REGISTRY_PROCESSOR()\":{\"details\":\"returns the id of the core state registry processor keeper\"},\"CORE_REGISTRY_RESCUER()\":{\"details\":\"returns the id of the core state registry updater keeper\"},\"CORE_REGISTRY_UPDATER()\":{\"details\":\"returns the id of the core state registry updater keeper\"},\"CORE_STATE_REGISTRY()\":{\"details\":\"returns the id of the core state registry module\"},\"DST_SWAPPER()\":{\"details\":\"returns the id of the dst swapper keeper\"},\"DST_SWAPPER_PROCESSOR()\":{\"details\":\"returns the id of the core state registry updater keeper\"},\"EMERGENCY_QUEUE()\":{\"details\":\"returns the id of the emergency queue\"},\"PAYLOAD_HELPER()\":{\"details\":\"returns the id of the payload helper module\"},\"PAYMASTER()\":{\"details\":\"returns the id of the superform paymaster contract\"},\"PAYMENT_ADMIN()\":{\"details\":\"returns the id of the payment admin keeper\"},\"PAYMENT_HELPER()\":{\"details\":\"returns the id of the superform payload helper contract\"},\"PERMIT2()\":{\"details\":\"returns the permit2 address\"},\"SUPERFORM_FACTORY()\":{\"details\":\"returns the id of the superform factory module\"},\"SUPERFORM_RECEIVER()\":{\"details\":\"returns the id of the superform receiver\"},\"SUPERFORM_ROUTER()\":{\"details\":\"returns the id of the superform router module\"},\"SUPER_POSITIONS()\":{\"details\":\"returns the id of the super positions module\"},\"SUPER_RBAC()\":{\"details\":\"returns the id of the super rbac module\"},\"TIMELOCK_REGISTRY_PROCESSOR()\":{\"details\":\"returns the id of the timelock form state registry processor keeper\"},\"TIMELOCK_STATE_REGISTRY()\":{\"details\":\"returns the id of the timelock form state registry module\"},\"batchSetAddress(bytes32[],address[],uint64[])\":{\"details\":\"sets new addresses on specific chains.\",\"params\":{\"chainIds_\":\"are the chain ids of that chain\",\"ids_\":\"are the identifiers of the address on that chain\",\"newAddresses_\":\"are the new addresses on that chain\"}},\"delay()\":{\"details\":\"gets the deposit rescue delay\"},\"getAddress(bytes32)\":{\"details\":\"gets the address of a contract on current chain\",\"params\":{\"id_\":\"is the id of the contract\"}},\"getAddressByChainId(bytes32,uint64)\":{\"details\":\"gets the address of a contract on a target chain\",\"params\":{\"chainId_\":\"is the chain id of that chain\",\"id_\":\"is the id of the contract\"}},\"getAmbAddress(uint8)\":{\"details\":\"gets the address of a amb\",\"params\":{\"ambId_\":\"is the id of a bridge\"},\"returns\":{\"ambAddress_\":\"is the address of the form\"}},\"getAmbId(address)\":{\"details\":\"gets the id of the amb\",\"params\":{\"ambAddress_\":\"is the address of an amb\"},\"returns\":{\"ambId_\":\"is the identifier of an amb\"}},\"getBridgeAddress(uint8)\":{\"details\":\"gets the address of a bridge\",\"params\":{\"bridgeId_\":\"is the id of a bridge\"},\"returns\":{\"bridgeAddress_\":\"is the address of the form\"}},\"getBridgeValidator(uint8)\":{\"details\":\"gets the address of a bridge validator\",\"params\":{\"bridgeId_\":\"is the id of a bridge\"},\"returns\":{\"bridgeValidator_\":\"is the address of the form\"}},\"getStateRegistry(uint8)\":{\"details\":\"gets the address of the registry\",\"params\":{\"registryId_\":\"is the id of the state registry\"},\"returns\":{\"registryAddress_\":\"is the address of the state registry\"}},\"getStateRegistryId(address)\":{\"details\":\"gets the id of the registry\",\"params\":{\"registryAddress_\":\"is the address of the state registry\"},\"returns\":{\"registryId_\":\"is the id of the state registry\"}},\"getVaultLimitPerDestination(uint64)\":{\"details\":\"gets the safe vault limit\",\"params\":{\"chainId_\":\"is the id of the remote chain\"},\"returns\":{\"vaultLimitPerDestination_\":\"is the safe number of vaults to deposit without hitting out of gas error\"}},\"isValidAmbImpl(address)\":{\"details\":\"helps validate if an address is a valid amb implementation\",\"params\":{\"ambAddress_\":\"is the address of the amb implementation\"},\"returns\":{\"valid_\":\"a flag indicating if its valid.\"}},\"isValidBroadcastAmbImpl(address)\":{\"details\":\"helps validate if an address is a valid broadcast amb implementation\",\"params\":{\"ambAddress_\":\"is the address of the broadcast amb implementation\"},\"returns\":{\"valid_\":\"a flag indicating if its valid.\"}},\"isValidStateRegistry(address)\":{\"details\":\"helps validate if an address is a valid state registry\",\"params\":{\"registryAddress_\":\"is the address of the state registry\"},\"returns\":{\"valid_\":\"a flag indicating if its valid.\"}},\"setAddress(bytes32,address,uint64)\":{\"details\":\"sets a new address on a specific chain.\",\"params\":{\"chainId_\":\"the chain id of that chain\",\"id_\":\"the identifier of the address on that chain\",\"newAddress_\":\"the new address on that chain\"}},\"setAmbAddress(uint8[],address[],bool[])\":{\"details\":\"allows admin to set the amb address for an amb id.\",\"params\":{\"ambAddress_\":\"represents the bridge address.\",\"ambId_\":\"represents the bridge unique identifier.\",\"isBroadcastAMB_\":\"represents whether the amb implementation supports broadcasting\"}},\"setBridgeAddresses(uint8[],address[],address[])\":{\"details\":\"allows admin to set the bridge address for an bridge id.\",\"params\":{\"bridgeAddress_\":\"represents the bridge address.\",\"bridgeId_\":\"represents the bridge unique identifier.\",\"bridgeValidator_\":\"represents the bridge validator address.\"}},\"setDelay(uint256)\":{\"details\":\"sets the deposit rescue delay\",\"params\":{\"delay_\":\"the delay in seconds before the deposit rescue can be finalized\"}},\"setPermit2(address)\":{\"details\":\"sets the permit2 address\",\"params\":{\"permit2_\":\"the address of the permit2 contract\"}},\"setStateRegistryAddress(uint8[],address[])\":{\"details\":\"allows admin to set the state registry address for an state registry id.\",\"params\":{\"registryAddress_\":\"represents the state registry's address.\",\"registryId_\":\"represents the state registry's unique identifier.\"}},\"setVaultLimitPerDestination(uint64,uint256)\":{\"details\":\"sets the safe vault limit\",\"params\":{\"chainId_\":\"is the remote chain identifier\",\"vaultLimit_\":\"is the max limit of vaults per transaction\"}}},\"title\":\"ISuperRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getStateRegistryId(address)\":{\"notice\":\"reverts if the id is not found\"},\"setAmbAddress(uint8[],address[],bool[])\":{\"notice\":\"this function operates in an APPEND-ONLY fashion.\"},\"setBridgeAddresses(uint8[],address[],address[])\":{\"notice\":\"this function operates in an APPEND-ONLY fashion.\"},\"setStateRegistryAddress(uint8[],address[])\":{\"notice\":\"this function operates in an APPEND-ONLY fashion.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISuperRegistry.sol\":\"ISuperRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/\",\":ERC1155A/=lib/ERC1155A/src/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/\",\":pigeon/=lib/pigeon/src/\",\":solady/=lib/pigeon/lib/solady/\",\":solidity-stringutils/=lib/surl/lib/solidity-stringutils/\",\":solmate/=lib/ERC1155A/lib/solmate/src/\",\":super-vaults/=lib/super-vaults/src/\",\":surl/=lib/surl/\",\":v2-core/=lib/super-vaults/lib/v2-core/contracts/\",\":v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/\",\":v3-core/=lib/super-vaults/lib/v3-core/\"]},\"sources\":{\"src/interfaces/ISuperRegistry.sol\":{\"keccak256\":\"0xcadfa5f2af007eb37d084860fc8445df4d40b37e83dd019ea6d95838411f560f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3d888a2778f5b54c2092c6ca2eda1f72f593ed5824b8692851705a70d2820c5a\",\"dweb:/ipfs/QmPqDtU6QHqbTZ3ukJJvaTGQfzuT2BshLZf2cZ5Vt3G4Yg\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"protocolAddressId","type":"bytes32","indexed":true},{"internalType":"uint64","name":"chainId","type":"uint64","indexed":true},{"internalType":"address","name":"oldAddress","type":"address","indexed":true},{"internalType":"address","name":"newAddress","type":"address","indexed":false}],"type":"event","name":"AddressUpdated","anonymous":false},{"inputs":[{"internalType":"uint8","name":"ambId_","type":"uint8","indexed":true},{"internalType":"address","name":"ambAddress_","type":"address","indexed":true},{"internalType":"bool","name":"isBroadcastAMB_","type":"bool","indexed":true}],"type":"event","name":"SetAmbAddress","anonymous":false},{"inputs":[{"internalType":"uint256","name":"bridgeId","type":"uint256","indexed":true},{"internalType":"address","name":"bridgeAddress","type":"address","indexed":true}],"type":"event","name":"SetBridgeAddress","anonymous":false},{"inputs":[{"internalType":"uint256","name":"bridgeId","type":"uint256","indexed":true},{"internalType":"address","name":"bridgeValidator","type":"address","indexed":true}],"type":"event","name":"SetBridgeValidator","anonymous":false},{"inputs":[{"internalType":"uint256","name":"oldDelay_","type":"uint256","indexed":true},{"internalType":"uint256","name":"newDelay_","type":"uint256","indexed":true}],"type":"event","name":"SetDelay","anonymous":false},{"inputs":[{"internalType":"address","name":"permit2","type":"address","indexed":true}],"type":"event","name":"SetPermit2","anonymous":false},{"inputs":[{"internalType":"uint8","name":"registryId_","type":"uint8","indexed":true},{"internalType":"address","name":"registryAddress_","type":"address","indexed":true}],"type":"event","name":"SetStateRegistryAddress","anonymous":false},{"inputs":[{"internalType":"uint64","name":"chainId_","type":"uint64","indexed":true},{"internalType":"uint256","name":"vaultLimit_","type":"uint256","indexed":true}],"type":"event","name":"SetVaultLimitPerDestination","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"BROADCAST_REGISTRY","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"BROADCAST_REGISTRY_PROCESSOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"CORE_REGISTRY_DISPUTER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"CORE_REGISTRY_PROCESSOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"CORE_REGISTRY_RESCUER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"CORE_REGISTRY_UPDATER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"CORE_STATE_REGISTRY","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"DST_SWAPPER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"DST_SWAPPER_PROCESSOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"EMERGENCY_QUEUE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"PAYLOAD_HELPER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"PAYMASTER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"PAYMENT_ADMIN","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"PAYMENT_HELPER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"PERMIT2","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"SUPERFORM_FACTORY","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"SUPERFORM_RECEIVER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"SUPERFORM_ROUTER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"SUPER_POSITIONS","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"SUPER_RBAC","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"TIMELOCK_REGISTRY_PROCESSOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"TIMELOCK_STATE_REGISTRY","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32[]","name":"ids_","type":"bytes32[]"},{"internalType":"address[]","name":"newAddresses_","type":"address[]"},{"internalType":"uint64[]","name":"chainIds_","type":"uint64[]"}],"stateMutability":"nonpayable","type":"function","name":"batchSetAddress"},{"inputs":[],"stateMutability":"view","type":"function","name":"delay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"id_","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"id_","type":"bytes32"},{"internalType":"uint64","name":"chainId_","type":"uint64"}],"stateMutability":"view","type":"function","name":"getAddressByChainId","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint8","name":"ambId_","type":"uint8"}],"stateMutability":"view","type":"function","name":"getAmbAddress","outputs":[{"internalType":"address","name":"ambAddress_","type":"address"}]},{"inputs":[{"internalType":"address","name":"ambAddress_","type":"address"}],"stateMutability":"view","type":"function","name":"getAmbId","outputs":[{"internalType":"uint8","name":"ambId_","type":"uint8"}]},{"inputs":[{"internalType":"uint8","name":"bridgeId_","type":"uint8"}],"stateMutability":"view","type":"function","name":"getBridgeAddress","outputs":[{"internalType":"address","name":"bridgeAddress_","type":"address"}]},{"inputs":[{"internalType":"uint8","name":"bridgeId_","type":"uint8"}],"stateMutability":"view","type":"function","name":"getBridgeValidator","outputs":[{"internalType":"address","name":"bridgeValidator_","type":"address"}]},{"inputs":[{"internalType":"uint8","name":"registryId_","type":"uint8"}],"stateMutability":"view","type":"function","name":"getStateRegistry","outputs":[{"internalType":"address","name":"registryAddress_","type":"address"}]},{"inputs":[{"internalType":"address","name":"registryAddress_","type":"address"}],"stateMutability":"view","type":"function","name":"getStateRegistryId","outputs":[{"internalType":"uint8","name":"registryId_","type":"uint8"}]},{"inputs":[{"internalType":"uint64","name":"chainId_","type":"uint64"}],"stateMutability":"view","type":"function","name":"getVaultLimitPerDestination","outputs":[{"internalType":"uint256","name":"vaultLimitPerDestination_","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"ambAddress_","type":"address"}],"stateMutability":"view","type":"function","name":"isValidAmbImpl","outputs":[{"internalType":"bool","name":"valid_","type":"bool"}]},{"inputs":[{"internalType":"address","name":"ambAddress_","type":"address"}],"stateMutability":"view","type":"function","name":"isValidBroadcastAmbImpl","outputs":[{"internalType":"bool","name":"valid_","type":"bool"}]},{"inputs":[{"internalType":"address","name":"registryAddress_","type":"address"}],"stateMutability":"view","type":"function","name":"isValidStateRegistry","outputs":[{"internalType":"bool","name":"valid_","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"id_","type":"bytes32"},{"internalType":"address","name":"newAddress_","type":"address"},{"internalType":"uint64","name":"chainId_","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setAddress"},{"inputs":[{"internalType":"uint8[]","name":"ambId_","type":"uint8[]"},{"internalType":"address[]","name":"ambAddress_","type":"address[]"},{"internalType":"bool[]","name":"isBroadcastAMB_","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"setAmbAddress"},{"inputs":[{"internalType":"uint8[]","name":"bridgeId_","type":"uint8[]"},{"internalType":"address[]","name":"bridgeAddress_","type":"address[]"},{"internalType":"address[]","name":"bridgeValidator_","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"setBridgeAddresses"},{"inputs":[{"internalType":"uint256","name":"delay_","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setDelay"},{"inputs":[{"internalType":"address","name":"permit2_","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setPermit2"},{"inputs":[{"internalType":"uint8[]","name":"registryId_","type":"uint8[]"},{"internalType":"address[]","name":"registryAddress_","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"setStateRegistryAddress"},{"inputs":[{"internalType":"uint64","name":"chainId_","type":"uint64"},{"internalType":"uint256","name":"vaultLimit_","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setVaultLimitPerDestination"}],"devdoc":{"kind":"dev","methods":{"BROADCAST_REGISTRY()":{"details":"returns the id of the broadcast state registry module"},"BROADCAST_REGISTRY_PROCESSOR()":{"details":"returns the id of the broadcast registry processor keeper"},"CORE_REGISTRY_DISPUTER()":{"details":"returns the id of the core state registry updater keeper"},"CORE_REGISTRY_PROCESSOR()":{"details":"returns the id of the core state registry processor keeper"},"CORE_REGISTRY_RESCUER()":{"details":"returns the id of the core state registry updater keeper"},"CORE_REGISTRY_UPDATER()":{"details":"returns the id of the core state registry updater keeper"},"CORE_STATE_REGISTRY()":{"details":"returns the id of the core state registry module"},"DST_SWAPPER()":{"details":"returns the id of the dst swapper keeper"},"DST_SWAPPER_PROCESSOR()":{"details":"returns the id of the core state registry updater keeper"},"EMERGENCY_QUEUE()":{"details":"returns the id of the emergency queue"},"PAYLOAD_HELPER()":{"details":"returns the id of the payload helper module"},"PAYMASTER()":{"details":"returns the id of the superform paymaster contract"},"PAYMENT_ADMIN()":{"details":"returns the id of the payment admin keeper"},"PAYMENT_HELPER()":{"details":"returns the id of the superform payload helper contract"},"PERMIT2()":{"details":"returns the permit2 address"},"SUPERFORM_FACTORY()":{"details":"returns the id of the superform factory module"},"SUPERFORM_RECEIVER()":{"details":"returns the id of the superform receiver"},"SUPERFORM_ROUTER()":{"details":"returns the id of the superform router module"},"SUPER_POSITIONS()":{"details":"returns the id of the super positions module"},"SUPER_RBAC()":{"details":"returns the id of the super rbac module"},"TIMELOCK_REGISTRY_PROCESSOR()":{"details":"returns the id of the timelock form state registry processor keeper"},"TIMELOCK_STATE_REGISTRY()":{"details":"returns the id of the timelock form state registry module"},"batchSetAddress(bytes32[],address[],uint64[])":{"details":"sets new addresses on specific chains.","params":{"chainIds_":"are the chain ids of that chain","ids_":"are the identifiers of the address on that chain","newAddresses_":"are the new addresses on that chain"}},"delay()":{"details":"gets the deposit rescue delay"},"getAddress(bytes32)":{"details":"gets the address of a contract on current chain","params":{"id_":"is the id of the contract"}},"getAddressByChainId(bytes32,uint64)":{"details":"gets the address of a contract on a target chain","params":{"chainId_":"is the chain id of that chain","id_":"is the id of the contract"}},"getAmbAddress(uint8)":{"details":"gets the address of a amb","params":{"ambId_":"is the id of a bridge"},"returns":{"ambAddress_":"is the address of the form"}},"getAmbId(address)":{"details":"gets the id of the amb","params":{"ambAddress_":"is the address of an amb"},"returns":{"ambId_":"is the identifier of an amb"}},"getBridgeAddress(uint8)":{"details":"gets the address of a bridge","params":{"bridgeId_":"is the id of a bridge"},"returns":{"bridgeAddress_":"is the address of the form"}},"getBridgeValidator(uint8)":{"details":"gets the address of a bridge validator","params":{"bridgeId_":"is the id of a bridge"},"returns":{"bridgeValidator_":"is the address of the form"}},"getStateRegistry(uint8)":{"details":"gets the address of the registry","params":{"registryId_":"is the id of the state registry"},"returns":{"registryAddress_":"is the address of the state registry"}},"getStateRegistryId(address)":{"details":"gets the id of the registry","params":{"registryAddress_":"is the address of the state registry"},"returns":{"registryId_":"is the id of the state registry"}},"getVaultLimitPerDestination(uint64)":{"details":"gets the safe vault limit","params":{"chainId_":"is the id of the remote chain"},"returns":{"vaultLimitPerDestination_":"is the safe number of vaults to deposit without hitting out of gas error"}},"isValidAmbImpl(address)":{"details":"helps validate if an address is a valid amb implementation","params":{"ambAddress_":"is the address of the amb implementation"},"returns":{"valid_":"a flag indicating if its valid."}},"isValidBroadcastAmbImpl(address)":{"details":"helps validate if an address is a valid broadcast amb implementation","params":{"ambAddress_":"is the address of the broadcast amb implementation"},"returns":{"valid_":"a flag indicating if its valid."}},"isValidStateRegistry(address)":{"details":"helps validate if an address is a valid state registry","params":{"registryAddress_":"is the address of the state registry"},"returns":{"valid_":"a flag indicating if its valid."}},"setAddress(bytes32,address,uint64)":{"details":"sets a new address on a specific chain.","params":{"chainId_":"the chain id of that chain","id_":"the identifier of the address on that chain","newAddress_":"the new address on that chain"}},"setAmbAddress(uint8[],address[],bool[])":{"details":"allows admin to set the amb address for an amb id.","params":{"ambAddress_":"represents the bridge address.","ambId_":"represents the bridge unique identifier.","isBroadcastAMB_":"represents whether the amb implementation supports broadcasting"}},"setBridgeAddresses(uint8[],address[],address[])":{"details":"allows admin to set the bridge address for an bridge id.","params":{"bridgeAddress_":"represents the bridge address.","bridgeId_":"represents the bridge unique identifier.","bridgeValidator_":"represents the bridge validator address."}},"setDelay(uint256)":{"details":"sets the deposit rescue delay","params":{"delay_":"the delay in seconds before the deposit rescue can be finalized"}},"setPermit2(address)":{"details":"sets the permit2 address","params":{"permit2_":"the address of the permit2 contract"}},"setStateRegistryAddress(uint8[],address[])":{"details":"allows admin to set the state registry address for an state registry id.","params":{"registryAddress_":"represents the state registry's address.","registryId_":"represents the state registry's unique identifier."}},"setVaultLimitPerDestination(uint64,uint256)":{"details":"sets the safe vault limit","params":{"chainId_":"is the remote chain identifier","vaultLimit_":"is the max limit of vaults per transaction"}}},"version":1},"userdoc":{"kind":"user","methods":{"getStateRegistryId(address)":{"notice":"reverts if the id is not found"},"setAmbAddress(uint8[],address[],bool[])":{"notice":"this function operates in an APPEND-ONLY fashion."},"setBridgeAddresses(uint8[],address[],address[])":{"notice":"this function operates in an APPEND-ONLY fashion."},"setStateRegistryAddress(uint8[],address[])":{"notice":"this function operates in an APPEND-ONLY fashion."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/","ERC1155A/=lib/ERC1155A/src/","ds-test/=lib/ds-test/src/","erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/","pigeon/=lib/pigeon/src/","solady/=lib/pigeon/lib/solady/","solidity-stringutils/=lib/surl/lib/solidity-stringutils/","solmate/=lib/ERC1155A/lib/solmate/src/","super-vaults/=lib/super-vaults/src/","surl/=lib/surl/","v2-core/=lib/super-vaults/lib/v2-core/contracts/","v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/","v3-core/=lib/super-vaults/lib/v3-core/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/ISuperRegistry.sol":"ISuperRegistry"},"evmVersion":"paris","libraries":{}},"sources":{"src/interfaces/ISuperRegistry.sol":{"keccak256":"0xcadfa5f2af007eb37d084860fc8445df4d40b37e83dd019ea6d95838411f560f","urls":["bzz-raw://3d888a2778f5b54c2092c6ca2eda1f72f593ed5824b8692851705a70d2820c5a","dweb:/ipfs/QmPqDtU6QHqbTZ3ukJJvaTGQfzuT2BshLZf2cZ5Vt3G4Yg"],"license":"BUSL-1.1"}},"version":1},"id":161}