{"abi":[{"type":"function","name":"dispatchPayload","inputs":[{"name":"srcSender_","type":"address","internalType":"address"},{"name":"dstChainId_","type":"uint64","internalType":"uint64"},{"name":"message_","type":"bytes","internalType":"bytes"},{"name":"extraData_","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"estimateFees","inputs":[{"name":"dstChainId_","type":"uint64","internalType":"uint64"},{"name":"message_","type":"bytes","internalType":"bytes"},{"name":"extraData_","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"fees","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"generateExtraData","inputs":[{"name":"gasLimit","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"extraData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"retryPayload","inputs":[{"name":"data_","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"event","name":"AuthorizedImplAdded","inputs":[{"name":"superChainId","type":"uint64","indexed":true,"internalType":"uint64"},{"name":"authImpl","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ChainAdded","inputs":[{"name":"superChainId","type":"uint64","indexed":true,"internalType":"uint64"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"dispatchPayload(address,uint64,bytes,bytes)":"9783d0ef","estimateFees(uint64,bytes,bytes)":"ea98b147","generateExtraData(uint256)":"25fc6dd0","retryPayload(bytes)":"0fbb7cbc"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"superChainId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authImpl\",\"type\":\"address\"}],\"name\":\"AuthorizedImplAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"superChainId\",\"type\":\"uint64\"}],\"name\":\"ChainAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"srcSender_\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"dstChainId_\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"message_\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData_\",\"type\":\"bytes\"}],\"name\":\"dispatchPayload\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dstChainId_\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"message_\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData_\",\"type\":\"bytes\"}],\"name\":\"estimateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"generateExtraData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data_\",\"type\":\"bytes\"}],\"name\":\"retryPayload\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ZeroPoint Labs\",\"details\":\"Interface for arbitrary message bridge (AMB) implementations\",\"kind\":\"dev\",\"methods\":{\"dispatchPayload(address,uint64,bytes,bytes)\":{\"details\":\"allows state registry to send message via implementation.\",\"params\":{\"dstChainId_\":\"is the identifier of the destination chain\",\"extraData_\":\"is message amb specific override information\",\"message_\":\"is the cross-chain message to be sent\",\"srcSender_\":\"is the caller (used for gas refunds)\"}},\"estimateFees(uint64,bytes,bytes)\":{\"details\":\"returns the gas fees estimation in native tokens\",\"params\":{\"dstChainId_\":\"is the identifier of the destination chain\",\"extraData_\":\"is any amb-specific information\",\"message_\":\"is the cross-chain message\"},\"returns\":{\"fees\":\"is the native_tokens to be sent along the transaction\"}},\"generateExtraData(uint256)\":{\"details\":\"returns the extra data for the given gas request\",\"params\":{\"gasLimit\":\"is the amount of gas limit in wei to override\"},\"returns\":{\"extraData\":\"is the bytes encoded extra data NOTE: this process is unique to the message bridge\"}},\"retryPayload(bytes)\":{\"details\":\"allows for the permissionless calling of the retry mechanism for encoded data\",\"params\":{\"data_\":\"is the encoded retry data (different per AMB implementation)\"}}},\"title\":\"IAmbImplementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"estimateFees(uint64,bytes,bytes)\":{\"notice\":\"not all AMBs will have on-chain estimation for which this function will return 0\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IAmbImplementation.sol\":\"IAmbImplementation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/\",\":ERC1155A/=lib/ERC1155A/src/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/\",\":pigeon/=lib/pigeon/src/\",\":solady/=lib/pigeon/lib/solady/\",\":solidity-stringutils/=lib/surl/lib/solidity-stringutils/\",\":solmate/=lib/ERC1155A/lib/solmate/src/\",\":super-vaults/=lib/super-vaults/src/\",\":surl/=lib/surl/\",\":v2-core/=lib/super-vaults/lib/v2-core/contracts/\",\":v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/\",\":v3-core/=lib/super-vaults/lib/v3-core/\"]},\"sources\":{\"src/interfaces/IAmbImplementation.sol\":{\"keccak256\":\"0xe81ba51a2d97899de6f586124feb3bcdac511aed5c070923abd415865c158b95\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://777dc535f054cba428cc138ac486416ecdaea73d65f2b35df9131777c8d20b9a\",\"dweb:/ipfs/QmNh7EQJWWpeSEAc1Xh3mMbgJqh5Abr1EMphWwEr3kJWtR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint64","name":"superChainId","type":"uint64","indexed":true},{"internalType":"address","name":"authImpl","type":"address","indexed":true}],"type":"event","name":"AuthorizedImplAdded","anonymous":false},{"inputs":[{"internalType":"uint64","name":"superChainId","type":"uint64","indexed":true}],"type":"event","name":"ChainAdded","anonymous":false},{"inputs":[{"internalType":"address","name":"srcSender_","type":"address"},{"internalType":"uint64","name":"dstChainId_","type":"uint64"},{"internalType":"bytes","name":"message_","type":"bytes"},{"internalType":"bytes","name":"extraData_","type":"bytes"}],"stateMutability":"payable","type":"function","name":"dispatchPayload"},{"inputs":[{"internalType":"uint64","name":"dstChainId_","type":"uint64"},{"internalType":"bytes","name":"message_","type":"bytes"},{"internalType":"bytes","name":"extraData_","type":"bytes"}],"stateMutability":"view","type":"function","name":"estimateFees","outputs":[{"internalType":"uint256","name":"fees","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"gasLimit","type":"uint256"}],"stateMutability":"pure","type":"function","name":"generateExtraData","outputs":[{"internalType":"bytes","name":"extraData","type":"bytes"}]},{"inputs":[{"internalType":"bytes","name":"data_","type":"bytes"}],"stateMutability":"payable","type":"function","name":"retryPayload"}],"devdoc":{"kind":"dev","methods":{"dispatchPayload(address,uint64,bytes,bytes)":{"details":"allows state registry to send message via implementation.","params":{"dstChainId_":"is the identifier of the destination chain","extraData_":"is message amb specific override information","message_":"is the cross-chain message to be sent","srcSender_":"is the caller (used for gas refunds)"}},"estimateFees(uint64,bytes,bytes)":{"details":"returns the gas fees estimation in native tokens","params":{"dstChainId_":"is the identifier of the destination chain","extraData_":"is any amb-specific information","message_":"is the cross-chain message"},"returns":{"fees":"is the native_tokens to be sent along the transaction"}},"generateExtraData(uint256)":{"details":"returns the extra data for the given gas request","params":{"gasLimit":"is the amount of gas limit in wei to override"},"returns":{"extraData":"is the bytes encoded extra data NOTE: this process is unique to the message bridge"}},"retryPayload(bytes)":{"details":"allows for the permissionless calling of the retry mechanism for encoded data","params":{"data_":"is the encoded retry data (different per AMB implementation)"}}},"version":1},"userdoc":{"kind":"user","methods":{"estimateFees(uint64,bytes,bytes)":{"notice":"not all AMBs will have on-chain estimation for which this function will return 0"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/","ERC1155A/=lib/ERC1155A/src/","ds-test/=lib/ds-test/src/","erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/","pigeon/=lib/pigeon/src/","solady/=lib/pigeon/lib/solady/","solidity-stringutils/=lib/surl/lib/solidity-stringutils/","solmate/=lib/ERC1155A/lib/solmate/src/","super-vaults/=lib/super-vaults/src/","surl/=lib/surl/","v2-core/=lib/super-vaults/lib/v2-core/contracts/","v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/","v3-core/=lib/super-vaults/lib/v3-core/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IAmbImplementation.sol":"IAmbImplementation"},"evmVersion":"paris","libraries":{}},"sources":{"src/interfaces/IAmbImplementation.sol":{"keccak256":"0xe81ba51a2d97899de6f586124feb3bcdac511aed5c070923abd415865c158b95","urls":["bzz-raw://777dc535f054cba428cc138ac486416ecdaea73d65f2b35df9131777c8d20b9a","dweb:/ipfs/QmNh7EQJWWpeSEAc1Xh3mMbgJqh5Abr1EMphWwEr3kJWtR"],"license":"BUSL-1.1"}},"version":1},"id":141}