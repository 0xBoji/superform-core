{"abi":[{"type":"function","name":"startBridgeTokensViaAcrossERC20Min","inputs":[{"name":"transactionId","type":"bytes32","internalType":"bytes32"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"minAmount","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"},{"name":"destinationChainId","type":"uint64","internalType":"uint64"},{"name":"relayerFeePct","type":"int64","internalType":"int64"},{"name":"quoteTimestamp","type":"uint32","internalType":"uint32"},{"name":"message","type":"bytes","internalType":"bytes"},{"name":"maxCount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"startBridgeTokensViaAcrossERC20Packed","inputs":[],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"startBridgeTokensViaAcrossNativeMin","inputs":[{"name":"transactionId","type":"bytes32","internalType":"bytes32"},{"name":"receiver","type":"address","internalType":"address"},{"name":"destinationChainId","type":"uint256","internalType":"uint256"},{"name":"relayerFeePct","type":"int64","internalType":"int64"},{"name":"quoteTimestamp","type":"uint32","internalType":"uint32"},{"name":"message","type":"bytes","internalType":"bytes"},{"name":"maxCount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"startBridgeTokensViaAcrossNativePacked","inputs":[],"outputs":[],"stateMutability":"payable"}],"bytecode":{"object":"0x608060405234801561001057600080fd5b5061047b806100206000396000f3fe60806040526004361061003f5760003560e01c80632340ab8f146100445780634c128e601461004e5780635a39b10a1461006a5780635eedcbd614610074575b600080fd5b61004c610090565b005b61006860048036038101906100639190610298565b610092565b005b61007261009e565b005b61008e60048036038101906100899190610383565b6100a0565b005b565b50505050505050505050565b565b5050505050505050565b600080fd5b600080fd5b6000819050919050565b6100c7816100b4565b81146100d257600080fd5b50565b6000813590506100e4816100be565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610115826100ea565b9050919050565b6101258161010a565b811461013057600080fd5b50565b6000813590506101428161011c565b92915050565b6000819050919050565b61015b81610148565b811461016657600080fd5b50565b60008135905061017881610152565b92915050565b600067ffffffffffffffff82169050919050565b61019b8161017e565b81146101a657600080fd5b50565b6000813590506101b881610192565b92915050565b60008160070b9050919050565b6101d4816101be565b81146101df57600080fd5b50565b6000813590506101f1816101cb565b92915050565b600063ffffffff82169050919050565b610210816101f7565b811461021b57600080fd5b50565b60008135905061022d81610207565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261025857610257610233565b5b8235905067ffffffffffffffff81111561027557610274610238565b5b6020830191508360018202830111156102915761029061023d565b5b9250929050565b6000806000806000806000806000806101208b8d0312156102bc576102bb6100aa565b5b60006102ca8d828e016100d5565b9a505060206102db8d828e01610133565b99505060406102ec8d828e01610169565b98505060606102fd8d828e01610133565b975050608061030e8d828e016101a9565b96505060a061031f8d828e016101e2565b95505060c06103308d828e0161021e565b94505060e08b013567ffffffffffffffff811115610351576103506100af565b5b61035d8d828e01610242565b93509350506101006103718d828e01610169565b9150509295989b9194979a5092959850565b60008060008060008060008060e0898b0312156103a3576103a26100aa565b5b60006103b18b828c016100d5565b98505060206103c28b828c01610133565b97505060406103d38b828c01610169565b96505060606103e48b828c016101e2565b95505060806103f58b828c0161021e565b94505060a089013567ffffffffffffffff811115610416576104156100af565b5b6104228b828c01610242565b935093505060c06104358b828c01610169565b915050929598509295989093965056fea2646970667358221220ef317929b8785fb674a5846d9f66a82f661fce947a201f5364c6d063399fe5c464736f6c63430008170033","sourceMap":"378:2558:104:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x60806040526004361061003f5760003560e01c80632340ab8f146100445780634c128e601461004e5780635a39b10a1461006a5780635eedcbd614610074575b600080fd5b61004c610090565b005b61006860048036038101906100639190610298565b610092565b005b61007261009e565b005b61008e60048036038101906100899190610383565b6100a0565b005b565b50505050505050505050565b565b5050505050505050565b600080fd5b600080fd5b6000819050919050565b6100c7816100b4565b81146100d257600080fd5b50565b6000813590506100e4816100be565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610115826100ea565b9050919050565b6101258161010a565b811461013057600080fd5b50565b6000813590506101428161011c565b92915050565b6000819050919050565b61015b81610148565b811461016657600080fd5b50565b60008135905061017881610152565b92915050565b600067ffffffffffffffff82169050919050565b61019b8161017e565b81146101a657600080fd5b50565b6000813590506101b881610192565b92915050565b60008160070b9050919050565b6101d4816101be565b81146101df57600080fd5b50565b6000813590506101f1816101cb565b92915050565b600063ffffffff82169050919050565b610210816101f7565b811461021b57600080fd5b50565b60008135905061022d81610207565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261025857610257610233565b5b8235905067ffffffffffffffff81111561027557610274610238565b5b6020830191508360018202830111156102915761029061023d565b5b9250929050565b6000806000806000806000806000806101208b8d0312156102bc576102bb6100aa565b5b60006102ca8d828e016100d5565b9a505060206102db8d828e01610133565b99505060406102ec8d828e01610169565b98505060606102fd8d828e01610133565b975050608061030e8d828e016101a9565b96505060a061031f8d828e016101e2565b95505060c06103308d828e0161021e565b94505060e08b013567ffffffffffffffff811115610351576103506100af565b5b61035d8d828e01610242565b93509350506101006103718d828e01610169565b9150509295989b9194979a5092959850565b60008060008060008060008060e0898b0312156103a3576103a26100aa565b5b60006103b18b828c016100d5565b98505060206103c28b828c01610133565b97505060406103d38b828c01610169565b96505060606103e48b828c016101e2565b95505060806103f58b828c0161021e565b94505060a089013567ffffffffffffffff811115610416576104156100af565b5b6104228b828c01610242565b935093505060c06104358b828c01610169565b915050929598509295989093965056fea2646970667358221220ef317929b8785fb674a5846d9f66a82f661fce947a201f5364c6d063399fe5c464736f6c63430008170033","sourceMap":"378:2558:104:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1735:69;;;:::i;:::-;;2575:359;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;561:70;;;:::i;:::-;;1278:302;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1735:69;:::o;2575:359::-;;;;;;;;;;;:::o;561:70::-;:::o;1278:302::-;;;;;;;;;:::o;88:117:389:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:96::-;859:7;888:24;906:5;888:24;:::i;:::-;877:35;;822:96;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:77::-;1234:7;1263:5;1252:16;;1197:77;;;:::o;1280:122::-;1353:24;1371:5;1353:24;:::i;:::-;1346:5;1343:35;1333:63;;1392:1;1389;1382:12;1333:63;1280:122;:::o;1408:139::-;1454:5;1492:6;1479:20;1470:29;;1508:33;1535:5;1508:33;:::i;:::-;1408:139;;;;:::o;1553:101::-;1589:7;1629:18;1622:5;1618:30;1607:41;;1553:101;;;:::o;1660:120::-;1732:23;1749:5;1732:23;:::i;:::-;1725:5;1722:34;1712:62;;1770:1;1767;1760:12;1712:62;1660:120;:::o;1786:137::-;1831:5;1869:6;1856:20;1847:29;;1885:32;1911:5;1885:32;:::i;:::-;1786:137;;;;:::o;1929:90::-;1964:7;2007:5;2004:1;1993:20;1982:31;;1929:90;;;:::o;2025:118::-;2096:22;2112:5;2096:22;:::i;:::-;2089:5;2086:33;2076:61;;2133:1;2130;2123:12;2076:61;2025:118;:::o;2149:135::-;2193:5;2231:6;2218:20;2209:29;;2247:31;2272:5;2247:31;:::i;:::-;2149:135;;;;:::o;2290:93::-;2326:7;2366:10;2359:5;2355:22;2344:33;;2290:93;;;:::o;2389:120::-;2461:23;2478:5;2461:23;:::i;:::-;2454:5;2451:34;2441:62;;2499:1;2496;2489:12;2441:62;2389:120;:::o;2515:137::-;2560:5;2598:6;2585:20;2576:29;;2614:32;2640:5;2614:32;:::i;:::-;2515:137;;;;:::o;2658:117::-;2767:1;2764;2757:12;2781:117;2890:1;2887;2880:12;2904:117;3013:1;3010;3003:12;3040:552;3097:8;3107:6;3157:3;3150:4;3142:6;3138:17;3134:27;3124:122;;3165:79;;:::i;:::-;3124:122;3278:6;3265:20;3255:30;;3308:18;3300:6;3297:30;3294:117;;;3330:79;;:::i;:::-;3294:117;3444:4;3436:6;3432:17;3420:29;;3498:3;3490:4;3482:6;3478:17;3468:8;3464:32;3461:41;3458:128;;;3505:79;;:::i;:::-;3458:128;3040:552;;;;;:::o;3598:1685::-;3736:6;3744;3752;3760;3768;3776;3784;3792;3800;3808;3857:3;3845:9;3836:7;3832:23;3828:33;3825:120;;;3864:79;;:::i;:::-;3825:120;3984:1;4009:53;4054:7;4045:6;4034:9;4030:22;4009:53;:::i;:::-;3999:63;;3955:117;4111:2;4137:53;4182:7;4173:6;4162:9;4158:22;4137:53;:::i;:::-;4127:63;;4082:118;4239:2;4265:53;4310:7;4301:6;4290:9;4286:22;4265:53;:::i;:::-;4255:63;;4210:118;4367:2;4393:53;4438:7;4429:6;4418:9;4414:22;4393:53;:::i;:::-;4383:63;;4338:118;4495:3;4522:52;4566:7;4557:6;4546:9;4542:22;4522:52;:::i;:::-;4512:62;;4466:118;4623:3;4650:51;4693:7;4684:6;4673:9;4669:22;4650:51;:::i;:::-;4640:61;;4594:117;4750:3;4777:52;4821:7;4812:6;4801:9;4797:22;4777:52;:::i;:::-;4767:62;;4721:118;4906:3;4895:9;4891:19;4878:33;4938:18;4930:6;4927:30;4924:117;;;4960:79;;:::i;:::-;4924:117;5073:64;5129:7;5120:6;5109:9;5105:22;5073:64;:::i;:::-;5055:82;;;;4849:298;5186:3;5213:53;5258:7;5249:6;5238:9;5234:22;5213:53;:::i;:::-;5203:63;;5157:119;3598:1685;;;;;;;;;;;;;:::o;5289:1395::-;5410:6;5418;5426;5434;5442;5450;5458;5466;5515:3;5503:9;5494:7;5490:23;5486:33;5483:120;;;5522:79;;:::i;:::-;5483:120;5642:1;5667:53;5712:7;5703:6;5692:9;5688:22;5667:53;:::i;:::-;5657:63;;5613:117;5769:2;5795:53;5840:7;5831:6;5820:9;5816:22;5795:53;:::i;:::-;5785:63;;5740:118;5897:2;5923:53;5968:7;5959:6;5948:9;5944:22;5923:53;:::i;:::-;5913:63;;5868:118;6025:2;6051:51;6094:7;6085:6;6074:9;6070:22;6051:51;:::i;:::-;6041:61;;5996:116;6151:3;6178:52;6222:7;6213:6;6202:9;6198:22;6178:52;:::i;:::-;6168:62;;6122:118;6307:3;6296:9;6292:19;6279:33;6339:18;6331:6;6328:30;6325:117;;;6361:79;;:::i;:::-;6325:117;6474:64;6530:7;6521:6;6510:9;6506:22;6474:64;:::i;:::-;6456:82;;;;6250:298;6587:3;6614:53;6659:7;6650:6;6639:9;6635:22;6614:53;:::i;:::-;6604:63;;6558:119;5289:1395;;;;;;;;;;;:::o","linkReferences":{}},"methodIdentifiers":{"startBridgeTokensViaAcrossERC20Min(bytes32,address,uint256,address,uint64,int64,uint32,bytes,uint256)":"4c128e60","startBridgeTokensViaAcrossERC20Packed()":"2340ab8f","startBridgeTokensViaAcrossNativeMin(bytes32,address,uint256,int64,uint32,bytes,uint256)":"5eedcbd6","startBridgeTokensViaAcrossNativePacked()":"5a39b10a"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"destinationChainId\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"startBridgeTokensViaAcrossERC20Min\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBridgeTokensViaAcrossERC20Packed\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"startBridgeTokensViaAcrossNativeMin\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBridgeTokensViaAcrossNativePacked\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"LI.FI (https://li.fi)\",\"custom:version\":\"1.0.0\",\"kind\":\"dev\",\"methods\":{\"startBridgeTokensViaAcrossERC20Min(bytes32,address,uint256,address,uint64,int64,uint32,bytes,uint256)\":{\"params\":{\"destinationChainId\":\"Receiving chain\",\"maxCount\":\"Used to protect the depositor from frontrunning to guarantee their quote remains valid\",\"message\":\"Arbitrary data that can be used to pass additional information to the recipient along with the tokens\",\"minAmount\":\"The amount to be bridged\",\"quoteTimestamp\":\"The timestamp associated with the suggested fee\",\"receiver\":\"Receiving wallet address\",\"relayerFeePct\":\"The relayer fee in token percentage with 18 decimals\",\"sendingAssetId\":\"The address of the asset/token to be bridged\",\"transactionId\":\"Custom transaction ID for tracking\"}},\"startBridgeTokensViaAcrossNativeMin(bytes32,address,uint256,int64,uint32,bytes,uint256)\":{\"params\":{\"destinationChainId\":\"Receiving chain\",\"maxCount\":\"Used to protect the depositor from frontrunning to guarantee their quote remains valid\",\"message\":\"Arbitrary data that can be used to pass additional information to the recipient along with the tokens\",\"quoteTimestamp\":\"The timestamp associated with the suggested fee\",\"receiver\":\"Receiving wallet address\",\"relayerFeePct\":\"The relayer fee in token percentage with 18 decimals\",\"transactionId\":\"Custom transaction ID for tracking\"}}},\"title\":\"AcrossFacetPacked\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"startBridgeTokensViaAcrossERC20Min(bytes32,address,uint256,address,uint64,int64,uint32,bytes,uint256)\":{\"notice\":\"Bridges ERC20 tokens via Across (minimal implementation)\"},\"startBridgeTokensViaAcrossERC20Packed()\":{\"notice\":\"Bridges ERC20 tokens via Across (packed implementation) No params, all data will be extracted from manually encoded callData\"},\"startBridgeTokensViaAcrossNativeMin(bytes32,address,uint256,int64,uint32,bytes,uint256)\":{\"notice\":\"Bridges native tokens via Across (minimal implementation)\"},\"startBridgeTokensViaAcrossNativePacked()\":{\"notice\":\"Bridges native tokens via Across (packed implementation) No params, all data will be extracted from manually encoded callData\"}},\"notice\":\"Provides functionality for bridging through Across in a gas-optimized waytaken from LiFi contracts https://github.com/lifinance/contracts and stripped down to needs!WARNING ALREADY BLACKLISTED\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/forge-scripts/misc/blacklistedFacets/AcrossFacetPacked.sol\":\"AcrossFacetPacked\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/\",\":ERC1155A/=lib/ERC1155A/src/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/\",\":pigeon/=lib/pigeon/src/\",\":solady/=lib/pigeon/lib/solady/\",\":solidity-stringutils/=lib/surl/lib/solidity-stringutils/\",\":solmate/=lib/ERC1155A/lib/solmate/src/\",\":super-vaults/=lib/super-vaults/src/\",\":surl/=lib/surl/\",\":v2-core/=lib/super-vaults/lib/v2-core/contracts/\",\":v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/\",\":v3-core/=lib/super-vaults/lib/v3-core/\"]},\"sources\":{\"script/forge-scripts/misc/blacklistedFacets/AcrossFacetPacked.sol\":{\"keccak256\":\"0xa55ba0fe37f5907ffef7da930f3a144ea3b15f72350b1b9b46ad11c80604490a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://215ed95a1a8ee4d9c68257a3221999ed075e13fc99b196de3d769130d13f7e4d\",\"dweb:/ipfs/Qma4sop3g1ys4iQt1vvkkZPxZ6VjP7Ro8AVd6PXmeyKWkf\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"transactionId","type":"bytes32"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint64","name":"destinationChainId","type":"uint64"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"startBridgeTokensViaAcrossERC20Min"},{"inputs":[],"stateMutability":"payable","type":"function","name":"startBridgeTokensViaAcrossERC20Packed"},{"inputs":[{"internalType":"bytes32","name":"transactionId","type":"bytes32"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"startBridgeTokensViaAcrossNativeMin"},{"inputs":[],"stateMutability":"payable","type":"function","name":"startBridgeTokensViaAcrossNativePacked"}],"devdoc":{"kind":"dev","methods":{"startBridgeTokensViaAcrossERC20Min(bytes32,address,uint256,address,uint64,int64,uint32,bytes,uint256)":{"params":{"destinationChainId":"Receiving chain","maxCount":"Used to protect the depositor from frontrunning to guarantee their quote remains valid","message":"Arbitrary data that can be used to pass additional information to the recipient along with the tokens","minAmount":"The amount to be bridged","quoteTimestamp":"The timestamp associated with the suggested fee","receiver":"Receiving wallet address","relayerFeePct":"The relayer fee in token percentage with 18 decimals","sendingAssetId":"The address of the asset/token to be bridged","transactionId":"Custom transaction ID for tracking"}},"startBridgeTokensViaAcrossNativeMin(bytes32,address,uint256,int64,uint32,bytes,uint256)":{"params":{"destinationChainId":"Receiving chain","maxCount":"Used to protect the depositor from frontrunning to guarantee their quote remains valid","message":"Arbitrary data that can be used to pass additional information to the recipient along with the tokens","quoteTimestamp":"The timestamp associated with the suggested fee","receiver":"Receiving wallet address","relayerFeePct":"The relayer fee in token percentage with 18 decimals","transactionId":"Custom transaction ID for tracking"}}},"version":1},"userdoc":{"kind":"user","methods":{"startBridgeTokensViaAcrossERC20Min(bytes32,address,uint256,address,uint64,int64,uint32,bytes,uint256)":{"notice":"Bridges ERC20 tokens via Across (minimal implementation)"},"startBridgeTokensViaAcrossERC20Packed()":{"notice":"Bridges ERC20 tokens via Across (packed implementation) No params, all data will be extracted from manually encoded callData"},"startBridgeTokensViaAcrossNativeMin(bytes32,address,uint256,int64,uint32,bytes,uint256)":{"notice":"Bridges native tokens via Across (minimal implementation)"},"startBridgeTokensViaAcrossNativePacked()":{"notice":"Bridges native tokens via Across (packed implementation) No params, all data will be extracted from manually encoded callData"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/","ERC1155A/=lib/ERC1155A/src/","ds-test/=lib/ds-test/src/","erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/","pigeon/=lib/pigeon/src/","solady/=lib/pigeon/lib/solady/","solidity-stringutils/=lib/surl/lib/solidity-stringutils/","solmate/=lib/ERC1155A/lib/solmate/src/","super-vaults/=lib/super-vaults/src/","surl/=lib/surl/","v2-core/=lib/super-vaults/lib/v2-core/contracts/","v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/","v3-core/=lib/super-vaults/lib/v3-core/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"script/forge-scripts/misc/blacklistedFacets/AcrossFacetPacked.sol":"AcrossFacetPacked"},"evmVersion":"paris","libraries":{}},"sources":{"script/forge-scripts/misc/blacklistedFacets/AcrossFacetPacked.sol":{"keccak256":"0xa55ba0fe37f5907ffef7da930f3a144ea3b15f72350b1b9b46ad11c80604490a","urls":["bzz-raw://215ed95a1a8ee4d9c68257a3221999ed075e13fc99b196de3d769130d13f7e4d","dweb:/ipfs/Qma4sop3g1ys4iQt1vvkkZPxZ6VjP7Ro8AVd6PXmeyKWkf"],"license":"MIT"}},"version":1},"id":104}