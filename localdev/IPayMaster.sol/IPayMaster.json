{"abi":[{"type":"function","name":"makePayment","inputs":[{"name":"user_","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"rebalanceTo","inputs":[{"name":"superRegistryId_","type":"bytes32","internalType":"bytes32"},{"name":"req_","type":"tuple","internalType":"struct LiqRequest","components":[{"name":"txData","type":"bytes","internalType":"bytes"},{"name":"token","type":"address","internalType":"address"},{"name":"interimToken","type":"address","internalType":"address"},{"name":"bridgeId","type":"uint8","internalType":"uint8"},{"name":"liqDstChainId","type":"uint64","internalType":"uint64"},{"name":"nativeAmount","type":"uint256","internalType":"uint256"}]},{"name":"dstChainId_","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"treatAMB","inputs":[{"name":"ambId_","type":"uint8","internalType":"uint8"},{"name":"nativeValue_","type":"uint256","internalType":"uint256"},{"name":"data_","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawNativeTo","inputs":[{"name":"superRegistryId_","type":"bytes32","internalType":"bytes32"},{"name":"nativeAmount_","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawTo","inputs":[{"name":"superRegistryId_","type":"bytes32","internalType":"bytes32"},{"name":"token_","type":"address","internalType":"address"},{"name":"amount_","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"NativeWithdrawn","inputs":[{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Payment","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"TokenWithdrawn","inputs":[{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"makePayment(address)":"300be4fc","rebalanceTo(bytes32,(bytes,address,address,uint8,uint64,uint256),uint64)":"f6c65084","treatAMB(uint8,uint256,bytes)":"cfeba9aa","withdrawNativeTo(bytes32,uint256)":"a1090c1e","withdrawTo(bytes32,address,uint256)":"205ab6ac"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NativeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Payment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"makePayment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"superRegistryId_\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"txData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interimToken\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"bridgeId\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"liqDstChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"nativeAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LiqRequest\",\"name\":\"req_\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"dstChainId_\",\"type\":\"uint64\"}],\"name\":\"rebalanceTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"ambId_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"nativeValue_\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data_\",\"type\":\"bytes\"}],\"name\":\"treatAMB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"superRegistryId_\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nativeAmount_\",\"type\":\"uint256\"}],\"name\":\"withdrawNativeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"superRegistryId_\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ZeroPoint Labs\",\"details\":\"Interface for PayMaster\",\"events\":{\"NativeWithdrawn(address,uint256)\":{\"details\":\"is emitted when native tokens are moved out of paymaster\"},\"Payment(address,uint256)\":{\"details\":\"is emitted when a new payment is made\"},\"TokenWithdrawn(address,address,uint256)\":{\"details\":\"is emitted when  tokens are moved out of paymaster\"}},\"kind\":\"dev\",\"methods\":{\"makePayment(address)\":{\"details\":\"accepts payment from user\",\"params\":{\"user_\":\"is the wallet address of the paying user\"}},\"rebalanceTo(bytes32,(bytes,address,address,uint8,uint64,uint256),uint64)\":{\"details\":\"withdraws fund from pay master to target id from superRegistry\",\"params\":{\"dstChainId_\":\"is the destination chain id\",\"req_\":\"is the off-chain generated liquidity request to move funds\",\"superRegistryId_\":\"is the id of the target address in superRegistry\"}},\"treatAMB(uint8,uint256,bytes)\":{\"details\":\"retries a stuck payload on any supported amb using funds from paymaster\",\"params\":{\"ambId_\":\"is the identifier of the AMB\",\"data_\":\"is the amb specific encoded retry data [check individual AMB implementations]\",\"nativeValue_\":\"is the native fees to be sent along the transaction\"}},\"withdrawNativeTo(bytes32,uint256)\":{\"details\":\"withdraws native funds from pay master to target id from superRegistry\",\"params\":{\"nativeAmount_\":\"is the amount to withdraw from pay master\",\"superRegistryId_\":\"is the id of the target address in superRegistry\"}},\"withdrawTo(bytes32,address,uint256)\":{\"details\":\"withdraws token funds from pay master to target id from superRegistry\",\"params\":{\"amount_\":\"is the amount to withdraw from pay master\",\"superRegistryId_\":\"is the id of the target address in superRegistry\",\"token_\":\"is the token to withdraw from pay master\"}}},\"title\":\"IPayMaster\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IPayMaster.sol\":\"IPayMaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/\",\":ERC1155A/=lib/ERC1155A/src/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/\",\":pigeon/=lib/pigeon/src/\",\":solady/=lib/pigeon/lib/solady/\",\":solidity-stringutils/=lib/surl/lib/solidity-stringutils/\",\":solmate/=lib/ERC1155A/lib/solmate/src/\",\":super-vaults/=lib/super-vaults/src/\",\":surl/=lib/surl/\",\":v2-core/=lib/super-vaults/lib/v2-core/contracts/\",\":v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/\",\":v3-core/=lib/super-vaults/lib/v3-core/\"]},\"sources\":{\"src/interfaces/IPayMaster.sol\":{\"keccak256\":\"0x432dddd4037206d5419122c15a36f534b0b7a421e197a6aa6a666bb7461b7db0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://989169ed6f7a95308822d46e4d5349df0e82f33df21a653c130c8f3c39ba1201\",\"dweb:/ipfs/QmRHXcEBzkj4vf8YFEsrV5UeXTUtS7va6mNm4HHF7qFKWc\"]},\"src/types/DataTypes.sol\":{\"keccak256\":\"0x2fc00b90fe1d4daf00e283bdb9079cd257ba5154fcbb9c1c50181d214f23c12a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a33814dea4cdf5ee8aabe741d90897672fde7208cdd1561ffd7124f7ea98fde0\",\"dweb:/ipfs/QmSbGFzaPVZ5EqvNYPr2Q32P2itowoASEymTAiad3Eqcxz\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":true}],"type":"event","name":"NativeWithdrawn","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":true}],"type":"event","name":"Payment","anonymous":false},{"inputs":[{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"address","name":"token","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":true}],"type":"event","name":"TokenWithdrawn","anonymous":false},{"inputs":[{"internalType":"address","name":"user_","type":"address"}],"stateMutability":"payable","type":"function","name":"makePayment"},{"inputs":[{"internalType":"bytes32","name":"superRegistryId_","type":"bytes32"},{"internalType":"struct LiqRequest","name":"req_","type":"tuple","components":[{"internalType":"bytes","name":"txData","type":"bytes"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"interimToken","type":"address"},{"internalType":"uint8","name":"bridgeId","type":"uint8"},{"internalType":"uint64","name":"liqDstChainId","type":"uint64"},{"internalType":"uint256","name":"nativeAmount","type":"uint256"}]},{"internalType":"uint64","name":"dstChainId_","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"rebalanceTo"},{"inputs":[{"internalType":"uint8","name":"ambId_","type":"uint8"},{"internalType":"uint256","name":"nativeValue_","type":"uint256"},{"internalType":"bytes","name":"data_","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"treatAMB"},{"inputs":[{"internalType":"bytes32","name":"superRegistryId_","type":"bytes32"},{"internalType":"uint256","name":"nativeAmount_","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdrawNativeTo"},{"inputs":[{"internalType":"bytes32","name":"superRegistryId_","type":"bytes32"},{"internalType":"address","name":"token_","type":"address"},{"internalType":"uint256","name":"amount_","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdrawTo"}],"devdoc":{"kind":"dev","methods":{"makePayment(address)":{"details":"accepts payment from user","params":{"user_":"is the wallet address of the paying user"}},"rebalanceTo(bytes32,(bytes,address,address,uint8,uint64,uint256),uint64)":{"details":"withdraws fund from pay master to target id from superRegistry","params":{"dstChainId_":"is the destination chain id","req_":"is the off-chain generated liquidity request to move funds","superRegistryId_":"is the id of the target address in superRegistry"}},"treatAMB(uint8,uint256,bytes)":{"details":"retries a stuck payload on any supported amb using funds from paymaster","params":{"ambId_":"is the identifier of the AMB","data_":"is the amb specific encoded retry data [check individual AMB implementations]","nativeValue_":"is the native fees to be sent along the transaction"}},"withdrawNativeTo(bytes32,uint256)":{"details":"withdraws native funds from pay master to target id from superRegistry","params":{"nativeAmount_":"is the amount to withdraw from pay master","superRegistryId_":"is the id of the target address in superRegistry"}},"withdrawTo(bytes32,address,uint256)":{"details":"withdraws token funds from pay master to target id from superRegistry","params":{"amount_":"is the amount to withdraw from pay master","superRegistryId_":"is the id of the target address in superRegistry","token_":"is the token to withdraw from pay master"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/","ERC1155A/=lib/ERC1155A/src/","ds-test/=lib/ds-test/src/","erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/","pigeon/=lib/pigeon/src/","solady/=lib/pigeon/lib/solady/","solidity-stringutils/=lib/surl/lib/solidity-stringutils/","solmate/=lib/ERC1155A/lib/solmate/src/","super-vaults/=lib/super-vaults/src/","surl/=lib/surl/","v2-core/=lib/super-vaults/lib/v2-core/contracts/","v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/","v3-core/=lib/super-vaults/lib/v3-core/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IPayMaster.sol":"IPayMaster"},"evmVersion":"paris","libraries":{}},"sources":{"src/interfaces/IPayMaster.sol":{"keccak256":"0x432dddd4037206d5419122c15a36f534b0b7a421e197a6aa6a666bb7461b7db0","urls":["bzz-raw://989169ed6f7a95308822d46e4d5349df0e82f33df21a653c130c8f3c39ba1201","dweb:/ipfs/QmRHXcEBzkj4vf8YFEsrV5UeXTUtS7va6mNm4HHF7qFKWc"],"license":"BUSL-1.1"},"src/types/DataTypes.sol":{"keccak256":"0x2fc00b90fe1d4daf00e283bdb9079cd257ba5154fcbb9c1c50181d214f23c12a","urls":["bzz-raw://a33814dea4cdf5ee8aabe741d90897672fde7208cdd1561ffd7124f7ea98fde0","dweb:/ipfs/QmSbGFzaPVZ5EqvNYPr2Q32P2itowoASEymTAiad3Eqcxz"],"license":"BUSL-1.1"}},"version":1},"id":153}