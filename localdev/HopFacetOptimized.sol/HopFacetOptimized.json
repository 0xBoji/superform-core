{"abi":[{"type":"function","name":"startBridgeTokensViaHopL1ERC20","inputs":[{"name":"_bridgeData","type":"tuple","internalType":"struct ILiFi.BridgeData","components":[{"name":"transactionId","type":"bytes32","internalType":"bytes32"},{"name":"bridge","type":"string","internalType":"string"},{"name":"integrator","type":"string","internalType":"string"},{"name":"referrer","type":"address","internalType":"address"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"minAmount","type":"uint256","internalType":"uint256"},{"name":"destinationChainId","type":"uint256","internalType":"uint256"},{"name":"hasSourceSwaps","type":"bool","internalType":"bool"},{"name":"hasDestinationCall","type":"bool","internalType":"bool"}]},{"name":"_hopData","type":"tuple","internalType":"struct HopFacetOptimized.HopData","components":[{"name":"bonderFee","type":"uint256","internalType":"uint256"},{"name":"amountOutMin","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"destinationAmountOutMin","type":"uint256","internalType":"uint256"},{"name":"destinationDeadline","type":"uint256","internalType":"uint256"},{"name":"hopBridge","type":"address","internalType":"contract IHopBridge"},{"name":"relayer","type":"address","internalType":"address"},{"name":"relayerFee","type":"uint256","internalType":"uint256"},{"name":"nativeFee","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"startBridgeTokensViaHopL1Native","inputs":[{"name":"_bridgeData","type":"tuple","internalType":"struct ILiFi.BridgeData","components":[{"name":"transactionId","type":"bytes32","internalType":"bytes32"},{"name":"bridge","type":"string","internalType":"string"},{"name":"integrator","type":"string","internalType":"string"},{"name":"referrer","type":"address","internalType":"address"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"minAmount","type":"uint256","internalType":"uint256"},{"name":"destinationChainId","type":"uint256","internalType":"uint256"},{"name":"hasSourceSwaps","type":"bool","internalType":"bool"},{"name":"hasDestinationCall","type":"bool","internalType":"bool"}]},{"name":"_hopData","type":"tuple","internalType":"struct HopFacetOptimized.HopData","components":[{"name":"bonderFee","type":"uint256","internalType":"uint256"},{"name":"amountOutMin","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"destinationAmountOutMin","type":"uint256","internalType":"uint256"},{"name":"destinationDeadline","type":"uint256","internalType":"uint256"},{"name":"hopBridge","type":"address","internalType":"contract IHopBridge"},{"name":"relayer","type":"address","internalType":"address"},{"name":"relayerFee","type":"uint256","internalType":"uint256"},{"name":"nativeFee","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"startBridgeTokensViaHopL2ERC20","inputs":[{"name":"_bridgeData","type":"tuple","internalType":"struct ILiFi.BridgeData","components":[{"name":"transactionId","type":"bytes32","internalType":"bytes32"},{"name":"bridge","type":"string","internalType":"string"},{"name":"integrator","type":"string","internalType":"string"},{"name":"referrer","type":"address","internalType":"address"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"minAmount","type":"uint256","internalType":"uint256"},{"name":"destinationChainId","type":"uint256","internalType":"uint256"},{"name":"hasSourceSwaps","type":"bool","internalType":"bool"},{"name":"hasDestinationCall","type":"bool","internalType":"bool"}]},{"name":"_hopData","type":"tuple","internalType":"struct HopFacetOptimized.HopData","components":[{"name":"bonderFee","type":"uint256","internalType":"uint256"},{"name":"amountOutMin","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"destinationAmountOutMin","type":"uint256","internalType":"uint256"},{"name":"destinationDeadline","type":"uint256","internalType":"uint256"},{"name":"hopBridge","type":"address","internalType":"contract IHopBridge"},{"name":"relayer","type":"address","internalType":"address"},{"name":"relayerFee","type":"uint256","internalType":"uint256"},{"name":"nativeFee","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBridgeTokensViaHopL2Native","inputs":[{"name":"_bridgeData","type":"tuple","internalType":"struct ILiFi.BridgeData","components":[{"name":"transactionId","type":"bytes32","internalType":"bytes32"},{"name":"bridge","type":"string","internalType":"string"},{"name":"integrator","type":"string","internalType":"string"},{"name":"referrer","type":"address","internalType":"address"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"minAmount","type":"uint256","internalType":"uint256"},{"name":"destinationChainId","type":"uint256","internalType":"uint256"},{"name":"hasSourceSwaps","type":"bool","internalType":"bool"},{"name":"hasDestinationCall","type":"bool","internalType":"bool"}]},{"name":"_hopData","type":"tuple","internalType":"struct HopFacetOptimized.HopData","components":[{"name":"bonderFee","type":"uint256","internalType":"uint256"},{"name":"amountOutMin","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"destinationAmountOutMin","type":"uint256","internalType":"uint256"},{"name":"destinationDeadline","type":"uint256","internalType":"uint256"},{"name":"hopBridge","type":"address","internalType":"contract IHopBridge"},{"name":"relayer","type":"address","internalType":"address"},{"name":"relayerFee","type":"uint256","internalType":"uint256"},{"name":"nativeFee","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"swapAndStartBridgeTokensViaHopL1ERC20","inputs":[{"name":"_bridgeData","type":"tuple","internalType":"struct ILiFi.BridgeData","components":[{"name":"transactionId","type":"bytes32","internalType":"bytes32"},{"name":"bridge","type":"string","internalType":"string"},{"name":"integrator","type":"string","internalType":"string"},{"name":"referrer","type":"address","internalType":"address"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"minAmount","type":"uint256","internalType":"uint256"},{"name":"destinationChainId","type":"uint256","internalType":"uint256"},{"name":"hasSourceSwaps","type":"bool","internalType":"bool"},{"name":"hasDestinationCall","type":"bool","internalType":"bool"}]},{"name":"_swapData","type":"tuple[]","internalType":"struct LibSwap.SwapData[]","components":[{"name":"callTo","type":"address","internalType":"address"},{"name":"approveTo","type":"address","internalType":"address"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"receivingAssetId","type":"address","internalType":"address"},{"name":"fromAmount","type":"uint256","internalType":"uint256"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"requiresDeposit","type":"bool","internalType":"bool"}]},{"name":"_hopData","type":"tuple","internalType":"struct HopFacetOptimized.HopData","components":[{"name":"bonderFee","type":"uint256","internalType":"uint256"},{"name":"amountOutMin","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"destinationAmountOutMin","type":"uint256","internalType":"uint256"},{"name":"destinationDeadline","type":"uint256","internalType":"uint256"},{"name":"hopBridge","type":"address","internalType":"contract IHopBridge"},{"name":"relayer","type":"address","internalType":"address"},{"name":"relayerFee","type":"uint256","internalType":"uint256"},{"name":"nativeFee","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"swapAndStartBridgeTokensViaHopL1Native","inputs":[{"name":"_bridgeData","type":"tuple","internalType":"struct ILiFi.BridgeData","components":[{"name":"transactionId","type":"bytes32","internalType":"bytes32"},{"name":"bridge","type":"string","internalType":"string"},{"name":"integrator","type":"string","internalType":"string"},{"name":"referrer","type":"address","internalType":"address"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"minAmount","type":"uint256","internalType":"uint256"},{"name":"destinationChainId","type":"uint256","internalType":"uint256"},{"name":"hasSourceSwaps","type":"bool","internalType":"bool"},{"name":"hasDestinationCall","type":"bool","internalType":"bool"}]},{"name":"_swapData","type":"tuple[]","internalType":"struct LibSwap.SwapData[]","components":[{"name":"callTo","type":"address","internalType":"address"},{"name":"approveTo","type":"address","internalType":"address"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"receivingAssetId","type":"address","internalType":"address"},{"name":"fromAmount","type":"uint256","internalType":"uint256"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"requiresDeposit","type":"bool","internalType":"bool"}]},{"name":"_hopData","type":"tuple","internalType":"struct HopFacetOptimized.HopData","components":[{"name":"bonderFee","type":"uint256","internalType":"uint256"},{"name":"amountOutMin","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"destinationAmountOutMin","type":"uint256","internalType":"uint256"},{"name":"destinationDeadline","type":"uint256","internalType":"uint256"},{"name":"hopBridge","type":"address","internalType":"contract IHopBridge"},{"name":"relayer","type":"address","internalType":"address"},{"name":"relayerFee","type":"uint256","internalType":"uint256"},{"name":"nativeFee","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"swapAndStartBridgeTokensViaHopL2ERC20","inputs":[{"name":"_bridgeData","type":"tuple","internalType":"struct ILiFi.BridgeData","components":[{"name":"transactionId","type":"bytes32","internalType":"bytes32"},{"name":"bridge","type":"string","internalType":"string"},{"name":"integrator","type":"string","internalType":"string"},{"name":"referrer","type":"address","internalType":"address"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"minAmount","type":"uint256","internalType":"uint256"},{"name":"destinationChainId","type":"uint256","internalType":"uint256"},{"name":"hasSourceSwaps","type":"bool","internalType":"bool"},{"name":"hasDestinationCall","type":"bool","internalType":"bool"}]},{"name":"_swapData","type":"tuple[]","internalType":"struct LibSwap.SwapData[]","components":[{"name":"callTo","type":"address","internalType":"address"},{"name":"approveTo","type":"address","internalType":"address"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"receivingAssetId","type":"address","internalType":"address"},{"name":"fromAmount","type":"uint256","internalType":"uint256"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"requiresDeposit","type":"bool","internalType":"bool"}]},{"name":"_hopData","type":"tuple","internalType":"struct HopFacetOptimized.HopData","components":[{"name":"bonderFee","type":"uint256","internalType":"uint256"},{"name":"amountOutMin","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"destinationAmountOutMin","type":"uint256","internalType":"uint256"},{"name":"destinationDeadline","type":"uint256","internalType":"uint256"},{"name":"hopBridge","type":"address","internalType":"contract IHopBridge"},{"name":"relayer","type":"address","internalType":"address"},{"name":"relayerFee","type":"uint256","internalType":"uint256"},{"name":"nativeFee","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"swapAndStartBridgeTokensViaHopL2Native","inputs":[{"name":"_bridgeData","type":"tuple","internalType":"struct ILiFi.BridgeData","components":[{"name":"transactionId","type":"bytes32","internalType":"bytes32"},{"name":"bridge","type":"string","internalType":"string"},{"name":"integrator","type":"string","internalType":"string"},{"name":"referrer","type":"address","internalType":"address"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"minAmount","type":"uint256","internalType":"uint256"},{"name":"destinationChainId","type":"uint256","internalType":"uint256"},{"name":"hasSourceSwaps","type":"bool","internalType":"bool"},{"name":"hasDestinationCall","type":"bool","internalType":"bool"}]},{"name":"_swapData","type":"tuple[]","internalType":"struct LibSwap.SwapData[]","components":[{"name":"callTo","type":"address","internalType":"address"},{"name":"approveTo","type":"address","internalType":"address"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"receivingAssetId","type":"address","internalType":"address"},{"name":"fromAmount","type":"uint256","internalType":"uint256"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"requiresDeposit","type":"bool","internalType":"bool"}]},{"name":"_hopData","type":"tuple","internalType":"struct HopFacetOptimized.HopData","components":[{"name":"bonderFee","type":"uint256","internalType":"uint256"},{"name":"amountOutMin","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"destinationAmountOutMin","type":"uint256","internalType":"uint256"},{"name":"destinationDeadline","type":"uint256","internalType":"uint256"},{"name":"hopBridge","type":"address","internalType":"contract IHopBridge"},{"name":"relayer","type":"address","internalType":"address"},{"name":"relayerFee","type":"uint256","internalType":"uint256"},{"name":"nativeFee","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"payable"}],"bytecode":{"object":"0x608060405234801561001057600080fd5b506106f2806100206000396000f3fe60806040526004361061007b5760003560e01c806355c99cd81161004e57806355c99cd8146100fd5780638d03f45614610119578063ca360ae014610135578063d40e64cc146101515761007b565b806303add8c314610080578063082bc0471461009c5780630b4cb5d8146100b857806342afe79a146100e1575b600080fd5b61009a600480360381019061009591906101ee565b61016d565b005b6100b660048036038101906100b191906101ee565b610171565b005b3480156100c457600080fd5b506100df60048036038101906100da91906101ee565b610175565b005b6100fb60048036038101906100f6919061062b565b610179565b005b610117600480360381019061011291906101ee565b61017f565b005b610133600480360381019061012e919061062b565b610183565b005b61014f600480360381019061014a919061062b565b610189565b005b61016b6004803603810190610166919061062b565b61018f565b005b5050565b5050565b5050565b50505050565b5050565b50505050565b50505050565b50505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600061014082840312156101c5576101c46101a9565b5b81905092915050565b600061012082840312156101e5576101e46101a9565b5b81905092915050565b60008061014083850312156102065761020561019f565b5b600083013567ffffffffffffffff811115610224576102236101a4565b5b610230858286016101ae565b9250506020610241858286016101ce565b9150509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61029982610250565b810181811067ffffffffffffffff821117156102b8576102b7610261565b5b80604052505050565b60006102cb610195565b90506102d78282610290565b919050565b600080fd5b6000819050919050565b6102f4816102e1565b81146102ff57600080fd5b50565b600081359050610311816102eb565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff82111561033c5761033b610261565b5b61034582610250565b9050602081019050919050565b82818337600083830152505050565b600061037461036f84610321565b6102c1565b9050828152602081018484840111156103905761038f61031c565b5b61039b848285610352565b509392505050565b600082601f8301126103b8576103b7610317565b5b81356103c8848260208601610361565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103fc826103d1565b9050919050565b61040c816103f1565b811461041757600080fd5b50565b60008135905061042981610403565b92915050565b6000819050919050565b6104428161042f565b811461044d57600080fd5b50565b60008135905061045f81610439565b92915050565b60008115159050919050565b61047a81610465565b811461048557600080fd5b50565b60008135905061049781610471565b92915050565b600061014082840312156104b4576104b361024b565b5b6104bf6101406102c1565b905060006104cf84828501610302565b600083015250602082013567ffffffffffffffff8111156104f3576104f26102dc565b5b6104ff848285016103a3565b602083015250604082013567ffffffffffffffff811115610523576105226102dc565b5b61052f848285016103a3565b60408301525060606105438482850161041a565b60608301525060806105578482850161041a565b60808301525060a061056b8482850161041a565b60a08301525060c061057f84828501610450565b60c08301525060e061059384828501610450565b60e0830152506101006105a884828501610488565b610100830152506101206105be84828501610488565b6101208301525092915050565b600080fd5b600080fd5b60008083601f8401126105eb576105ea610317565b5b8235905067ffffffffffffffff811115610608576106076105cb565b5b602083019150836020820283011115610624576106236105d0565b5b9250929050565b60008060008061016085870312156106465761064561019f565b5b600085013567ffffffffffffffff811115610664576106636101a4565b5b6106708782880161049d565b945050602085013567ffffffffffffffff811115610691576106906101a4565b5b61069d878288016105d5565b935093505060406106b0878288016101ce565b9150509295919450925056fea2646970667358221220fa6cbc21cc9c35a56f0179fed1332643a6da7c046148f78897d475642653562b64736f6c63430008170033","sourceMap":"441:3875:201:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x60806040526004361061007b5760003560e01c806355c99cd81161004e57806355c99cd8146100fd5780638d03f45614610119578063ca360ae014610135578063d40e64cc146101515761007b565b806303add8c314610080578063082bc0471461009c5780630b4cb5d8146100b857806342afe79a146100e1575b600080fd5b61009a600480360381019061009591906101ee565b61016d565b005b6100b660048036038101906100b191906101ee565b610171565b005b3480156100c457600080fd5b506100df60048036038101906100da91906101ee565b610175565b005b6100fb60048036038101906100f6919061062b565b610179565b005b610117600480360381019061011291906101ee565b61017f565b005b610133600480360381019061012e919061062b565b610183565b005b61014f600480360381019061014a919061062b565b610189565b005b61016b6004803603810190610166919061062b565b61018f565b005b5050565b5050565b5050565b50505050565b5050565b50505050565b50505050565b50505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600061014082840312156101c5576101c46101a9565b5b81905092915050565b600061012082840312156101e5576101e46101a9565b5b81905092915050565b60008061014083850312156102065761020561019f565b5b600083013567ffffffffffffffff811115610224576102236101a4565b5b610230858286016101ae565b9250506020610241858286016101ce565b9150509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61029982610250565b810181811067ffffffffffffffff821117156102b8576102b7610261565b5b80604052505050565b60006102cb610195565b90506102d78282610290565b919050565b600080fd5b6000819050919050565b6102f4816102e1565b81146102ff57600080fd5b50565b600081359050610311816102eb565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff82111561033c5761033b610261565b5b61034582610250565b9050602081019050919050565b82818337600083830152505050565b600061037461036f84610321565b6102c1565b9050828152602081018484840111156103905761038f61031c565b5b61039b848285610352565b509392505050565b600082601f8301126103b8576103b7610317565b5b81356103c8848260208601610361565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103fc826103d1565b9050919050565b61040c816103f1565b811461041757600080fd5b50565b60008135905061042981610403565b92915050565b6000819050919050565b6104428161042f565b811461044d57600080fd5b50565b60008135905061045f81610439565b92915050565b60008115159050919050565b61047a81610465565b811461048557600080fd5b50565b60008135905061049781610471565b92915050565b600061014082840312156104b4576104b361024b565b5b6104bf6101406102c1565b905060006104cf84828501610302565b600083015250602082013567ffffffffffffffff8111156104f3576104f26102dc565b5b6104ff848285016103a3565b602083015250604082013567ffffffffffffffff811115610523576105226102dc565b5b61052f848285016103a3565b60408301525060606105438482850161041a565b60608301525060806105578482850161041a565b60808301525060a061056b8482850161041a565b60a08301525060c061057f84828501610450565b60c08301525060e061059384828501610450565b60e0830152506101006105a884828501610488565b610100830152506101206105be84828501610488565b6101208301525092915050565b600080fd5b600080fd5b60008083601f8401126105eb576105ea610317565b5b8235905067ffffffffffffffff811115610608576106076105cb565b5b602083019150836020820283011115610624576106236105d0565b5b9250929050565b60008060008061016085870312156106465761064561019f565b5b600085013567ffffffffffffffff811115610664576106636101a4565b5b6106708782880161049d565b945050602085013567ffffffffffffffff811115610691576106906101a4565b5b61069d878288016105d5565b935093505060406106b0878288016101ce565b9150509295919450925056fea2646970667358221220fa6cbc21cc9c35a56f0179fed1332643a6da7c046148f78897d475642653562b64736f6c63430008170033","sourceMap":"441:3875:201:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1335:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;976:168;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2748:152;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1810:220;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3091:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2337:221;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4093;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3566:220;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1335:169;;;:::o;976:168::-;;;:::o;2748:152::-;;;:::o;1810:220::-;;;;;:::o;3091:169::-;;;:::o;2337:221::-;;;;;:::o;4093:::-;;;;;:::o;3566:220::-;;;;;:::o;7:75:389:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;488:237;566:5;607:3;598:6;593:3;589:16;585:26;582:113;;;614:79;;:::i;:::-;582:113;713:6;704:15;;488:237;;;;:::o;771:234::-;846:5;887:3;878:6;873:3;869:16;865:26;862:113;;;894:79;;:::i;:::-;862:113;993:6;984:15;;771:234;;;;:::o;1011:757::-;1140:6;1148;1197:3;1185:9;1176:7;1172:23;1168:33;1165:120;;;1204:79;;:::i;:::-;1165:120;1352:1;1341:9;1337:17;1324:31;1382:18;1374:6;1371:30;1368:117;;;1404:79;;:::i;:::-;1368:117;1509:85;1586:7;1577:6;1566:9;1562:22;1509:85;:::i;:::-;1499:95;;1295:309;1643:2;1669:82;1743:7;1734:6;1723:9;1719:22;1669:82;:::i;:::-;1659:92;;1614:147;1011:757;;;;;:::o;1774:117::-;1883:1;1880;1873:12;1897:102;1938:6;1989:2;1985:7;1980:2;1973:5;1969:14;1965:28;1955:38;;1897:102;;;:::o;2005:180::-;2053:77;2050:1;2043:88;2150:4;2147:1;2140:15;2174:4;2171:1;2164:15;2191:281;2274:27;2296:4;2274:27;:::i;:::-;2266:6;2262:40;2404:6;2392:10;2389:22;2368:18;2356:10;2353:34;2350:62;2347:88;;;2415:18;;:::i;:::-;2347:88;2455:10;2451:2;2444:22;2234:238;2191:281;;:::o;2478:129::-;2512:6;2539:20;;:::i;:::-;2529:30;;2568:33;2596:4;2588:6;2568:33;:::i;:::-;2478:129;;;:::o;2613:117::-;2722:1;2719;2712:12;2736:77;2773:7;2802:5;2791:16;;2736:77;;;:::o;2819:122::-;2892:24;2910:5;2892:24;:::i;:::-;2885:5;2882:35;2872:63;;2931:1;2928;2921:12;2872:63;2819:122;:::o;2947:139::-;2993:5;3031:6;3018:20;3009:29;;3047:33;3074:5;3047:33;:::i;:::-;2947:139;;;;:::o;3092:117::-;3201:1;3198;3191:12;3215:117;3324:1;3321;3314:12;3338:308;3400:4;3490:18;3482:6;3479:30;3476:56;;;3512:18;;:::i;:::-;3476:56;3550:29;3572:6;3550:29;:::i;:::-;3542:37;;3634:4;3628;3624:15;3616:23;;3338:308;;;:::o;3652:146::-;3749:6;3744:3;3739;3726:30;3790:1;3781:6;3776:3;3772:16;3765:27;3652:146;;;:::o;3804:425::-;3882:5;3907:66;3923:49;3965:6;3923:49;:::i;:::-;3907:66;:::i;:::-;3898:75;;3996:6;3989:5;3982:21;4034:4;4027:5;4023:16;4072:3;4063:6;4058:3;4054:16;4051:25;4048:112;;;4079:79;;:::i;:::-;4048:112;4169:54;4216:6;4211:3;4206;4169:54;:::i;:::-;3888:341;3804:425;;;;;:::o;4249:340::-;4305:5;4354:3;4347:4;4339:6;4335:17;4331:27;4321:122;;4362:79;;:::i;:::-;4321:122;4479:6;4466:20;4504:79;4579:3;4571:6;4564:4;4556:6;4552:17;4504:79;:::i;:::-;4495:88;;4311:278;4249:340;;;;:::o;4595:126::-;4632:7;4672:42;4665:5;4661:54;4650:65;;4595:126;;;:::o;4727:96::-;4764:7;4793:24;4811:5;4793:24;:::i;:::-;4782:35;;4727:96;;;:::o;4829:122::-;4902:24;4920:5;4902:24;:::i;:::-;4895:5;4892:35;4882:63;;4941:1;4938;4931:12;4882:63;4829:122;:::o;4957:139::-;5003:5;5041:6;5028:20;5019:29;;5057:33;5084:5;5057:33;:::i;:::-;4957:139;;;;:::o;5102:77::-;5139:7;5168:5;5157:16;;5102:77;;;:::o;5185:122::-;5258:24;5276:5;5258:24;:::i;:::-;5251:5;5248:35;5238:63;;5297:1;5294;5287:12;5238:63;5185:122;:::o;5313:139::-;5359:5;5397:6;5384:20;5375:29;;5413:33;5440:5;5413:33;:::i;:::-;5313:139;;;;:::o;5458:90::-;5492:7;5535:5;5528:13;5521:21;5510:32;;5458:90;;;:::o;5554:116::-;5624:21;5639:5;5624:21;:::i;:::-;5617:5;5614:32;5604:60;;5660:1;5657;5650:12;5604:60;5554:116;:::o;5676:133::-;5719:5;5757:6;5744:20;5735:29;;5773:30;5797:5;5773:30;:::i;:::-;5676:133;;;;:::o;5846:2293::-;5925:5;5969:6;5957:9;5952:3;5948:19;5944:32;5941:119;;;5979:79;;:::i;:::-;5941:119;6078:23;6094:6;6078:23;:::i;:::-;6069:32;;6169:1;6209:49;6254:3;6245:6;6234:9;6230:22;6209:49;:::i;:::-;6202:4;6195:5;6191:16;6184:75;6111:159;6359:2;6348:9;6344:18;6331:32;6390:18;6382:6;6379:30;6376:117;;;6412:79;;:::i;:::-;6376:117;6532:59;6587:3;6578:6;6567:9;6563:22;6532:59;:::i;:::-;6525:4;6518:5;6514:16;6507:85;6280:323;6696:2;6685:9;6681:18;6668:32;6727:18;6719:6;6716:30;6713:117;;;6749:79;;:::i;:::-;6713:117;6869:59;6924:3;6915:6;6904:9;6900:22;6869:59;:::i;:::-;6862:4;6855:5;6851:16;6844:85;6613:327;7003:2;7044:49;7089:3;7080:6;7069:9;7065:22;7044:49;:::i;:::-;7037:4;7030:5;7026:16;7019:75;6950:155;7174:3;7216:49;7261:3;7252:6;7241:9;7237:22;7216:49;:::i;:::-;7209:4;7202:5;7198:16;7191:75;7115:162;7340:3;7382:49;7427:3;7418:6;7407:9;7403:22;7382:49;:::i;:::-;7375:4;7368:5;7364:16;7357:75;7287:156;7507:3;7549:49;7594:3;7585:6;7574:9;7570:22;7549:49;:::i;:::-;7542:4;7535:5;7531:16;7524:75;7453:157;7683:3;7725:49;7770:3;7761:6;7750:9;7746:22;7725:49;:::i;:::-;7718:4;7711:5;7707:16;7700:75;7620:166;7855:3;7899:46;7941:3;7932:6;7921:9;7917:22;7899:46;:::i;:::-;7890:6;7883:5;7879:18;7872:74;7796:161;8030:3;8074:46;8116:3;8107:6;8096:9;8092:22;8074:46;:::i;:::-;8065:6;8058:5;8054:18;8047:74;7967:165;5846:2293;;;;:::o;8145:117::-;8254:1;8251;8244:12;8268:117;8377:1;8374;8367:12;8424:598;8527:8;8537:6;8587:3;8580:4;8572:6;8568:17;8564:27;8554:122;;8595:79;;:::i;:::-;8554:122;8708:6;8695:20;8685:30;;8738:18;8730:6;8727:30;8724:117;;;8760:79;;:::i;:::-;8724:117;8874:4;8866:6;8862:17;8850:29;;8928:3;8920:4;8912:6;8908:17;8898:8;8894:32;8891:41;8888:128;;;8935:79;;:::i;:::-;8888:128;8424:598;;;;;:::o;9028:1188::-;9221:6;9229;9237;9245;9294:3;9282:9;9273:7;9269:23;9265:33;9262:120;;;9301:79;;:::i;:::-;9262:120;9449:1;9438:9;9434:17;9421:31;9479:18;9471:6;9468:30;9465:117;;;9501:79;;:::i;:::-;9465:117;9606:83;9681:7;9672:6;9661:9;9657:22;9606:83;:::i;:::-;9596:93;;9392:307;9766:2;9755:9;9751:18;9738:32;9797:18;9789:6;9786:30;9783:117;;;9819:79;;:::i;:::-;9783:117;9932:110;10034:7;10025:6;10014:9;10010:22;9932:110;:::i;:::-;9914:128;;;;9709:343;10091:2;10117:82;10191:7;10182:6;10171:9;10167:22;10117:82;:::i;:::-;10107:92;;10062:147;9028:1188;;;;;;;:::o","linkReferences":{}},"methodIdentifiers":{"startBridgeTokensViaHopL1ERC20((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":"082bc047","startBridgeTokensViaHopL1Native((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":"03add8c3","startBridgeTokensViaHopL2ERC20((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":"0b4cb5d8","startBridgeTokensViaHopL2Native((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":"55c99cd8","swapAndStartBridgeTokensViaHopL1ERC20((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":"42afe79a","swapAndStartBridgeTokensViaHopL1Native((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":"8d03f456","swapAndStartBridgeTokensViaHopL2ERC20((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":"d40e64cc","swapAndStartBridgeTokensViaHopL2Native((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":"ca360ae0"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"bridge\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"integrator\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasSourceSwaps\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasDestinationCall\",\"type\":\"bool\"}],\"internalType\":\"struct ILiFi.BridgeData\",\"name\":\"_bridgeData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"bonderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationAmountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationDeadline\",\"type\":\"uint256\"},{\"internalType\":\"contract IHopBridge\",\"name\":\"hopBridge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"relayerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"}],\"internalType\":\"struct HopFacetOptimized.HopData\",\"name\":\"_hopData\",\"type\":\"tuple\"}],\"name\":\"startBridgeTokensViaHopL1ERC20\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"bridge\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"integrator\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasSourceSwaps\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasDestinationCall\",\"type\":\"bool\"}],\"internalType\":\"struct ILiFi.BridgeData\",\"name\":\"_bridgeData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"bonderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationAmountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationDeadline\",\"type\":\"uint256\"},{\"internalType\":\"contract IHopBridge\",\"name\":\"hopBridge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"relayerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"}],\"internalType\":\"struct HopFacetOptimized.HopData\",\"name\":\"_hopData\",\"type\":\"tuple\"}],\"name\":\"startBridgeTokensViaHopL1Native\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"bridge\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"integrator\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasSourceSwaps\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasDestinationCall\",\"type\":\"bool\"}],\"internalType\":\"struct ILiFi.BridgeData\",\"name\":\"_bridgeData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"bonderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationAmountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationDeadline\",\"type\":\"uint256\"},{\"internalType\":\"contract IHopBridge\",\"name\":\"hopBridge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"relayerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"}],\"internalType\":\"struct HopFacetOptimized.HopData\",\"name\":\"_hopData\",\"type\":\"tuple\"}],\"name\":\"startBridgeTokensViaHopL2ERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"bridge\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"integrator\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasSourceSwaps\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasDestinationCall\",\"type\":\"bool\"}],\"internalType\":\"struct ILiFi.BridgeData\",\"name\":\"_bridgeData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"bonderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationAmountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationDeadline\",\"type\":\"uint256\"},{\"internalType\":\"contract IHopBridge\",\"name\":\"hopBridge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"relayerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"}],\"internalType\":\"struct HopFacetOptimized.HopData\",\"name\":\"_hopData\",\"type\":\"tuple\"}],\"name\":\"startBridgeTokensViaHopL2Native\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"bridge\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"integrator\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasSourceSwaps\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasDestinationCall\",\"type\":\"bool\"}],\"internalType\":\"struct ILiFi.BridgeData\",\"name\":\"_bridgeData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"callTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"approveTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receivingAssetId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"requiresDeposit\",\"type\":\"bool\"}],\"internalType\":\"struct LibSwap.SwapData[]\",\"name\":\"_swapData\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"bonderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationAmountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationDeadline\",\"type\":\"uint256\"},{\"internalType\":\"contract IHopBridge\",\"name\":\"hopBridge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"relayerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"}],\"internalType\":\"struct HopFacetOptimized.HopData\",\"name\":\"_hopData\",\"type\":\"tuple\"}],\"name\":\"swapAndStartBridgeTokensViaHopL1ERC20\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"bridge\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"integrator\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasSourceSwaps\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasDestinationCall\",\"type\":\"bool\"}],\"internalType\":\"struct ILiFi.BridgeData\",\"name\":\"_bridgeData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"callTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"approveTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receivingAssetId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"requiresDeposit\",\"type\":\"bool\"}],\"internalType\":\"struct LibSwap.SwapData[]\",\"name\":\"_swapData\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"bonderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationAmountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationDeadline\",\"type\":\"uint256\"},{\"internalType\":\"contract IHopBridge\",\"name\":\"hopBridge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"relayerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"}],\"internalType\":\"struct HopFacetOptimized.HopData\",\"name\":\"_hopData\",\"type\":\"tuple\"}],\"name\":\"swapAndStartBridgeTokensViaHopL1Native\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"bridge\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"integrator\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasSourceSwaps\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasDestinationCall\",\"type\":\"bool\"}],\"internalType\":\"struct ILiFi.BridgeData\",\"name\":\"_bridgeData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"callTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"approveTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receivingAssetId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"requiresDeposit\",\"type\":\"bool\"}],\"internalType\":\"struct LibSwap.SwapData[]\",\"name\":\"_swapData\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"bonderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationAmountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationDeadline\",\"type\":\"uint256\"},{\"internalType\":\"contract IHopBridge\",\"name\":\"hopBridge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"relayerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"}],\"internalType\":\"struct HopFacetOptimized.HopData\",\"name\":\"_hopData\",\"type\":\"tuple\"}],\"name\":\"swapAndStartBridgeTokensViaHopL2ERC20\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"bridge\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"integrator\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasSourceSwaps\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasDestinationCall\",\"type\":\"bool\"}],\"internalType\":\"struct ILiFi.BridgeData\",\"name\":\"_bridgeData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"callTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"approveTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receivingAssetId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"requiresDeposit\",\"type\":\"bool\"}],\"internalType\":\"struct LibSwap.SwapData[]\",\"name\":\"_swapData\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"bonderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationAmountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationDeadline\",\"type\":\"uint256\"},{\"internalType\":\"contract IHopBridge\",\"name\":\"hopBridge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"relayerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"}],\"internalType\":\"struct HopFacetOptimized.HopData\",\"name\":\"_hopData\",\"type\":\"tuple\"}],\"name\":\"swapAndStartBridgeTokensViaHopL2Native\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"LI.FI (https://li.fi)\",\"custom:version\":\"2.0.0\",\"kind\":\"dev\",\"methods\":{\"startBridgeTokensViaHopL1ERC20((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))\":{\"params\":{\"_bridgeData\":\"the core information needed for bridging\",\"_hopData\":\"data specific to Hop Protocol\"}},\"startBridgeTokensViaHopL1Native((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))\":{\"params\":{\"_bridgeData\":\"the core information needed for bridging\",\"_hopData\":\"data specific to Hop Protocol\"}},\"startBridgeTokensViaHopL2ERC20((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))\":{\"params\":{\"_bridgeData\":\"the core information needed for bridging\",\"_hopData\":\"data specific to Hop Protocol\"}},\"startBridgeTokensViaHopL2Native((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))\":{\"params\":{\"_bridgeData\":\"the core information needed for bridging\",\"_hopData\":\"data specific to Hop Protocol\"}},\"swapAndStartBridgeTokensViaHopL1ERC20((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))\":{\"params\":{\"_bridgeData\":\"the core information needed for bridging\",\"_hopData\":\"data specific to Hop Protocol\",\"_swapData\":\"an array of swap related data for performing swaps before bridging\"}},\"swapAndStartBridgeTokensViaHopL1Native((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))\":{\"params\":{\"_bridgeData\":\"the core information needed for bridging\",\"_hopData\":\"data specific to Hop Protocol\",\"_swapData\":\"an array of swap related data for performing swaps before bridging\"}},\"swapAndStartBridgeTokensViaHopL2ERC20((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))\":{\"params\":{\"_bridgeData\":\"the core information needed for bridging\",\"_hopData\":\"data specific to Hop Protocol\",\"_swapData\":\"an array of swap related data for performing swaps before bridging\"}},\"swapAndStartBridgeTokensViaHopL2Native((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))\":{\"params\":{\"_bridgeData\":\"the core information needed for bridging\",\"_hopData\":\"data specific to Hop Protocol\",\"_swapData\":\"an array of swap related data for performing swaps before bridging\"}}},\"title\":\"Hop Facet (Optimized)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"startBridgeTokensViaHopL1ERC20((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))\":{\"notice\":\"Bridges ERC20 tokens via Hop Protocol from L1\"},\"startBridgeTokensViaHopL1Native((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))\":{\"notice\":\"Bridges Native tokens via Hop Protocol from L1\"},\"startBridgeTokensViaHopL2ERC20((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))\":{\"notice\":\"Bridges ERC20 tokens via Hop Protocol from L2\"},\"startBridgeTokensViaHopL2Native((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))\":{\"notice\":\"Bridges Native tokens via Hop Protocol from L2\"},\"swapAndStartBridgeTokensViaHopL1ERC20((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))\":{\"notice\":\"Performs a swap before bridging ERC20 tokens via Hop Protocol from L1\"},\"swapAndStartBridgeTokensViaHopL1Native((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))\":{\"notice\":\"Performs a swap before bridging Native tokens via Hop Protocol from L1\"},\"swapAndStartBridgeTokensViaHopL2ERC20((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))\":{\"notice\":\"Performs a swap before bridging ERC20 tokens via Hop Protocol from L2\"},\"swapAndStartBridgeTokensViaHopL2Native((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))\":{\"notice\":\"Performs a swap before bridging Native tokens via Hop Protocol from L2\"}},\"notice\":\"Provides functionality for bridging through Hoptaken from LiFi contracts https://github.com/lifinance/contracts and stripped down to needs\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/vendor/lifi/HopFacetOptimized.sol\":\"HopFacetOptimized\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/\",\":ERC1155A/=lib/ERC1155A/src/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/\",\":pigeon/=lib/pigeon/src/\",\":solady/=lib/pigeon/lib/solady/\",\":solidity-stringutils/=lib/surl/lib/solidity-stringutils/\",\":solmate/=lib/ERC1155A/lib/solmate/src/\",\":super-vaults/=lib/super-vaults/src/\",\":surl/=lib/surl/\",\":v2-core/=lib/super-vaults/lib/v2-core/contracts/\",\":v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/\",\":v3-core/=lib/super-vaults/lib/v3-core/\"]},\"sources\":{\"src/vendor/lifi/HopFacetOptimized.sol\":{\"keccak256\":\"0x1dbfdfe7dd44a59e5de3359db7d72dccab5d421b4aafcfa4b02dd3bb4d788175\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a95179634a9091c25442f76c1e5f7aa808811744e413dcd98113a2181a928a0\",\"dweb:/ipfs/QmYod5dH2FR8Fr1YBoXofNJQY5moYvQ4ztQsqWyM4B2NYH\"]},\"src/vendor/lifi/IHopBridge.sol\":{\"keccak256\":\"0xf73b38f7072406e3647f97252ea9448f0c68d4c00fedd62713d02843bda09ea3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32572b681898776a89aeeb8ff7fa9aa3ce1aee6718ad4f9587e537b86778eb4a\",\"dweb:/ipfs/Qmcv1NioT4FkxHjw9bH25N9jE7qyvd5MwmJ8jtBsFerbEt\"]},\"src/vendor/lifi/ILiFi.sol\":{\"keccak256\":\"0x62f4b1407041df0c15d65f8f23f85b1420e6bd5bc26fe8f8ef9ca21b3b0597bd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c065e7c13fbfa9e5fe6fc6bab9e83c6f0e6c2da804568e52405a9f77e929351\",\"dweb:/ipfs/QmU2gkPutJc6mVKUVrk7FCVMjKfo1y12HLMWKhweSXbkK2\"]},\"src/vendor/lifi/LibSwap.sol\":{\"keccak256\":\"0x26dc9ffce070df754d301552d493e79b7bcca2e71e579e460814f5c34008abb0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e936c58612cd4636d5f2aedbdd55308e01621c879afc53b7584e306fcf8ac1a\",\"dweb:/ipfs/QmU7Pt7BBZ5H84rR7ivoLDyD147ZQCxdfnVfD7wQNZp9eG\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"struct ILiFi.BridgeData","name":"_bridgeData","type":"tuple","components":[{"internalType":"bytes32","name":"transactionId","type":"bytes32"},{"internalType":"string","name":"bridge","type":"string"},{"internalType":"string","name":"integrator","type":"string"},{"internalType":"address","name":"referrer","type":"address"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"bool","name":"hasSourceSwaps","type":"bool"},{"internalType":"bool","name":"hasDestinationCall","type":"bool"}]},{"internalType":"struct HopFacetOptimized.HopData","name":"_hopData","type":"tuple","components":[{"internalType":"uint256","name":"bonderFee","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"destinationAmountOutMin","type":"uint256"},{"internalType":"uint256","name":"destinationDeadline","type":"uint256"},{"internalType":"contract IHopBridge","name":"hopBridge","type":"address"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"uint256","name":"relayerFee","type":"uint256"},{"internalType":"uint256","name":"nativeFee","type":"uint256"}]}],"stateMutability":"payable","type":"function","name":"startBridgeTokensViaHopL1ERC20"},{"inputs":[{"internalType":"struct ILiFi.BridgeData","name":"_bridgeData","type":"tuple","components":[{"internalType":"bytes32","name":"transactionId","type":"bytes32"},{"internalType":"string","name":"bridge","type":"string"},{"internalType":"string","name":"integrator","type":"string"},{"internalType":"address","name":"referrer","type":"address"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"bool","name":"hasSourceSwaps","type":"bool"},{"internalType":"bool","name":"hasDestinationCall","type":"bool"}]},{"internalType":"struct HopFacetOptimized.HopData","name":"_hopData","type":"tuple","components":[{"internalType":"uint256","name":"bonderFee","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"destinationAmountOutMin","type":"uint256"},{"internalType":"uint256","name":"destinationDeadline","type":"uint256"},{"internalType":"contract IHopBridge","name":"hopBridge","type":"address"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"uint256","name":"relayerFee","type":"uint256"},{"internalType":"uint256","name":"nativeFee","type":"uint256"}]}],"stateMutability":"payable","type":"function","name":"startBridgeTokensViaHopL1Native"},{"inputs":[{"internalType":"struct ILiFi.BridgeData","name":"_bridgeData","type":"tuple","components":[{"internalType":"bytes32","name":"transactionId","type":"bytes32"},{"internalType":"string","name":"bridge","type":"string"},{"internalType":"string","name":"integrator","type":"string"},{"internalType":"address","name":"referrer","type":"address"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"bool","name":"hasSourceSwaps","type":"bool"},{"internalType":"bool","name":"hasDestinationCall","type":"bool"}]},{"internalType":"struct HopFacetOptimized.HopData","name":"_hopData","type":"tuple","components":[{"internalType":"uint256","name":"bonderFee","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"destinationAmountOutMin","type":"uint256"},{"internalType":"uint256","name":"destinationDeadline","type":"uint256"},{"internalType":"contract IHopBridge","name":"hopBridge","type":"address"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"uint256","name":"relayerFee","type":"uint256"},{"internalType":"uint256","name":"nativeFee","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"startBridgeTokensViaHopL2ERC20"},{"inputs":[{"internalType":"struct ILiFi.BridgeData","name":"_bridgeData","type":"tuple","components":[{"internalType":"bytes32","name":"transactionId","type":"bytes32"},{"internalType":"string","name":"bridge","type":"string"},{"internalType":"string","name":"integrator","type":"string"},{"internalType":"address","name":"referrer","type":"address"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"bool","name":"hasSourceSwaps","type":"bool"},{"internalType":"bool","name":"hasDestinationCall","type":"bool"}]},{"internalType":"struct HopFacetOptimized.HopData","name":"_hopData","type":"tuple","components":[{"internalType":"uint256","name":"bonderFee","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"destinationAmountOutMin","type":"uint256"},{"internalType":"uint256","name":"destinationDeadline","type":"uint256"},{"internalType":"contract IHopBridge","name":"hopBridge","type":"address"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"uint256","name":"relayerFee","type":"uint256"},{"internalType":"uint256","name":"nativeFee","type":"uint256"}]}],"stateMutability":"payable","type":"function","name":"startBridgeTokensViaHopL2Native"},{"inputs":[{"internalType":"struct ILiFi.BridgeData","name":"_bridgeData","type":"tuple","components":[{"internalType":"bytes32","name":"transactionId","type":"bytes32"},{"internalType":"string","name":"bridge","type":"string"},{"internalType":"string","name":"integrator","type":"string"},{"internalType":"address","name":"referrer","type":"address"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"bool","name":"hasSourceSwaps","type":"bool"},{"internalType":"bool","name":"hasDestinationCall","type":"bool"}]},{"internalType":"struct LibSwap.SwapData[]","name":"_swapData","type":"tuple[]","components":[{"internalType":"address","name":"callTo","type":"address"},{"internalType":"address","name":"approveTo","type":"address"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"address","name":"receivingAssetId","type":"address"},{"internalType":"uint256","name":"fromAmount","type":"uint256"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bool","name":"requiresDeposit","type":"bool"}]},{"internalType":"struct HopFacetOptimized.HopData","name":"_hopData","type":"tuple","components":[{"internalType":"uint256","name":"bonderFee","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"destinationAmountOutMin","type":"uint256"},{"internalType":"uint256","name":"destinationDeadline","type":"uint256"},{"internalType":"contract IHopBridge","name":"hopBridge","type":"address"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"uint256","name":"relayerFee","type":"uint256"},{"internalType":"uint256","name":"nativeFee","type":"uint256"}]}],"stateMutability":"payable","type":"function","name":"swapAndStartBridgeTokensViaHopL1ERC20"},{"inputs":[{"internalType":"struct ILiFi.BridgeData","name":"_bridgeData","type":"tuple","components":[{"internalType":"bytes32","name":"transactionId","type":"bytes32"},{"internalType":"string","name":"bridge","type":"string"},{"internalType":"string","name":"integrator","type":"string"},{"internalType":"address","name":"referrer","type":"address"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"bool","name":"hasSourceSwaps","type":"bool"},{"internalType":"bool","name":"hasDestinationCall","type":"bool"}]},{"internalType":"struct LibSwap.SwapData[]","name":"_swapData","type":"tuple[]","components":[{"internalType":"address","name":"callTo","type":"address"},{"internalType":"address","name":"approveTo","type":"address"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"address","name":"receivingAssetId","type":"address"},{"internalType":"uint256","name":"fromAmount","type":"uint256"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bool","name":"requiresDeposit","type":"bool"}]},{"internalType":"struct HopFacetOptimized.HopData","name":"_hopData","type":"tuple","components":[{"internalType":"uint256","name":"bonderFee","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"destinationAmountOutMin","type":"uint256"},{"internalType":"uint256","name":"destinationDeadline","type":"uint256"},{"internalType":"contract IHopBridge","name":"hopBridge","type":"address"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"uint256","name":"relayerFee","type":"uint256"},{"internalType":"uint256","name":"nativeFee","type":"uint256"}]}],"stateMutability":"payable","type":"function","name":"swapAndStartBridgeTokensViaHopL1Native"},{"inputs":[{"internalType":"struct ILiFi.BridgeData","name":"_bridgeData","type":"tuple","components":[{"internalType":"bytes32","name":"transactionId","type":"bytes32"},{"internalType":"string","name":"bridge","type":"string"},{"internalType":"string","name":"integrator","type":"string"},{"internalType":"address","name":"referrer","type":"address"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"bool","name":"hasSourceSwaps","type":"bool"},{"internalType":"bool","name":"hasDestinationCall","type":"bool"}]},{"internalType":"struct LibSwap.SwapData[]","name":"_swapData","type":"tuple[]","components":[{"internalType":"address","name":"callTo","type":"address"},{"internalType":"address","name":"approveTo","type":"address"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"address","name":"receivingAssetId","type":"address"},{"internalType":"uint256","name":"fromAmount","type":"uint256"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bool","name":"requiresDeposit","type":"bool"}]},{"internalType":"struct HopFacetOptimized.HopData","name":"_hopData","type":"tuple","components":[{"internalType":"uint256","name":"bonderFee","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"destinationAmountOutMin","type":"uint256"},{"internalType":"uint256","name":"destinationDeadline","type":"uint256"},{"internalType":"contract IHopBridge","name":"hopBridge","type":"address"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"uint256","name":"relayerFee","type":"uint256"},{"internalType":"uint256","name":"nativeFee","type":"uint256"}]}],"stateMutability":"payable","type":"function","name":"swapAndStartBridgeTokensViaHopL2ERC20"},{"inputs":[{"internalType":"struct ILiFi.BridgeData","name":"_bridgeData","type":"tuple","components":[{"internalType":"bytes32","name":"transactionId","type":"bytes32"},{"internalType":"string","name":"bridge","type":"string"},{"internalType":"string","name":"integrator","type":"string"},{"internalType":"address","name":"referrer","type":"address"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"bool","name":"hasSourceSwaps","type":"bool"},{"internalType":"bool","name":"hasDestinationCall","type":"bool"}]},{"internalType":"struct LibSwap.SwapData[]","name":"_swapData","type":"tuple[]","components":[{"internalType":"address","name":"callTo","type":"address"},{"internalType":"address","name":"approveTo","type":"address"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"address","name":"receivingAssetId","type":"address"},{"internalType":"uint256","name":"fromAmount","type":"uint256"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bool","name":"requiresDeposit","type":"bool"}]},{"internalType":"struct HopFacetOptimized.HopData","name":"_hopData","type":"tuple","components":[{"internalType":"uint256","name":"bonderFee","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"destinationAmountOutMin","type":"uint256"},{"internalType":"uint256","name":"destinationDeadline","type":"uint256"},{"internalType":"contract IHopBridge","name":"hopBridge","type":"address"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"uint256","name":"relayerFee","type":"uint256"},{"internalType":"uint256","name":"nativeFee","type":"uint256"}]}],"stateMutability":"payable","type":"function","name":"swapAndStartBridgeTokensViaHopL2Native"}],"devdoc":{"kind":"dev","methods":{"startBridgeTokensViaHopL1ERC20((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":{"params":{"_bridgeData":"the core information needed for bridging","_hopData":"data specific to Hop Protocol"}},"startBridgeTokensViaHopL1Native((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":{"params":{"_bridgeData":"the core information needed for bridging","_hopData":"data specific to Hop Protocol"}},"startBridgeTokensViaHopL2ERC20((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":{"params":{"_bridgeData":"the core information needed for bridging","_hopData":"data specific to Hop Protocol"}},"startBridgeTokensViaHopL2Native((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":{"params":{"_bridgeData":"the core information needed for bridging","_hopData":"data specific to Hop Protocol"}},"swapAndStartBridgeTokensViaHopL1ERC20((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":{"params":{"_bridgeData":"the core information needed for bridging","_hopData":"data specific to Hop Protocol","_swapData":"an array of swap related data for performing swaps before bridging"}},"swapAndStartBridgeTokensViaHopL1Native((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":{"params":{"_bridgeData":"the core information needed for bridging","_hopData":"data specific to Hop Protocol","_swapData":"an array of swap related data for performing swaps before bridging"}},"swapAndStartBridgeTokensViaHopL2ERC20((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":{"params":{"_bridgeData":"the core information needed for bridging","_hopData":"data specific to Hop Protocol","_swapData":"an array of swap related data for performing swaps before bridging"}},"swapAndStartBridgeTokensViaHopL2Native((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":{"params":{"_bridgeData":"the core information needed for bridging","_hopData":"data specific to Hop Protocol","_swapData":"an array of swap related data for performing swaps before bridging"}}},"version":1},"userdoc":{"kind":"user","methods":{"startBridgeTokensViaHopL1ERC20((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":{"notice":"Bridges ERC20 tokens via Hop Protocol from L1"},"startBridgeTokensViaHopL1Native((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":{"notice":"Bridges Native tokens via Hop Protocol from L1"},"startBridgeTokensViaHopL2ERC20((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":{"notice":"Bridges ERC20 tokens via Hop Protocol from L2"},"startBridgeTokensViaHopL2Native((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":{"notice":"Bridges Native tokens via Hop Protocol from L2"},"swapAndStartBridgeTokensViaHopL1ERC20((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":{"notice":"Performs a swap before bridging ERC20 tokens via Hop Protocol from L1"},"swapAndStartBridgeTokensViaHopL1Native((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":{"notice":"Performs a swap before bridging Native tokens via Hop Protocol from L1"},"swapAndStartBridgeTokensViaHopL2ERC20((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":{"notice":"Performs a swap before bridging ERC20 tokens via Hop Protocol from L2"},"swapAndStartBridgeTokensViaHopL2Native((bytes32,string,string,address,address,address,uint256,uint256,bool,bool),(address,address,address,address,uint256,bytes,bool)[],(uint256,uint256,uint256,uint256,uint256,address,address,uint256,uint256))":{"notice":"Performs a swap before bridging Native tokens via Hop Protocol from L2"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/","ERC1155A/=lib/ERC1155A/src/","ds-test/=lib/ds-test/src/","erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/","pigeon/=lib/pigeon/src/","solady/=lib/pigeon/lib/solady/","solidity-stringutils/=lib/surl/lib/solidity-stringutils/","solmate/=lib/ERC1155A/lib/solmate/src/","super-vaults/=lib/super-vaults/src/","surl/=lib/surl/","v2-core/=lib/super-vaults/lib/v2-core/contracts/","v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/","v3-core/=lib/super-vaults/lib/v3-core/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/vendor/lifi/HopFacetOptimized.sol":"HopFacetOptimized"},"evmVersion":"paris","libraries":{}},"sources":{"src/vendor/lifi/HopFacetOptimized.sol":{"keccak256":"0x1dbfdfe7dd44a59e5de3359db7d72dccab5d421b4aafcfa4b02dd3bb4d788175","urls":["bzz-raw://0a95179634a9091c25442f76c1e5f7aa808811744e413dcd98113a2181a928a0","dweb:/ipfs/QmYod5dH2FR8Fr1YBoXofNJQY5moYvQ4ztQsqWyM4B2NYH"],"license":"MIT"},"src/vendor/lifi/IHopBridge.sol":{"keccak256":"0xf73b38f7072406e3647f97252ea9448f0c68d4c00fedd62713d02843bda09ea3","urls":["bzz-raw://32572b681898776a89aeeb8ff7fa9aa3ce1aee6718ad4f9587e537b86778eb4a","dweb:/ipfs/Qmcv1NioT4FkxHjw9bH25N9jE7qyvd5MwmJ8jtBsFerbEt"],"license":"MIT"},"src/vendor/lifi/ILiFi.sol":{"keccak256":"0x62f4b1407041df0c15d65f8f23f85b1420e6bd5bc26fe8f8ef9ca21b3b0597bd","urls":["bzz-raw://3c065e7c13fbfa9e5fe6fc6bab9e83c6f0e6c2da804568e52405a9f77e929351","dweb:/ipfs/QmU2gkPutJc6mVKUVrk7FCVMjKfo1y12HLMWKhweSXbkK2"],"license":"Apache-2.0"},"src/vendor/lifi/LibSwap.sol":{"keccak256":"0x26dc9ffce070df754d301552d493e79b7bcca2e71e579e460814f5c34008abb0","urls":["bzz-raw://0e936c58612cd4636d5f2aedbdd55308e01621c879afc53b7584e306fcf8ac1a","dweb:/ipfs/QmU7Pt7BBZ5H84rR7ivoLDyD147ZQCxdfnVfD7wQNZp9eG"],"license":"MIT"}},"version":1},"id":201}