{"abi":[{"type":"function","name":"startBridgeTokensViaAmarokERC20MinPayFeeWithAsset","inputs":[{"name":"transactionId","type":"bytes32","internalType":"bytes32"},{"name":"receiver","type":"address","internalType":"address"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"minAmount","type":"uint256","internalType":"uint256"},{"name":"destChainDomainId","type":"uint32","internalType":"uint32"},{"name":"slippageTol","type":"uint256","internalType":"uint256"},{"name":"relayerFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBridgeTokensViaAmarokERC20MinPayFeeWithNative","inputs":[{"name":"transactionId","type":"bytes32","internalType":"bytes32"},{"name":"receiver","type":"address","internalType":"address"},{"name":"sendingAssetId","type":"address","internalType":"address"},{"name":"minAmount","type":"uint256","internalType":"uint256"},{"name":"destChainDomainId","type":"uint32","internalType":"uint32"},{"name":"slippageTol","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"startBridgeTokensViaAmarokERC20PackedPayFeeWithAsset","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBridgeTokensViaAmarokERC20PackedPayFeeWithNative","inputs":[],"outputs":[],"stateMutability":"payable"}],"bytecode":{"object":"0x608060405234801561001057600080fd5b5061032f806100206000396000f3fe60806040526004361061003f5760003560e01c80633abdecb414610044578063698fbb561461006d57806390f21c8014610089578063ecda1c0e146100a0575b600080fd5b34801561005057600080fd5b5061006b600480360381019061006691906101ca565b6100aa565b005b6100876004803603810190610082919061026c565b6100b3565b005b34801561009557600080fd5b5061009e6100bb565b005b6100a86100bd565b005b50505050505050565b505050505050565b565b565b600080fd5b6000819050919050565b6100d7816100c4565b81146100e257600080fd5b50565b6000813590506100f4816100ce565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610125826100fa565b9050919050565b6101358161011a565b811461014057600080fd5b50565b6000813590506101528161012c565b92915050565b6000819050919050565b61016b81610158565b811461017657600080fd5b50565b60008135905061018881610162565b92915050565b600063ffffffff82169050919050565b6101a78161018e565b81146101b257600080fd5b50565b6000813590506101c48161019e565b92915050565b600080600080600080600060e0888a0312156101e9576101e86100bf565b5b60006101f78a828b016100e5565b97505060206102088a828b01610143565b96505060406102198a828b01610143565b955050606061022a8a828b01610179565b945050608061023b8a828b016101b5565b93505060a061024c8a828b01610179565b92505060c061025d8a828b01610179565b91505092959891949750929550565b60008060008060008060c08789031215610289576102886100bf565b5b600061029789828a016100e5565b96505060206102a889828a01610143565b95505060406102b989828a01610143565b94505060606102ca89828a01610179565b93505060806102db89828a016101b5565b92505060a06102ec89828a01610179565b915050929550929550929556fea2646970667358221220a2b9864491bed2085f4888064ce315ba3d4fc8f73dbbade162bfe87c8823a0a964736f6c63430008170033","sourceMap":"378:1973:105:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x60806040526004361061003f5760003560e01c80633abdecb414610044578063698fbb561461006d57806390f21c8014610089578063ecda1c0e146100a0575b600080fd5b34801561005057600080fd5b5061006b600480360381019061006691906101ca565b6100aa565b005b6100876004803603810190610082919061026c565b6100b3565b005b34801561009557600080fd5b5061009e6100bb565b005b6100a86100bd565b005b50505050505050565b505050505050565b565b565b600080fd5b6000819050919050565b6100d7816100c4565b81146100e257600080fd5b50565b6000813590506100f4816100ce565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610125826100fa565b9050919050565b6101358161011a565b811461014057600080fd5b50565b6000813590506101528161012c565b92915050565b6000819050919050565b61016b81610158565b811461017657600080fd5b50565b60008135905061018881610162565b92915050565b600063ffffffff82169050919050565b6101a78161018e565b81146101b257600080fd5b50565b6000813590506101c48161019e565b92915050565b600080600080600080600060e0888a0312156101e9576101e86100bf565b5b60006101f78a828b016100e5565b97505060206102088a828b01610143565b96505060406102198a828b01610143565b955050606061022a8a828b01610179565b945050608061023b8a828b016101b5565b93505060a061024c8a828b01610179565b92505060c061025d8a828b01610179565b91505092959891949750929550565b60008060008060008060c08789031215610289576102886100bf565b5b600061029789828a016100e5565b96505060206102a889828a01610143565b95505060406102b989828a01610143565b94505060606102ca89828a01610179565b93505060806102db89828a016101b5565b92505060a06102ec89828a01610179565b915050929550929550929556fea2646970667358221220a2b9864491bed2085f4888064ce315ba3d4fc8f73dbbade162bfe87c8823a0a964736f6c63430008170033","sourceMap":"378:1973:105:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:296;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2064:285;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;536:76;;;;;;;;;;;;;:::i;:::-;;618:85;;;:::i;:::-;;1274:296;;;;;;;;:::o;2064:285::-;;;;;;;:::o;536:76::-;:::o;618:85::-;:::o;88:117:389:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:96::-;859:7;888:24;906:5;888:24;:::i;:::-;877:35;;822:96;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:77::-;1234:7;1263:5;1252:16;;1197:77;;;:::o;1280:122::-;1353:24;1371:5;1353:24;:::i;:::-;1346:5;1343:35;1333:63;;1392:1;1389;1382:12;1333:63;1280:122;:::o;1408:139::-;1454:5;1492:6;1479:20;1470:29;;1508:33;1535:5;1508:33;:::i;:::-;1408:139;;;;:::o;1553:93::-;1589:7;1629:10;1622:5;1618:22;1607:33;;1553:93;;;:::o;1652:120::-;1724:23;1741:5;1724:23;:::i;:::-;1717:5;1714:34;1704:62;;1762:1;1759;1752:12;1704:62;1652:120;:::o;1778:137::-;1823:5;1861:6;1848:20;1839:29;;1877:32;1903:5;1877:32;:::i;:::-;1778:137;;;;:::o;1921:1201::-;2033:6;2041;2049;2057;2065;2073;2081;2130:3;2118:9;2109:7;2105:23;2101:33;2098:120;;;2137:79;;:::i;:::-;2098:120;2257:1;2282:53;2327:7;2318:6;2307:9;2303:22;2282:53;:::i;:::-;2272:63;;2228:117;2384:2;2410:53;2455:7;2446:6;2435:9;2431:22;2410:53;:::i;:::-;2400:63;;2355:118;2512:2;2538:53;2583:7;2574:6;2563:9;2559:22;2538:53;:::i;:::-;2528:63;;2483:118;2640:2;2666:53;2711:7;2702:6;2691:9;2687:22;2666:53;:::i;:::-;2656:63;;2611:118;2768:3;2795:52;2839:7;2830:6;2819:9;2815:22;2795:52;:::i;:::-;2785:62;;2739:118;2896:3;2923:53;2968:7;2959:6;2948:9;2944:22;2923:53;:::i;:::-;2913:63;;2867:119;3025:3;3052:53;3097:7;3088:6;3077:9;3073:22;3052:53;:::i;:::-;3042:63;;2996:119;1921:1201;;;;;;;;;;:::o;3128:1055::-;3231:6;3239;3247;3255;3263;3271;3320:3;3308:9;3299:7;3295:23;3291:33;3288:120;;;3327:79;;:::i;:::-;3288:120;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3574:2;3600:53;3645:7;3636:6;3625:9;3621:22;3600:53;:::i;:::-;3590:63;;3545:118;3702:2;3728:53;3773:7;3764:6;3753:9;3749:22;3728:53;:::i;:::-;3718:63;;3673:118;3830:2;3856:53;3901:7;3892:6;3881:9;3877:22;3856:53;:::i;:::-;3846:63;;3801:118;3958:3;3985:52;4029:7;4020:6;4009:9;4005:22;3985:52;:::i;:::-;3975:62;;3929:118;4086:3;4113:53;4158:7;4149:6;4138:9;4134:22;4113:53;:::i;:::-;4103:63;;4057:119;3128:1055;;;;;;;;:::o","linkReferences":{}},"methodIdentifiers":{"startBridgeTokensViaAmarokERC20MinPayFeeWithAsset(bytes32,address,address,uint256,uint32,uint256,uint256)":"3abdecb4","startBridgeTokensViaAmarokERC20MinPayFeeWithNative(bytes32,address,address,uint256,uint32,uint256)":"698fbb56","startBridgeTokensViaAmarokERC20PackedPayFeeWithAsset()":"90f21c80","startBridgeTokensViaAmarokERC20PackedPayFeeWithNative()":"ecda1c0e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"destChainDomainId\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"slippageTol\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"relayerFee\",\"type\":\"uint256\"}],\"name\":\"startBridgeTokensViaAmarokERC20MinPayFeeWithAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"destChainDomainId\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"slippageTol\",\"type\":\"uint256\"}],\"name\":\"startBridgeTokensViaAmarokERC20MinPayFeeWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBridgeTokensViaAmarokERC20PackedPayFeeWithAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBridgeTokensViaAmarokERC20PackedPayFeeWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"LI.FI (https://li.fi)\",\"custom:version\":\"1.0.0\",\"kind\":\"dev\",\"methods\":{\"startBridgeTokensViaAmarokERC20MinPayFeeWithAsset(bytes32,address,address,uint256,uint32,uint256,uint256)\":{\"params\":{\"destChainDomainId\":\"The Amarok-specific domainId of the destination chain\",\"minAmount\":\"Amount of the source asset to bridge\",\"receiver\":\"Receiving wallet address\",\"relayerFee\":\"The amount of relayer fee the tx called xcall with\",\"sendingAssetId\":\"Address of the source asset to bridge\",\"slippageTol\":\"Maximum acceptable slippage in BPS. For example, a value of 30 means 0.3% slippage\",\"transactionId\":\"Custom transaction ID for tracking\"}},\"startBridgeTokensViaAmarokERC20MinPayFeeWithNative(bytes32,address,address,uint256,uint32,uint256)\":{\"params\":{\"destChainDomainId\":\"The Amarok-specific domainId of the destination chain\",\"minAmount\":\"Amount of the source asset to bridge\",\"receiver\":\"Receiving wallet address\",\"sendingAssetId\":\"Address of the source asset to bridge\",\"slippageTol\":\"Maximum acceptable slippage in BPS. For example, a value of 30 means 0.3% slippage\",\"transactionId\":\"Custom transaction ID for tracking\"}}},\"title\":\"AmarokFacetPacked\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"startBridgeTokensViaAmarokERC20MinPayFeeWithAsset(bytes32,address,address,uint256,uint32,uint256,uint256)\":{\"notice\":\"Bridges ERC20 tokens via Amarok\"},\"startBridgeTokensViaAmarokERC20MinPayFeeWithNative(bytes32,address,address,uint256,uint32,uint256)\":{\"notice\":\"Bridges ERC20 tokens via Amarok\"},\"startBridgeTokensViaAmarokERC20PackedPayFeeWithAsset()\":{\"notice\":\"Bridges ERC20 tokens via Amarok No params, all data will be extracted from manually encoded callData\"}},\"notice\":\"Provides functionality for bridging through Amarok in a gas-optimized waytaken from LiFi contracts https://github.com/lifinance/contracts and stripped down to needs!WARNING ALREADY BLACKLISTED\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/forge-scripts/misc/blacklistedFacets/AmarokFacetPacked.sol\":\"AmarokFacetPacked\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/\",\":ERC1155A/=lib/ERC1155A/src/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/\",\":pigeon/=lib/pigeon/src/\",\":solady/=lib/pigeon/lib/solady/\",\":solidity-stringutils/=lib/surl/lib/solidity-stringutils/\",\":solmate/=lib/ERC1155A/lib/solmate/src/\",\":super-vaults/=lib/super-vaults/src/\",\":surl/=lib/surl/\",\":v2-core/=lib/super-vaults/lib/v2-core/contracts/\",\":v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/\",\":v3-core/=lib/super-vaults/lib/v3-core/\"]},\"sources\":{\"script/forge-scripts/misc/blacklistedFacets/AmarokFacetPacked.sol\":{\"keccak256\":\"0x45f817fd6279470ba8a53910ff59934fe3226c3a3992d639a4935125f6777de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83486bd10be340e08264b86e28417095a543948ca6bf41048bf1a41535f3400c\",\"dweb:/ipfs/QmX1FP2j3sQGTxZkaGeGVMUfr8xL5ov1yjx1kDUzGq8h3A\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"transactionId","type":"bytes32"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"uint32","name":"destChainDomainId","type":"uint32"},{"internalType":"uint256","name":"slippageTol","type":"uint256"},{"internalType":"uint256","name":"relayerFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBridgeTokensViaAmarokERC20MinPayFeeWithAsset"},{"inputs":[{"internalType":"bytes32","name":"transactionId","type":"bytes32"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"sendingAssetId","type":"address"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"uint32","name":"destChainDomainId","type":"uint32"},{"internalType":"uint256","name":"slippageTol","type":"uint256"}],"stateMutability":"payable","type":"function","name":"startBridgeTokensViaAmarokERC20MinPayFeeWithNative"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBridgeTokensViaAmarokERC20PackedPayFeeWithAsset"},{"inputs":[],"stateMutability":"payable","type":"function","name":"startBridgeTokensViaAmarokERC20PackedPayFeeWithNative"}],"devdoc":{"kind":"dev","methods":{"startBridgeTokensViaAmarokERC20MinPayFeeWithAsset(bytes32,address,address,uint256,uint32,uint256,uint256)":{"params":{"destChainDomainId":"The Amarok-specific domainId of the destination chain","minAmount":"Amount of the source asset to bridge","receiver":"Receiving wallet address","relayerFee":"The amount of relayer fee the tx called xcall with","sendingAssetId":"Address of the source asset to bridge","slippageTol":"Maximum acceptable slippage in BPS. For example, a value of 30 means 0.3% slippage","transactionId":"Custom transaction ID for tracking"}},"startBridgeTokensViaAmarokERC20MinPayFeeWithNative(bytes32,address,address,uint256,uint32,uint256)":{"params":{"destChainDomainId":"The Amarok-specific domainId of the destination chain","minAmount":"Amount of the source asset to bridge","receiver":"Receiving wallet address","sendingAssetId":"Address of the source asset to bridge","slippageTol":"Maximum acceptable slippage in BPS. For example, a value of 30 means 0.3% slippage","transactionId":"Custom transaction ID for tracking"}}},"version":1},"userdoc":{"kind":"user","methods":{"startBridgeTokensViaAmarokERC20MinPayFeeWithAsset(bytes32,address,address,uint256,uint32,uint256,uint256)":{"notice":"Bridges ERC20 tokens via Amarok"},"startBridgeTokensViaAmarokERC20MinPayFeeWithNative(bytes32,address,address,uint256,uint32,uint256)":{"notice":"Bridges ERC20 tokens via Amarok"},"startBridgeTokensViaAmarokERC20PackedPayFeeWithAsset()":{"notice":"Bridges ERC20 tokens via Amarok No params, all data will be extracted from manually encoded callData"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/","ERC1155A/=lib/ERC1155A/src/","ds-test/=lib/ds-test/src/","erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/","pigeon/=lib/pigeon/src/","solady/=lib/pigeon/lib/solady/","solidity-stringutils/=lib/surl/lib/solidity-stringutils/","solmate/=lib/ERC1155A/lib/solmate/src/","super-vaults/=lib/super-vaults/src/","surl/=lib/surl/","v2-core/=lib/super-vaults/lib/v2-core/contracts/","v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/","v3-core/=lib/super-vaults/lib/v3-core/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"script/forge-scripts/misc/blacklistedFacets/AmarokFacetPacked.sol":"AmarokFacetPacked"},"evmVersion":"paris","libraries":{}},"sources":{"script/forge-scripts/misc/blacklistedFacets/AmarokFacetPacked.sol":{"keccak256":"0x45f817fd6279470ba8a53910ff59934fe3226c3a3992d639a4935125f6777de7","urls":["bzz-raw://83486bd10be340e08264b86e28417095a543948ca6bf41048bf1a41535f3400c","dweb:/ipfs/QmX1FP2j3sQGTxZkaGeGVMUfr8xL5ov1yjx1kDUzGq8h3A"],"license":"MIT"}},"version":1},"id":105}