{"abi":[{"type":"function","name":"aERC20Exists","inputs":[{"name":"id","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"balanceOfBatch","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"burnBatch","inputs":[{"name":"srcSender_","type":"address","internalType":"address"},{"name":"ids_","type":"uint256[]","internalType":"uint256[]"},{"name":"amounts_","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"burnSingle","inputs":[{"name":"srcSender_","type":"address","internalType":"address"},{"name":"id_","type":"uint256","internalType":"uint256"},{"name":"amount_","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"decreaseAllowance","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"},{"name":"subtractedValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"decreaseAllowanceForMany","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"},{"name":"subtractedValues","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"id","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getERC20TokenAddress","inputs":[{"name":"id","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"aERC20","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"increaseAllowance","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"},{"name":"addedValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"increaseAllowanceForMany","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"},{"name":"addedValues","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isApprovedForAll","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"mintBatch","inputs":[{"name":"receiverAddress_","type":"address","internalType":"address"},{"name":"ids_","type":"uint256[]","internalType":"uint256[]"},{"name":"amounts_","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mintSingle","inputs":[{"name":"receiverAddress_","type":"address","internalType":"address"},{"name":"id_","type":"uint256","internalType":"uint256"},{"name":"amount_","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"registerAERC20","inputs":[{"name":"id","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"payable"},{"type":"function","name":"safeBatchTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"},{"name":"values","type":"uint256[]","internalType":"uint256[]"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setApprovalForAll","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"approved","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setApprovalForMany","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"},{"name":"amounts","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setApprovalForOne","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setDynamicURI","inputs":[{"name":"dynamicURI_","type":"string","internalType":"string"},{"name":"freeze_","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stateMultiSync","inputs":[{"name":"data_","type":"tuple","internalType":"struct AMBMessage","components":[{"name":"txInfo","type":"uint256","internalType":"uint256"},{"name":"params","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"srcChainId_","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"stateSync","inputs":[{"name":"data_","type":"tuple","internalType":"struct AMBMessage","components":[{"name":"txInfo","type":"uint256","internalType":"uint256"},{"name":"params","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"srcChainId_","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"stateSyncBroadcast","inputs":[{"name":"data_","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"totalSupply","inputs":[{"name":"id","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transmuteBatchToERC1155A","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"},{"name":"amounts","type":"uint256[]","internalType":"uint256[]"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transmuteBatchToERC20","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"},{"name":"amounts","type":"uint256[]","internalType":"uint256[]"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transmuteToERC1155A","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transmuteToERC20","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"txHistory","inputs":[{"name":"txId_","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"txInfo","type":"uint256","internalType":"uint256"},{"name":"receiverAddressSP","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"updateTxHistory","inputs":[{"name":"payloadId_","type":"uint256","internalType":"uint256"},{"name":"txInfo_","type":"uint256","internalType":"uint256"},{"name":"receiverAddressSP_","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"uri","inputs":[{"name":"id","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"event","name":"AERC20TokenRegistered","inputs":[{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"tokenAddress","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ApprovalForAll","inputs":[{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"ApprovalForOne","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"id","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Completed","inputs":[{"name":"txId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"DynamicURIUpdated","inputs":[{"name":"oldURI","type":"string","indexed":true,"internalType":"string"},{"name":"newURI","type":"string","indexed":true,"internalType":"string"},{"name":"frozen","type":"bool","indexed":true,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"TransferBatch","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"ids","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"values","type":"uint256[]","indexed":false,"internalType":"uint256[]"}],"anonymous":false},{"type":"event","name":"TransferSingle","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"id","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"TransmutedBatchToERC1155A","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"ids","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"amounts","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TransmutedBatchToERC20","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"ids","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"amounts","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TransmutedToERC1155A","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"id","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TransmutedToERC20","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"id","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TxHistorySet","inputs":[{"name":"payloadId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"txInfo","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"receiverAddress","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"URI","inputs":[{"name":"value","type":"string","indexed":false,"internalType":"string"},{"name":"id","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"AERC20_ALREADY_REGISTERED","inputs":[]},{"type":"error","name":"AERC20_NOT_REGISTERED","inputs":[]},{"type":"error","name":"DECREASED_ALLOWANCE_BELOW_ZERO","inputs":[]},{"type":"error","name":"ID_NOT_MINTED_YET","inputs":[]},{"type":"error","name":"LENGTH_MISMATCH","inputs":[]},{"type":"error","name":"TRANSFER_TO_ADDRESS_ZERO","inputs":[]},{"type":"error","name":"ZERO_ADDRESS","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"aERC20Exists(uint256)":"e673070f","allowance(address,address,uint256)":"598af9e7","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burnBatch(address,uint256[],uint256[])":"6b20c454","burnSingle(address,uint256,uint256)":"132b4816","decreaseAllowance(address,uint256,uint256)":"cdde3d6b","decreaseAllowanceForMany(address,uint256[],uint256[])":"cd4622eb","exists(uint256)":"4f558e79","getERC20TokenAddress(uint256)":"540ed9c0","increaseAllowance(address,uint256,uint256)":"ff61011a","increaseAllowanceForMany(address,uint256[],uint256[])":"67bc4065","isApprovedForAll(address,address)":"e985e9c5","mintBatch(address,uint256[],uint256[])":"d81d0a15","mintSingle(address,uint256,uint256)":"8d04e40e","name()":"06fdde03","registerAERC20(uint256)":"093e3164","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setApprovalForMany(address,uint256[],uint256[])":"5fa8d764","setApprovalForOne(address,uint256,uint256)":"a49f9516","setDynamicURI(string,bool)":"ed7a8e42","stateMultiSync((uint256,bytes))":"49e5b649","stateSync((uint256,bytes))":"33e30721","stateSyncBroadcast(bytes)":"e6ddad4c","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply(uint256)":"bd85b039","transmuteBatchToERC1155A(address,uint256[],uint256[],address)":"5029d0c8","transmuteBatchToERC20(address,uint256[],uint256[],address)":"ec737321","transmuteToERC1155A(address,uint256,uint256,address)":"9473655c","transmuteToERC20(address,uint256,uint256,address)":"7081ce5e","txHistory(uint256)":"75fcbd86","updateTxHistory(uint256,uint256,address)":"4ec1bec7","uri(uint256)":"0e89341c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AERC20_ALREADY_REGISTERED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AERC20_NOT_REGISTERED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DECREASED_ALLOWANCE_BELOW_ZERO\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ID_NOT_MINTED_YET\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LENGTH_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TRANSFER_TO_ADDRESS_ZERO\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"AERC20TokenRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ApprovalForOne\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txId\",\"type\":\"uint256\"}],\"name\":\"Completed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"oldURI\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"DynamicURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"TransmutedBatchToERC1155A\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"TransmutedBatchToERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"TransmutedToERC1155A\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"TransmutedToERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"payloadId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"txInfo\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"}],\"name\":\"TxHistorySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"aERC20Exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"srcSender_\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids_\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts_\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"srcSender_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"burnSingle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"subtractedValues\",\"type\":\"uint256[]\"}],\"name\":\"decreaseAllowanceForMany\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getERC20TokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"aERC20\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"addedValues\",\"type\":\"uint256[]\"}],\"name\":\"increaseAllowanceForMany\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress_\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids_\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts_\",\"type\":\"uint256[]\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"mintSingle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"registerAERC20\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"setApprovalForMany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setApprovalForOne\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"dynamicURI_\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"freeze_\",\"type\":\"bool\"}],\"name\":\"setDynamicURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"txInfo\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct AMBMessage\",\"name\":\"data_\",\"type\":\"tuple\"}],\"name\":\"stateMultiSync\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"srcChainId_\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"txInfo\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct AMBMessage\",\"name\":\"data_\",\"type\":\"tuple\"}],\"name\":\"stateSync\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"srcChainId_\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data_\",\"type\":\"bytes\"}],\"name\":\"stateSyncBroadcast\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"transmuteBatchToERC1155A\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"transmuteBatchToERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"transmuteToERC1155A\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"transmuteToERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txId_\",\"type\":\"uint256\"}],\"name\":\"txHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"txInfo\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiverAddressSP\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payloadId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txInfo_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiverAddressSP_\",\"type\":\"address\"}],\"name\":\"updateTxHistory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Zeropoint Labs\",\"details\":\"Interface for SuperPositions\",\"errors\":{\"AERC20_ALREADY_REGISTERED()\":[{\"details\":\"thrown if aERC20 was already registered\"}],\"AERC20_NOT_REGISTERED()\":[{\"details\":\"thrown if aERC20 was not registered\"}],\"DECREASED_ALLOWANCE_BELOW_ZERO()\":[{\"details\":\"thrown if allowance amount will be decreased below zero\"}],\"ID_NOT_MINTED_YET()\":[{\"details\":\"thrown if the associated ERC1155A id has not been minted before registering an aERC20\"}],\"LENGTH_MISMATCH()\":[{\"details\":\"thrown if there is a length mismatch in batch operations\"}],\"TRANSFER_TO_ADDRESS_ZERO()\":[{\"details\":\"thrown if transfer is made to address 0\"}],\"ZERO_ADDRESS()\":[{\"details\":\"thrown if address is 0\"}]},\"events\":{\"AERC20TokenRegistered(uint256,address)\":{\"details\":\"is emitted when a aErc20 token is registered\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"ApprovalForOne(address,address,uint256,uint256)\":{\"details\":\"emitted when single id approval is set\"},\"Completed(uint256)\":{\"details\":\"is emitted when a cross-chain transaction is completed.\"},\"DynamicURIUpdated(string,string,bool)\":{\"details\":\"is emitted when a dynamic uri is updated\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"TransmutedBatchToERC1155A(address,uint256[],uint256[],address)\":{\"details\":\"emitted when multiple aERC20s are transmuted to ERC1155A ids\"},\"TransmutedBatchToERC20(address,uint256[],uint256[],address)\":{\"details\":\"emitted when multiple ERC1155A ids are transmuted to aERC20s\"},\"TransmutedToERC1155A(address,uint256,uint256,address)\":{\"details\":\"emitted when an aERC20 is transmuted to an ERC1155 id\"},\"TransmutedToERC20(address,uint256,uint256,address)\":{\"details\":\"emitted when an ERC1155A id is transmuted to an aERC20\"},\"TxHistorySet(uint256,uint256,address)\":{\"details\":\"is emitted when a tx info is saved\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"aERC20Exists(uint256)\":{\"params\":{\"id\":\"id of the ERC1155\"}},\"allowance(address,address,uint256)\":{\"params\":{\"id\":\"id of the ERC1155A to approve\",\"owner\":\"address of the owner of the ERC1155A id\",\"spender\":\"address of the contract to approve\"}},\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"burnBatch(address,uint256[],uint256[])\":{\"details\":\"allows burner to burn shares on source in batch\",\"params\":{\"amounts_\":\"are the amounts of shares to burn\",\"ids_\":\"are the ids of the shares\",\"srcSender_\":\"is the address of the sender\"}},\"burnSingle(address,uint256,uint256)\":{\"details\":\"allows superformRouter to burn shares on source\",\"params\":{\"amount_\":\"is the amount of shares to burn\",\"id_\":\"is the id of the shares\",\"srcSender_\":\"is the address of the sender\"}},\"decreaseAllowance(address,uint256,uint256)\":{\"details\":\"Re-adapted from ERC20\",\"params\":{\"id\":\"id of the ERC1155A to approve\",\"spender\":\"address of the contract to approve\",\"subtractedValue\":\"amount of the allowance to decrease by\"}},\"decreaseAllowanceForMany(address,uint256[],uint256[])\":{\"details\":\"extension of single id decrease allowance\",\"params\":{\"ids\":\"ids of the ERC1155A to approve\",\"spender\":\"address of the contract to approve\",\"subtractedValues\":\"amounts of the allowance to decrease by\"}},\"exists(uint256)\":{\"details\":\"determines based on total supply for the id\",\"params\":{\"id\":\"id of the ERC1155\"}},\"getERC20TokenAddress(uint256)\":{\"params\":{\"id\":\"id of the ERC1155 to get the aErc20 token address for\"},\"returns\":{\"aERC20\":\"address of the aErc20 token for the given ERC1155 id\"}},\"increaseAllowance(address,uint256,uint256)\":{\"details\":\"Re-adapted from ERC20\",\"params\":{\"addedValue\":\"amount of the allowance to increase by\",\"id\":\"id of the ERC1155A to approve\",\"spender\":\"address of the contract to approve\"}},\"increaseAllowanceForMany(address,uint256[],uint256[])\":{\"details\":\"extension of single id increase allowance\",\"params\":{\"addedValues\":\"amounts of the allowance to increase by\",\"ids\":\"ids of the ERC1155A to approve\",\"spender\":\"address of the contract to approve\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"mintBatch(address,uint256[],uint256[])\":{\"details\":\"allows minter to mint shares on source in batch\",\"params\":{\"amounts_\":\"are the amounts of shares to mint\",\"ids_\":\"are the ids of the shares\",\"receiverAddress_\":\"is the beneficiary of shares\"}},\"mintSingle(address,uint256,uint256)\":{\"details\":\"allows minter to mint shares on source\",\"params\":{\"amount_\":\"is the amount of shares to mint\",\"id_\":\"is the id of the shares\",\"receiverAddress_\":\"is the beneficiary of shares\"}},\"registerAERC20(uint256)\":{\"details\":\"should emit any required events inside _registerAERC20 internal function\",\"params\":{\"id\":\"of the ERC1155 to create a ERC20 for\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"setApprovalForMany(address,uint256[],uint256[])\":{\"details\":\"extension of sigle id approval\",\"params\":{\"amounts\":\"amounts of the ERC1155A to approve\",\"ids\":\"ids of the ERC1155A to approve\",\"spender\":\"address of the contract to approve\"}},\"setApprovalForOne(address,uint256,uint256)\":{\"details\":\"Notice `owner` param, it will always be msg.sender, see _setApprovalForOne()\",\"params\":{\"amount\":\"amount of the ERC1155A to approve\",\"id\":\"id of the ERC1155A to approve\",\"spender\":\"address of the contract to approve\"}},\"setDynamicURI(string,bool)\":{\"details\":\"sets the dynamic uri for NFT\",\"params\":{\"dynamicURI_\":\"is the dynamic uri of the NFT\",\"freeze_\":\"is to prevent updating the metadata once migrated to IPFS\"}},\"stateMultiSync((uint256,bytes))\":{\"details\":\"allows state registry contract to mint shares on source\",\"params\":{\"data_\":\"is the received information to be processed.\"},\"returns\":{\"srcChainId_\":\"is the decoded srcChainId.\"}},\"stateSync((uint256,bytes))\":{\"details\":\"allows state registry contract to mint shares on source\",\"params\":{\"data_\":\"is the received information to be processed.\"},\"returns\":{\"srcChainId_\":\"is the decoded srcChainId.\"}},\"stateSyncBroadcast(bytes)\":{\"details\":\"allows to create sERC0 using broadcast state registry\",\"params\":{\"data_\":\"is the crosschain payload\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply(uint256)\":{\"params\":{\"id\":\"id of the ERC1155\"}},\"transmuteBatchToERC1155A(address,uint256[],uint256[],address)\":{\"details\":\"allows owner to send aERC20s as ERC1155A ids to receiver\",\"params\":{\"amounts\":\"amounts of the ERC20 to transmute\",\"ids\":\"ids of the ERC20 to transmute\",\"owner\":\"address of the user on whose behalf this transmutation is happening\",\"receiver\":\"address of the user to receive the ERC1155 token ids\"}},\"transmuteBatchToERC20(address,uint256[],uint256[],address)\":{\"details\":\"allows owner to send ERC1155A ids as aERC20s to receiver\",\"params\":{\"amounts\":\"amounts of the ERC1155A to transmute\",\"ids\":\"ids of the ERC1155A to transmute\",\"owner\":\"address of the user on whose behalf this transmutation is happening\",\"receiver\":\"address of the user to receive the aERC20 tokens\"}},\"transmuteToERC1155A(address,uint256,uint256,address)\":{\"details\":\"allows owner to send ERC20 as an ERC1155A id to receiver\",\"params\":{\"amount\":\"amount of the ERC20s to transmute to erc1155\",\"id\":\"id of the ERC20s to transmute to erc1155\",\"owner\":\"address of the user on whose behalf this transmutation is happening\",\"receiver\":\"address of the user to receive the erc1155 token id\"}},\"transmuteToERC20(address,uint256,uint256,address)\":{\"details\":\"allows owner to send ERC1155A id as an aERC20 to receiver\",\"params\":{\"amount\":\"amount of the ERC20s to transmute to aERC20\",\"id\":\"id of the ERC20s to transmute to aERC20\",\"owner\":\"address of the user on whose behalf this transmutation is happening\",\"receiver\":\"address of the user to receive the aERC20 token\"}},\"txHistory(uint256)\":{\"details\":\"returns the payload header and the receiver address for a tx id on the source chain\",\"params\":{\"txId_\":\"is the identifier of the transaction issued by superform router\"},\"returns\":{\"receiverAddressSP\":\"is the address of the receiver of superPositions\",\"txInfo\":\"is the header of the payload\"}},\"updateTxHistory(uint256,uint256,address)\":{\"details\":\"saves the message being sent together with the associated id formulated in a router\",\"params\":{\"payloadId_\":\"is the id of the message being saved\",\"receiverAddressSP_\":\"is the address of the receiver of superPositions\",\"txInfo_\":\"is the header of the AMBMessage of the transaction being saved\"}},\"uri(uint256)\":{\"params\":{\"id\":\"id of the ERC1155\"}}},\"title\":\"ISuperPositions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aERC20Exists(uint256)\":{\"notice\":\"handy helper to check if a AERC20 is registered\"},\"allowance(address,address,uint256)\":{\"notice\":\"Public getter for existing single id approval\"},\"burnSingle(address,uint256,uint256)\":{\"notice\":\"burn is done optimistically by the router in the beginning of the withdraw transactionsin case the withdraw tx fails on the destination, shares are reminted through stateSync\"},\"decreaseAllowance(address,uint256,uint256)\":{\"notice\":\"Public function for decreasing single id approval amount\"},\"decreaseAllowanceForMany(address,uint256[],uint256[])\":{\"notice\":\"Public function for decreasing multiple id approval amount at once\"},\"exists(uint256)\":{\"notice\":\"Public getter to know if a token id exists\"},\"getERC20TokenAddress(uint256)\":{\"notice\":\"Public getter for the address of the aErc20 token for a given ERC1155 id\"},\"increaseAllowance(address,uint256,uint256)\":{\"notice\":\"Public function for increasing single id approval amount\"},\"increaseAllowanceForMany(address,uint256[],uint256[])\":{\"notice\":\"Public function for increasing multiple id approval amount at once\"},\"name()\":{\"notice\":\"ERC1155A name\"},\"registerAERC20(uint256)\":{\"notice\":\"payable to allow any implementing cross-chain protocol to be paid for fees for broadcasting\"},\"setApprovalForMany(address,uint256[],uint256[])\":{\"notice\":\"Public function for setting multiple id approval\"},\"setApprovalForOne(address,uint256,uint256)\":{\"notice\":\"Public function for setting single id approval\"},\"symbol()\":{\"notice\":\"ERC1155A symbol\"},\"totalSupply(uint256)\":{\"notice\":\"Public getter for existing single id total supply\"},\"transmuteBatchToERC1155A(address,uint256[],uint256[],address)\":{\"notice\":\"Turn aERC20s into ERC1155A ids\"},\"transmuteBatchToERC20(address,uint256[],uint256[],address)\":{\"notice\":\"Turn ERC1155A ids into aERC20s\"},\"transmuteToERC1155A(address,uint256,uint256,address)\":{\"notice\":\"Turn aERC20 into an ERC1155A id\"},\"transmuteToERC20(address,uint256,uint256,address)\":{\"notice\":\"Turn ERC1155A id into an aERC20\"},\"uri(uint256)\":{\"notice\":\"Compute return string from baseURI set for this contract and unique vaultId\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISuperPositions.sol\":\"ISuperPositions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/\",\":ERC1155A/=lib/ERC1155A/src/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/\",\":pigeon/=lib/pigeon/src/\",\":solady/=lib/pigeon/lib/solady/\",\":solidity-stringutils/=lib/surl/lib/solidity-stringutils/\",\":solmate/=lib/ERC1155A/lib/solmate/src/\",\":super-vaults/=lib/super-vaults/src/\",\":surl/=lib/surl/\",\":v2-core/=lib/super-vaults/lib/v2-core/contracts/\",\":v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/\",\":v3-core/=lib/super-vaults/lib/v3-core/\"]},\"sources\":{\"lib/ERC1155A/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xb88683ee1e740b187c66ad4d0671d2e2008d80c629a3a6b4c58a9ce884507718\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aeb2f36a4b5eba9ac00d2a1fe8dbd4d948fd5b008760a37d134d85ff9ba2805\",\"dweb:/ipfs/QmTb7Zs7TCv73hDoUD4n1dgPebssfnniQrCS5E2sUBqwUQ\"]},\"lib/ERC1155A/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"lib/ERC1155A/src/interfaces/IERC1155A.sol\":{\"keccak256\":\"0xdbb09e1834e5a436e8eddc2dcf8260f0cda0c304610df77262412358fa5c518a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cadb2ac6ec922a7eefe9ebb9a4764a0cb2c225c7f2a9d82d3fbf14d475c2ab1\",\"dweb:/ipfs/QmZymuHH1e4qqXoh1dpn6CRFwTJ9ECDgWmHhEsLfTYzXPB\"]},\"src/interfaces/ISuperPositions.sol\":{\"keccak256\":\"0xb9ab203be960ea9caa3cca1cbbc5fc9f6078c6d159e4fe7c3da5642591b14e11\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://dabae44c6e1b5d7374a69aa9795caf27d9d2ca05b8bd83866ec0ba3c0cea26f0\",\"dweb:/ipfs/QmX98FGz2EuDCEt2hUEEf5iWmJNEeNKBHmvg3cRmpBekbB\"]},\"src/types/DataTypes.sol\":{\"keccak256\":\"0x2fc00b90fe1d4daf00e283bdb9079cd257ba5154fcbb9c1c50181d214f23c12a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a33814dea4cdf5ee8aabe741d90897672fde7208cdd1561ffd7124f7ea98fde0\",\"dweb:/ipfs/QmSbGFzaPVZ5EqvNYPr2Q32P2itowoASEymTAiad3Eqcxz\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"AERC20_ALREADY_REGISTERED"},{"inputs":[],"type":"error","name":"AERC20_NOT_REGISTERED"},{"inputs":[],"type":"error","name":"DECREASED_ALLOWANCE_BELOW_ZERO"},{"inputs":[],"type":"error","name":"ID_NOT_MINTED_YET"},{"inputs":[],"type":"error","name":"LENGTH_MISMATCH"},{"inputs":[],"type":"error","name":"TRANSFER_TO_ADDRESS_ZERO"},{"inputs":[],"type":"error","name":"ZERO_ADDRESS"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true},{"internalType":"address","name":"tokenAddress","type":"address","indexed":true}],"type":"event","name":"AERC20TokenRegistered","anonymous":false},{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"bool","name":"approved","type":"bool","indexed":false}],"type":"event","name":"ApprovalForAll","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"spender","type":"address","indexed":true},{"internalType":"uint256","name":"id","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"ApprovalForOne","anonymous":false},{"inputs":[{"internalType":"uint256","name":"txId","type":"uint256","indexed":true}],"type":"event","name":"Completed","anonymous":false},{"inputs":[{"internalType":"string","name":"oldURI","type":"string","indexed":true},{"internalType":"string","name":"newURI","type":"string","indexed":true},{"internalType":"bool","name":"frozen","type":"bool","indexed":true}],"type":"event","name":"DynamicURIUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256[]","name":"ids","type":"uint256[]","indexed":false},{"internalType":"uint256[]","name":"values","type":"uint256[]","indexed":false}],"type":"event","name":"TransferBatch","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"id","type":"uint256","indexed":false},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"TransferSingle","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256[]","name":"ids","type":"uint256[]","indexed":false},{"internalType":"uint256[]","name":"amounts","type":"uint256[]","indexed":false},{"internalType":"address","name":"receiver","type":"address","indexed":true}],"type":"event","name":"TransmutedBatchToERC1155A","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256[]","name":"ids","type":"uint256[]","indexed":false},{"internalType":"uint256[]","name":"amounts","type":"uint256[]","indexed":false},{"internalType":"address","name":"receiver","type":"address","indexed":true}],"type":"event","name":"TransmutedBatchToERC20","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"id","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"address","name":"receiver","type":"address","indexed":true}],"type":"event","name":"TransmutedToERC1155A","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"id","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"address","name":"receiver","type":"address","indexed":true}],"type":"event","name":"TransmutedToERC20","anonymous":false},{"inputs":[{"internalType":"uint256","name":"payloadId","type":"uint256","indexed":true},{"internalType":"uint256","name":"txInfo","type":"uint256","indexed":false},{"internalType":"address","name":"receiverAddress","type":"address","indexed":true}],"type":"event","name":"TxHistorySet","anonymous":false},{"inputs":[{"internalType":"string","name":"value","type":"string","indexed":false},{"internalType":"uint256","name":"id","type":"uint256","indexed":true}],"type":"event","name":"URI","anonymous":false},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"view","type":"function","name":"aERC20Exists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"srcSender_","type":"address"},{"internalType":"uint256[]","name":"ids_","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts_","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"burnBatch"},{"inputs":[{"internalType":"address","name":"srcSender_","type":"address"},{"internalType":"uint256","name":"id_","type":"uint256"},{"internalType":"uint256","name":"amount_","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"burnSingle"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"subtractedValues","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"decreaseAllowanceForMany","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"view","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"view","type":"function","name":"getERC20TokenAddress","outputs":[{"internalType":"address","name":"aERC20","type":"address"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"addedValues","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"increaseAllowanceForMany","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"receiverAddress_","type":"address"},{"internalType":"uint256[]","name":"ids_","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts_","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"mintBatch"},{"inputs":[{"internalType":"address","name":"receiverAddress_","type":"address"},{"internalType":"uint256","name":"id_","type":"uint256"},{"internalType":"uint256","name":"amount_","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"mintSingle"},{"inputs":[],"stateMutability":"view","type":"function","name":"name","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"payable","type":"function","name":"registerAERC20","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"safeBatchTransferFrom"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"safeTransferFrom"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setApprovalForAll"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"setApprovalForMany"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setApprovalForOne"},{"inputs":[{"internalType":"string","name":"dynamicURI_","type":"string"},{"internalType":"bool","name":"freeze_","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setDynamicURI"},{"inputs":[{"internalType":"struct AMBMessage","name":"data_","type":"tuple","components":[{"internalType":"uint256","name":"txInfo","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"stateMultiSync","outputs":[{"internalType":"uint64","name":"srcChainId_","type":"uint64"}]},{"inputs":[{"internalType":"struct AMBMessage","name":"data_","type":"tuple","components":[{"internalType":"uint256","name":"txInfo","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"stateSync","outputs":[{"internalType":"uint64","name":"srcChainId_","type":"uint64"}]},{"inputs":[{"internalType":"bytes","name":"data_","type":"bytes"}],"stateMutability":"payable","type":"function","name":"stateSyncBroadcast"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"view","type":"function","name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transmuteBatchToERC1155A"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transmuteBatchToERC20"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transmuteToERC1155A"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transmuteToERC20"},{"inputs":[{"internalType":"uint256","name":"txId_","type":"uint256"}],"stateMutability":"view","type":"function","name":"txHistory","outputs":[{"internalType":"uint256","name":"txInfo","type":"uint256"},{"internalType":"address","name":"receiverAddressSP","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"payloadId_","type":"uint256"},{"internalType":"uint256","name":"txInfo_","type":"uint256"},{"internalType":"address","name":"receiverAddressSP_","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"updateTxHistory"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"view","type":"function","name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}]}],"devdoc":{"kind":"dev","methods":{"aERC20Exists(uint256)":{"params":{"id":"id of the ERC1155"}},"allowance(address,address,uint256)":{"params":{"id":"id of the ERC1155A to approve","owner":"address of the owner of the ERC1155A id","spender":"address of the contract to approve"}},"balanceOf(address,uint256)":{"details":"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"burnBatch(address,uint256[],uint256[])":{"details":"allows burner to burn shares on source in batch","params":{"amounts_":"are the amounts of shares to burn","ids_":"are the ids of the shares","srcSender_":"is the address of the sender"}},"burnSingle(address,uint256,uint256)":{"details":"allows superformRouter to burn shares on source","params":{"amount_":"is the amount of shares to burn","id_":"is the id of the shares","srcSender_":"is the address of the sender"}},"decreaseAllowance(address,uint256,uint256)":{"details":"Re-adapted from ERC20","params":{"id":"id of the ERC1155A to approve","spender":"address of the contract to approve","subtractedValue":"amount of the allowance to decrease by"}},"decreaseAllowanceForMany(address,uint256[],uint256[])":{"details":"extension of single id decrease allowance","params":{"ids":"ids of the ERC1155A to approve","spender":"address of the contract to approve","subtractedValues":"amounts of the allowance to decrease by"}},"exists(uint256)":{"details":"determines based on total supply for the id","params":{"id":"id of the ERC1155"}},"getERC20TokenAddress(uint256)":{"params":{"id":"id of the ERC1155 to get the aErc20 token address for"},"returns":{"aERC20":"address of the aErc20 token for the given ERC1155 id"}},"increaseAllowance(address,uint256,uint256)":{"details":"Re-adapted from ERC20","params":{"addedValue":"amount of the allowance to increase by","id":"id of the ERC1155A to approve","spender":"address of the contract to approve"}},"increaseAllowanceForMany(address,uint256[],uint256[])":{"details":"extension of single id increase allowance","params":{"addedValues":"amounts of the allowance to increase by","ids":"ids of the ERC1155A to approve","spender":"address of the contract to approve"}},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"mintBatch(address,uint256[],uint256[])":{"details":"allows minter to mint shares on source in batch","params":{"amounts_":"are the amounts of shares to mint","ids_":"are the ids of the shares","receiverAddress_":"is the beneficiary of shares"}},"mintSingle(address,uint256,uint256)":{"details":"allows minter to mint shares on source","params":{"amount_":"is the amount of shares to mint","id_":"is the id of the shares","receiverAddress_":"is the beneficiary of shares"}},"registerAERC20(uint256)":{"details":"should emit any required events inside _registerAERC20 internal function","params":{"id":"of the ERC1155 to create a ERC20 for"}},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."},"setApprovalForMany(address,uint256[],uint256[])":{"details":"extension of sigle id approval","params":{"amounts":"amounts of the ERC1155A to approve","ids":"ids of the ERC1155A to approve","spender":"address of the contract to approve"}},"setApprovalForOne(address,uint256,uint256)":{"details":"Notice `owner` param, it will always be msg.sender, see _setApprovalForOne()","params":{"amount":"amount of the ERC1155A to approve","id":"id of the ERC1155A to approve","spender":"address of the contract to approve"}},"setDynamicURI(string,bool)":{"details":"sets the dynamic uri for NFT","params":{"dynamicURI_":"is the dynamic uri of the NFT","freeze_":"is to prevent updating the metadata once migrated to IPFS"}},"stateMultiSync((uint256,bytes))":{"details":"allows state registry contract to mint shares on source","params":{"data_":"is the received information to be processed."},"returns":{"srcChainId_":"is the decoded srcChainId."}},"stateSync((uint256,bytes))":{"details":"allows state registry contract to mint shares on source","params":{"data_":"is the received information to be processed."},"returns":{"srcChainId_":"is the decoded srcChainId."}},"stateSyncBroadcast(bytes)":{"details":"allows to create sERC0 using broadcast state registry","params":{"data_":"is the crosschain payload"}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"totalSupply(uint256)":{"params":{"id":"id of the ERC1155"}},"transmuteBatchToERC1155A(address,uint256[],uint256[],address)":{"details":"allows owner to send aERC20s as ERC1155A ids to receiver","params":{"amounts":"amounts of the ERC20 to transmute","ids":"ids of the ERC20 to transmute","owner":"address of the user on whose behalf this transmutation is happening","receiver":"address of the user to receive the ERC1155 token ids"}},"transmuteBatchToERC20(address,uint256[],uint256[],address)":{"details":"allows owner to send ERC1155A ids as aERC20s to receiver","params":{"amounts":"amounts of the ERC1155A to transmute","ids":"ids of the ERC1155A to transmute","owner":"address of the user on whose behalf this transmutation is happening","receiver":"address of the user to receive the aERC20 tokens"}},"transmuteToERC1155A(address,uint256,uint256,address)":{"details":"allows owner to send ERC20 as an ERC1155A id to receiver","params":{"amount":"amount of the ERC20s to transmute to erc1155","id":"id of the ERC20s to transmute to erc1155","owner":"address of the user on whose behalf this transmutation is happening","receiver":"address of the user to receive the erc1155 token id"}},"transmuteToERC20(address,uint256,uint256,address)":{"details":"allows owner to send ERC1155A id as an aERC20 to receiver","params":{"amount":"amount of the ERC20s to transmute to aERC20","id":"id of the ERC20s to transmute to aERC20","owner":"address of the user on whose behalf this transmutation is happening","receiver":"address of the user to receive the aERC20 token"}},"txHistory(uint256)":{"details":"returns the payload header and the receiver address for a tx id on the source chain","params":{"txId_":"is the identifier of the transaction issued by superform router"},"returns":{"receiverAddressSP":"is the address of the receiver of superPositions","txInfo":"is the header of the payload"}},"updateTxHistory(uint256,uint256,address)":{"details":"saves the message being sent together with the associated id formulated in a router","params":{"payloadId_":"is the id of the message being saved","receiverAddressSP_":"is the address of the receiver of superPositions","txInfo_":"is the header of the AMBMessage of the transaction being saved"}},"uri(uint256)":{"params":{"id":"id of the ERC1155"}}},"version":1},"userdoc":{"kind":"user","methods":{"aERC20Exists(uint256)":{"notice":"handy helper to check if a AERC20 is registered"},"allowance(address,address,uint256)":{"notice":"Public getter for existing single id approval"},"burnSingle(address,uint256,uint256)":{"notice":"burn is done optimistically by the router in the beginning of the withdraw transactionsin case the withdraw tx fails on the destination, shares are reminted through stateSync"},"decreaseAllowance(address,uint256,uint256)":{"notice":"Public function for decreasing single id approval amount"},"decreaseAllowanceForMany(address,uint256[],uint256[])":{"notice":"Public function for decreasing multiple id approval amount at once"},"exists(uint256)":{"notice":"Public getter to know if a token id exists"},"getERC20TokenAddress(uint256)":{"notice":"Public getter for the address of the aErc20 token for a given ERC1155 id"},"increaseAllowance(address,uint256,uint256)":{"notice":"Public function for increasing single id approval amount"},"increaseAllowanceForMany(address,uint256[],uint256[])":{"notice":"Public function for increasing multiple id approval amount at once"},"name()":{"notice":"ERC1155A name"},"registerAERC20(uint256)":{"notice":"payable to allow any implementing cross-chain protocol to be paid for fees for broadcasting"},"setApprovalForMany(address,uint256[],uint256[])":{"notice":"Public function for setting multiple id approval"},"setApprovalForOne(address,uint256,uint256)":{"notice":"Public function for setting single id approval"},"symbol()":{"notice":"ERC1155A symbol"},"totalSupply(uint256)":{"notice":"Public getter for existing single id total supply"},"transmuteBatchToERC1155A(address,uint256[],uint256[],address)":{"notice":"Turn aERC20s into ERC1155A ids"},"transmuteBatchToERC20(address,uint256[],uint256[],address)":{"notice":"Turn ERC1155A ids into aERC20s"},"transmuteToERC1155A(address,uint256,uint256,address)":{"notice":"Turn aERC20 into an ERC1155A id"},"transmuteToERC20(address,uint256,uint256,address)":{"notice":"Turn ERC1155A id into an aERC20"},"uri(uint256)":{"notice":"Compute return string from baseURI set for this contract and unique vaultId"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/","ERC1155A/=lib/ERC1155A/src/","ds-test/=lib/ds-test/src/","erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/","pigeon/=lib/pigeon/src/","solady/=lib/pigeon/lib/solady/","solidity-stringutils/=lib/surl/lib/solidity-stringutils/","solmate/=lib/ERC1155A/lib/solmate/src/","super-vaults/=lib/super-vaults/src/","surl/=lib/surl/","v2-core/=lib/super-vaults/lib/v2-core/contracts/","v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/","v3-core/=lib/super-vaults/lib/v3-core/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/ISuperPositions.sol":"ISuperPositions"},"evmVersion":"paris","libraries":{}},"sources":{"lib/ERC1155A/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol":{"keccak256":"0xb88683ee1e740b187c66ad4d0671d2e2008d80c629a3a6b4c58a9ce884507718","urls":["bzz-raw://1aeb2f36a4b5eba9ac00d2a1fe8dbd4d948fd5b008760a37d134d85ff9ba2805","dweb:/ipfs/QmTb7Zs7TCv73hDoUD4n1dgPebssfnniQrCS5E2sUBqwUQ"],"license":"MIT"},"lib/ERC1155A/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c","urls":["bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e","dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"],"license":"MIT"},"lib/ERC1155A/src/interfaces/IERC1155A.sol":{"keccak256":"0xdbb09e1834e5a436e8eddc2dcf8260f0cda0c304610df77262412358fa5c518a","urls":["bzz-raw://4cadb2ac6ec922a7eefe9ebb9a4764a0cb2c225c7f2a9d82d3fbf14d475c2ab1","dweb:/ipfs/QmZymuHH1e4qqXoh1dpn6CRFwTJ9ECDgWmHhEsLfTYzXPB"],"license":"MIT"},"src/interfaces/ISuperPositions.sol":{"keccak256":"0xb9ab203be960ea9caa3cca1cbbc5fc9f6078c6d159e4fe7c3da5642591b14e11","urls":["bzz-raw://dabae44c6e1b5d7374a69aa9795caf27d9d2ca05b8bd83866ec0ba3c0cea26f0","dweb:/ipfs/QmX98FGz2EuDCEt2hUEEf5iWmJNEeNKBHmvg3cRmpBekbB"],"license":"BUSL-1.1"},"src/types/DataTypes.sol":{"keccak256":"0x2fc00b90fe1d4daf00e283bdb9079cd257ba5154fcbb9c1c50181d214f23c12a","urls":["bzz-raw://a33814dea4cdf5ee8aabe741d90897672fde7208cdd1561ffd7124f7ea98fde0","dweb:/ipfs/QmSbGFzaPVZ5EqvNYPr2Q32P2itowoASEymTAiad3Eqcxz"],"license":"BUSL-1.1"}},"version":1},"id":159}