{"abi":[{"type":"function","name":"disputeRescueFailedDeposits","inputs":[{"name":"payloadId_","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"finalizeRescueFailedDeposits","inputs":[{"name":"payloadId_","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getFailedDeposits","inputs":[{"name":"payloadId_","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"superformIds","type":"uint256[]","internalType":"uint256[]"},{"name":"amounts","type":"uint256[]","internalType":"uint256[]"},{"name":"lastProposedTime","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"proposeRescueFailedDeposits","inputs":[{"name":"payloadId_","type":"uint256","internalType":"uint256"},{"name":"proposedAmounts_","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateDepositPayload","inputs":[{"name":"payloadId_","type":"uint256","internalType":"uint256"},{"name":"finalTokens_","type":"address[]","internalType":"address[]"},{"name":"finalAmounts_","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateWithdrawPayload","inputs":[{"name":"payloadId_","type":"uint256","internalType":"uint256"},{"name":"txData_","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"validateSlippage","inputs":[{"name":"finalAmount_","type":"uint256","internalType":"uint256"},{"name":"amount_","type":"uint256","internalType":"uint256"},{"name":"maxSlippage_","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"event","name":"FailedXChainDeposits","inputs":[{"name":"payloadId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RescueDisputed","inputs":[{"name":"payloadId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RescueFinalized","inputs":[{"name":"payloadId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RescueProposed","inputs":[{"name":"payloadId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"superformIds","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"proposedAmount","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"proposedTime","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"disputeRescueFailedDeposits(uint256)":"13bff012","finalizeRescueFailedDeposits(uint256)":"2d46647d","getFailedDeposits(uint256)":"d468711a","proposeRescueFailedDeposits(uint256,uint256[])":"e17d89e8","updateDepositPayload(uint256,address[],uint256[])":"474fd874","updateWithdrawPayload(uint256,bytes[])":"439890e2","validateSlippage(uint256,uint256,uint256)":"803c15df"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"payloadId\",\"type\":\"uint256\"}],\"name\":\"FailedXChainDeposits\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"payloadId\",\"type\":\"uint256\"}],\"name\":\"RescueDisputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"payloadId\",\"type\":\"uint256\"}],\"name\":\"RescueFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"payloadId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"superformIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"proposedAmount\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposedTime\",\"type\":\"uint256\"}],\"name\":\"RescueProposed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payloadId_\",\"type\":\"uint256\"}],\"name\":\"disputeRescueFailedDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payloadId_\",\"type\":\"uint256\"}],\"name\":\"finalizeRescueFailedDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payloadId_\",\"type\":\"uint256\"}],\"name\":\"getFailedDeposits\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"superformIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastProposedTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payloadId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"proposedAmounts_\",\"type\":\"uint256[]\"}],\"name\":\"proposeRescueFailedDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payloadId_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"finalTokens_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"finalAmounts_\",\"type\":\"uint256[]\"}],\"name\":\"updateDepositPayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payloadId_\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"txData_\",\"type\":\"bytes[]\"}],\"name\":\"updateWithdrawPayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"finalAmount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSlippage_\",\"type\":\"uint256\"}],\"name\":\"validateSlippage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ZeroPoint Labs\",\"details\":\"Interface for CoreStateRegistry\",\"events\":{\"FailedXChainDeposits(uint256)\":{\"details\":\"is emitted when any deposit fails\"},\"RescueDisputed(uint256)\":{\"details\":\"is emitted when an user disputed his refund amounts\"},\"RescueFinalized(uint256)\":{\"details\":\"is emitted when deposit rescue is finalized\"},\"RescueProposed(uint256,uint256[],uint256[],uint256)\":{\"details\":\"is emitted when a rescue is proposed for failed deposits in a payload\"}},\"kind\":\"dev\",\"methods\":{\"disputeRescueFailedDeposits(uint256)\":{\"details\":\"allows refund receivers to challenge their final receiving token amounts on failed deposits\",\"params\":{\"payloadId_\":\"is the identifier of the cross-chain payload\"}},\"finalizeRescueFailedDeposits(uint256)\":{\"details\":\"allows anyone to settle refunds for unprocessed/failed deposits past the challenge period\",\"params\":{\"payloadId_\":\"is the identifier of the cross-chain payload\"}},\"getFailedDeposits(uint256)\":{\"details\":\"allows users to read the superformIds that failed in a specific payloadId_\",\"params\":{\"payloadId_\":\"is the identifier of the cross-chain payload.\"},\"returns\":{\"amounts\":\"is the amounts of refund tokens issues\",\"lastProposedTime\":\"is the refund proposed time\",\"superformIds\":\"is the identifiers of superforms in the payloadId that got failed.\"}},\"proposeRescueFailedDeposits(uint256,uint256[])\":{\"details\":\"allows accounts with {CORE_STATE_REGISTRY_PROCESSOR_ROLE} to rescue tokens on failed deposits\",\"params\":{\"payloadId_\":\"is the identifier of the cross-chain payload.\",\"proposedAmounts_\":\"is the array of proposed rescue amounts.\"}},\"updateDepositPayload(uint256,address[],uint256[])\":{\"details\":\"allows accounts with {CORE_STATE_REGISTRY_UPDATER_ROLE} to modify a received cross-chain deposit payload.\",\"params\":{\"finalAmounts_\":\"is the amount to be updated. NOTE: amounts cannot be updated beyond user specified safe slippage limit.\",\"finalTokens_\":\"is the token received by the core state registry.\",\"payloadId_\":\"is the identifier of the cross-chain payload to be updated.\"}},\"updateWithdrawPayload(uint256,bytes[])\":{\"details\":\"allows accounts with {CORE_STATE_REGISTRY_UPDATER_ROLE} to modify a received cross-chain withdraw payload.\",\"params\":{\"payloadId_\":\"is the identifier of the cross-chain payload to be updated.\",\"txData_\":\"is the transaction data to be updated.\"}},\"validateSlippage(uint256,uint256,uint256)\":{\"details\":\"used internally for try/catching\",\"params\":{\"amount_\":\"is the indicated amount of tokens to be received\",\"finalAmount_\":\"is the final amount of tokens received\",\"maxSlippage_\":\"is the amount of acceptable slippage for the transaction\"}}},\"title\":\"ICoreStateRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"disputeRescueFailedDeposits(uint256)\":{\"notice\":\"should challenge within the delay window configured on SuperRegistry\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ICoreStateRegistry.sol\":\"ICoreStateRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/\",\":ERC1155A/=lib/ERC1155A/src/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/\",\":pigeon/=lib/pigeon/src/\",\":solady/=lib/pigeon/lib/solady/\",\":solidity-stringutils/=lib/surl/lib/solidity-stringutils/\",\":solmate/=lib/ERC1155A/lib/solmate/src/\",\":super-vaults/=lib/super-vaults/src/\",\":surl/=lib/surl/\",\":v2-core/=lib/super-vaults/lib/v2-core/contracts/\",\":v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/\",\":v3-core/=lib/super-vaults/lib/v3-core/\"]},\"sources\":{\"src/interfaces/ICoreStateRegistry.sol\":{\"keccak256\":\"0xd404d698716c88105aa011473ec43625587454cb57014a1d3b2b1f4bb33548bc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://72f099223c06b2a0f6e6d20880c0f8f93de47774d4e34baa5cd7f841e42af982\",\"dweb:/ipfs/QmRSRfRrQGVFRpugU2XYDrt6QokYzhNWfm7H9oTJ33vNry\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"payloadId","type":"uint256","indexed":true}],"type":"event","name":"FailedXChainDeposits","anonymous":false},{"inputs":[{"internalType":"uint256","name":"payloadId","type":"uint256","indexed":true}],"type":"event","name":"RescueDisputed","anonymous":false},{"inputs":[{"internalType":"uint256","name":"payloadId","type":"uint256","indexed":true}],"type":"event","name":"RescueFinalized","anonymous":false},{"inputs":[{"internalType":"uint256","name":"payloadId","type":"uint256","indexed":true},{"internalType":"uint256[]","name":"superformIds","type":"uint256[]","indexed":false},{"internalType":"uint256[]","name":"proposedAmount","type":"uint256[]","indexed":false},{"internalType":"uint256","name":"proposedTime","type":"uint256","indexed":false}],"type":"event","name":"RescueProposed","anonymous":false},{"inputs":[{"internalType":"uint256","name":"payloadId_","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"disputeRescueFailedDeposits"},{"inputs":[{"internalType":"uint256","name":"payloadId_","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"finalizeRescueFailedDeposits"},{"inputs":[{"internalType":"uint256","name":"payloadId_","type":"uint256"}],"stateMutability":"view","type":"function","name":"getFailedDeposits","outputs":[{"internalType":"uint256[]","name":"superformIds","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256","name":"lastProposedTime","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"payloadId_","type":"uint256"},{"internalType":"uint256[]","name":"proposedAmounts_","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"proposeRescueFailedDeposits"},{"inputs":[{"internalType":"uint256","name":"payloadId_","type":"uint256"},{"internalType":"address[]","name":"finalTokens_","type":"address[]"},{"internalType":"uint256[]","name":"finalAmounts_","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"updateDepositPayload"},{"inputs":[{"internalType":"uint256","name":"payloadId_","type":"uint256"},{"internalType":"bytes[]","name":"txData_","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"updateWithdrawPayload"},{"inputs":[{"internalType":"uint256","name":"finalAmount_","type":"uint256"},{"internalType":"uint256","name":"amount_","type":"uint256"},{"internalType":"uint256","name":"maxSlippage_","type":"uint256"}],"stateMutability":"view","type":"function","name":"validateSlippage","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"disputeRescueFailedDeposits(uint256)":{"details":"allows refund receivers to challenge their final receiving token amounts on failed deposits","params":{"payloadId_":"is the identifier of the cross-chain payload"}},"finalizeRescueFailedDeposits(uint256)":{"details":"allows anyone to settle refunds for unprocessed/failed deposits past the challenge period","params":{"payloadId_":"is the identifier of the cross-chain payload"}},"getFailedDeposits(uint256)":{"details":"allows users to read the superformIds that failed in a specific payloadId_","params":{"payloadId_":"is the identifier of the cross-chain payload."},"returns":{"amounts":"is the amounts of refund tokens issues","lastProposedTime":"is the refund proposed time","superformIds":"is the identifiers of superforms in the payloadId that got failed."}},"proposeRescueFailedDeposits(uint256,uint256[])":{"details":"allows accounts with {CORE_STATE_REGISTRY_PROCESSOR_ROLE} to rescue tokens on failed deposits","params":{"payloadId_":"is the identifier of the cross-chain payload.","proposedAmounts_":"is the array of proposed rescue amounts."}},"updateDepositPayload(uint256,address[],uint256[])":{"details":"allows accounts with {CORE_STATE_REGISTRY_UPDATER_ROLE} to modify a received cross-chain deposit payload.","params":{"finalAmounts_":"is the amount to be updated. NOTE: amounts cannot be updated beyond user specified safe slippage limit.","finalTokens_":"is the token received by the core state registry.","payloadId_":"is the identifier of the cross-chain payload to be updated."}},"updateWithdrawPayload(uint256,bytes[])":{"details":"allows accounts with {CORE_STATE_REGISTRY_UPDATER_ROLE} to modify a received cross-chain withdraw payload.","params":{"payloadId_":"is the identifier of the cross-chain payload to be updated.","txData_":"is the transaction data to be updated."}},"validateSlippage(uint256,uint256,uint256)":{"details":"used internally for try/catching","params":{"amount_":"is the indicated amount of tokens to be received","finalAmount_":"is the final amount of tokens received","maxSlippage_":"is the amount of acceptable slippage for the transaction"}}},"version":1},"userdoc":{"kind":"user","methods":{"disputeRescueFailedDeposits(uint256)":{"notice":"should challenge within the delay window configured on SuperRegistry"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/","ERC1155A/=lib/ERC1155A/src/","ds-test/=lib/ds-test/src/","erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/","pigeon/=lib/pigeon/src/","solady/=lib/pigeon/lib/solady/","solidity-stringutils/=lib/surl/lib/solidity-stringutils/","solmate/=lib/ERC1155A/lib/solmate/src/","super-vaults/=lib/super-vaults/src/","surl/=lib/surl/","v2-core/=lib/super-vaults/lib/v2-core/contracts/","v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/","v3-core/=lib/super-vaults/lib/v3-core/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/ICoreStateRegistry.sol":"ICoreStateRegistry"},"evmVersion":"paris","libraries":{}},"sources":{"src/interfaces/ICoreStateRegistry.sol":{"keccak256":"0xd404d698716c88105aa011473ec43625587454cb57014a1d3b2b1f4bb33548bc","urls":["bzz-raw://72f099223c06b2a0f6e6d20880c0f8f93de47774d4e34baa5cd7f841e42af982","dweb:/ipfs/QmRSRfRrQGVFRpugU2XYDrt6QokYzhNWfm7H9oTJ33vNry"],"license":"BUSL-1.1"}},"version":1},"id":149}