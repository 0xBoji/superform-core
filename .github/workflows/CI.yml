name: CI

concurrency:
  cancel-in-progress: true
  group: ${{github.workflow}}-${{github.ref}}

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  BSC_RPC_URL: ${{ secrets.BSC_RPC_URL }}
  ARBITRUM_RPC_URL: ${{ secrets.ARBITRUM_RPC_URL }}
  OPTIMISM_RPC_URL: ${{ secrets.OPTIMISM_RPC_URL }}
  ETHEREUM_RPC_URL: ${{ secrets.ETHEREUM_RPC_URL }}
  POLYGON_RPC_URL: ${{ secrets.POLYGON_RPC_URL }}
  AVALANCHE_RPC_URL: ${{ secrets.AVALANCHE_RPC_URL }}
  FANTOM_RPC_URL: ${{ secrets.FANTOM_RPC_URL }}

jobs:
  build:
    runs-on: "SuperformCore"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"
        with:
          submodules: "recursive"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Show the Foundry config"
        run: "forge config"

      - name: "Build and perform size checks"
        run: forge build --sizes

      - name: "Cache the build so that it can be re-used by the other jobs"
        uses: "actions/cache/save@v3"
        with:
          path: "out"
          key: "foundry-build-${{ github.sha }}"

      - name: "Add build summary"
        run: |
          echo "## Build result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  test:
    needs: ["build"]
    runs-on: "SuperformCore"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"
        with:
          submodules: "recursive"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Restore the cached build"
        uses: "actions/cache/restore@v3"
        with:
          fail-on-cache-miss: true
          key: "foundry-build-${{ github.sha }}"
          path: "out"

      - name: "Generate fuzz seed that changes weekly to avoid burning through RPC allowance"
        run: |
          echo "FOUNDRY_FUZZ_SEED=$(echo $(($EPOCHSECONDS / 604800)))" >> $GITHUB_ENV

      - name: "Run the fork tests against the optimized build"
        run: "forge test"

      - name: "Add test summary"
        run: |
          echo "## Fork tests result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  coverage:
    needs: ["build"]
    runs-on: "SuperformCore"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"
        with:
          submodules: "recursive"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Generate the coverage report using the unit and the integration tests"
        run: 'FOUNDRY_PROFILE=coverage forge coverage --match-path "test/**/*.sol" --report lcov'

      - name: "Upload coverage report to Codecov"
        uses: "codecov/codecov-action@v3"
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: "./lcov.info"

      - name: "Add coverage summary"
        run: |
          echo "## Coverage result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Uploaded to Codecov" >> $GITHUB_STEP_SUMMARY

  #slither:
  #  runs-on: ubuntu-latest
  # steps:
  #   - uses: actions/checkout@v3
  #   - name: Run Slither
  #     uses: crytic/slither-action@v0.3.0
  #     id: slither
  #     with:
  #       slither-args: '--exclude-low --exclude-medium --no-fail-pedantic --exclude-optimization --exclude-informational --filter-paths mock,interfaces,lib,tests --json-types console,detectors'
  #       fail-on: none
